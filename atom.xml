<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Learning and Doing</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-20T16:11:52.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页性能优化</title>
    <link href="http://yoursite.com/2018/06/21/2018.6.21/"/>
    <id>http://yoursite.com/2018/06/21/2018.6.21/</id>
    <published>2018-06-21T04:40:15.000Z</published>
    <updated>2018-06-20T16:11:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>有些网页响应非常缓慢，占用大量的CPU和内存，浏览起来常常有卡顿，页面的动画效果也不流畅</p>
<h1 id="网页生成的过程"><a href="#网页生成的过程" class="headerlink" title="网页生成的过程"></a>网页生成的过程</h1><a id="more"></a>
<p>1.HTML代码转化成DOM</p>
<p>2.CSS代码转化成CSSOM</p>
<p>3.结合DOM和CSSOM，生成一棵渲染树</p>
<p>4.生成布局，即将所有渲染树的所有节点进行平面合成</p>
<p>5.将布局绘制在屏幕上</p>
<blockquote>
<p>“生成布局”（flow）和”绘制”（paint）这两步，合称为”渲染”（render）</p>
</blockquote>
<h1 id="重排和重绘"><a href="#重排和重绘" class="headerlink" title="重排和重绘"></a>重排和重绘</h1><p>重新渲染，就需要重新生成布局和重新绘制。前者叫做”重排”（reflow），后者叫做”重绘”（repaint）</p>
<p>以下三种情况，会导致网页重新渲染</p>
<p>1.修改DOM</p>
<p>2.修改样式表</p>
<p>3.用户事件</p>
<h1 id="对于性能的影响"><a href="#对于性能的影响" class="headerlink" title="对于性能的影响"></a>对于性能的影响</h1><p>提高网页性能，就是要降低”重排”和”重绘”的频率和成本，尽量少触发重新渲染</p>
<p>一般来说，样式的写操作之后，如果有下面这些属性的读操作，都会引发浏览器立即重新渲染</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// div元素有两个样式变动，但是浏览器只会触发一次重排和重绘</span></div><div class="line"><span class="keyword">div</span>.style.color = <span class="string">'blue'</span>;</div><div class="line"><span class="keyword">div</span>.style.marginTop = <span class="string">'30px'</span>;</div><div class="line"></div><div class="line"><span class="comment">// 如果读和写操作一起，就会触发两次重排和重绘</span></div><div class="line"><span class="keyword">div</span>.style.color = <span class="string">'blue'</span>;</div><div class="line"><span class="keyword">var</span> margin = parseInt(<span class="keyword">div</span>.style.marginTop);</div><div class="line"><span class="keyword">div</span>.style.marginTop = (margin + <span class="number">10</span>) + <span class="string">'px'</span>;</div></pre></td></tr></table></figure>
<p>规律如下:</p>
<p>1.样式表越简单，重排和重绘就越快</p>
<p>2.重排和重绘的DOM元素层级越高，成本就越高</p>
<p>3.table元素的重排和重绘成本，要高于div元素</p>
<h1 id="提高性能的九个技巧"><a href="#提高性能的九个技巧" class="headerlink" title="提高性能的九个技巧"></a>提高性能的九个技巧</h1><p>1.DOM 的多个读操作（或多个写操作），应该放在一起。不要两个读操作之间，加入一个写操作</p>
<p>2.如果某个样式是通过重排得到的，那么最好缓存结果。避免下一次用到的时候，浏览器又要重排</p>
<p>3.不要一条条地改变样式，而要通过改变class，或者csstext属性，一次性地改变样式</p>
<p>4.尽量使用离线DOM，而不是真实的网面DOM，来改变元素样式</p>
<p>5.先将元素设为display:none（需要1次重排和重绘），然后对这个节点进行100次操作，最后再恢复显示</p>
<p>6.position属性为absolute或fixed的元素，重排的开销会比较小，因为不用考虑它对其他元素的影响</p>
<p>7.只在必要的时候，才将元素的display属性设为可见，因为不可见的元素不影响重排和重绘。另外，visibility : hidden的元素只对重绘有影响，不影响重排</p>
<p>8.使用虚拟DOM的脚本库，比如React等</p>
<p>9.使用 window.requestAnimationFrame()、window.requestIdleCallback()这两个方法调节重新渲染</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有些网页响应非常缓慢，占用大量的CPU和内存，浏览起来常常有卡顿，页面的动画效果也不流畅&lt;/p&gt;
&lt;h1 id=&quot;网页生成的过程&quot;&gt;&lt;a href=&quot;#网页生成的过程&quot; class=&quot;headerlink&quot; title=&quot;网页生成的过程&quot;&gt;&lt;/a&gt;网页生成的过程&lt;/h1&gt;
    
    </summary>
    
      <category term="others" scheme="http://yoursite.com/categories/others/"/>
    
    
      <category term="网页性能" scheme="http://yoursite.com/tags/%E7%BD%91%E9%A1%B5%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>ES5数组扩展方法源代码</title>
    <link href="http://yoursite.com/2018/06/19/2018.6.19/"/>
    <id>http://yoursite.com/2018/06/19/2018.6.19/</id>
    <published>2018-06-19T04:40:15.000Z</published>
    <updated>2018-06-19T14:44:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="join"><a href="#join" class="headerlink" title="join"></a>join</h1><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var<span class="built_in"> array </span>= ['a','b','c']</div><div class="line">array.join('-') // 结果是'a-b-c'</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="源代码实现"><a href="#源代码实现" class="headerlink" title="源代码实现"></a>源代码实现</h2><p>1.array.join是Array.prototype.join对应的函数</p>
<p>2.array.join(‘-‘)等价于array.join.call(array,’-‘)</p>
<p>3.join函数的this和arguments[0]可以得到array和’-‘两个值</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.join = <span class="function"><span class="keyword">function</span>(<span class="params">char</span>)</span>&#123;</div><div class="line">  <span class="keyword">let</span> result = <span class="keyword">this</span>[<span class="number">0</span>] || <span class="string">''</span></div><div class="line">  <span class="keyword">let</span> length = <span class="keyword">this</span>.length</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>; i&lt; length; i++)&#123;</div><div class="line">      result += char + <span class="keyword">this</span>[i]</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h1><h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var a = ['a', 'b', 'c'];</div><div class="line">a.slice(1) // [<span class="string">"b"</span>, <span class="string">"c"</span>]</div><div class="line">a.slice(1, 2) // [<span class="string">"b"</span>]</div><div class="line">a.slice() // [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]</div><div class="line"></div><div class="line">// 将伪数组转化成数组<span class="built_in"></span></div><div class="line">array = Array.prototye.slice.call(arrayLike)</div><div class="line">或者<span class="built_in"></span></div><div class="line">array = [].slice.call(arrayLike)</div></pre></td></tr></table></figure>
<h2 id="源代码实现-1"><a href="#源代码实现-1" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Array<span class="variable">.prototype</span><span class="variable">.slice</span> = <span class="keyword">function</span>(<span class="keyword">begin</span>, <span class="keyword">end</span>)&#123;</div><div class="line">    <span class="keyword">let</span> result = []</div><div class="line">    <span class="keyword">begin</span> = <span class="keyword">begin</span> || <span class="number">0</span></div><div class="line">    <span class="keyword">end</span> = <span class="keyword">end</span> || <span class="keyword">this</span><span class="variable">.length</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="keyword">begin</span>; i&lt; <span class="keyword">end</span>; i++)&#123;</div><div class="line">        result<span class="variable">.push</span>(<span class="keyword">this</span>[i])</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h1><h2 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[<span class="symbol">'d</span>', <span class="symbol">'c</span>', <span class="symbol">'b</span>', <span class="symbol">'a</span>'].sort()</div><div class="line">// [<span class="symbol">'a</span>', <span class="symbol">'b</span>', <span class="symbol">'c</span>', <span class="symbol">'d</span>']</div><div class="line"></div><div class="line">[<span class="name">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>].sort()</div><div class="line">// [<span class="name">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div><div class="line"></div><div class="line">[<span class="name">11</span>, <span class="number">101</span>].sort()</div><div class="line">// [<span class="name">101</span>, <span class="number">11</span>]</div><div class="line"></div><div class="line">[<span class="name">10111</span>, <span class="number">1101</span>, <span class="number">111</span>].sort()</div><div class="line">// [<span class="name">10111</span>, <span class="number">1101</span>, <span class="number">111</span>]</div><div class="line"></div><div class="line">[<span class="name">10111</span>, <span class="number">1101</span>, <span class="number">111</span>].sort(<span class="name">function</span> (<span class="name">a</span>, b) &#123;</div><div class="line">  return a - b<span class="comment">;</span></div><div class="line">&#125;)</div><div class="line">// [<span class="name">111</span>, <span class="number">1101</span>, <span class="number">10111</span>]</div></pre></td></tr></table></figure>
<h2 id="源代码实现-2"><a href="#源代码实现-2" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 选择排序</span></div><div class="line"><span class="built_in">Array</span>.prototype.sort = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</div><div class="line">    fn = fn || <span class="function">(<span class="params">a,b</span>)=&gt;</span> a-b</div><div class="line">    <span class="keyword">let</span> roundCount = <span class="keyword">this</span>.length - <span class="number">1</span> <span class="comment">// 比较的轮数</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roundCount; i++)&#123;</div><div class="line">        <span class="keyword">let</span> minIndex = <span class="keyword">this</span>[i]</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> k = i+<span class="number">1</span>; k &lt; <span class="keyword">this</span>.length; k++)&#123;</div><div class="line">            <span class="keyword">if</span>( fn.call(<span class="literal">null</span>, <span class="keyword">this</span>[k],<span class="keyword">this</span>[i]) &lt; <span class="number">0</span> )&#123;</div><div class="line">                [ <span class="keyword">this</span>[i], <span class="keyword">this</span>[k] ] = [ <span class="keyword">this</span>[k], <span class="keyword">this</span>[i] ]</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h1><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[<span class="name">2</span>, <span class="number">5</span>, <span class="number">9</span>].forEach(<span class="name">function</span> (<span class="name">element</span>, index, array) &#123;</div><div class="line">  console.log('[' + index + '] = ' + element)</div><div class="line">&#125;)<span class="comment">;</span></div><div class="line">// [<span class="name">0</span>] = <span class="number">2</span></div><div class="line">// [<span class="name">1</span>] = <span class="number">5</span></div><div class="line">// [<span class="name">2</span>] = <span class="number">9</span></div></pre></td></tr></table></figure>
<h2 id="源代码实现-3"><a href="#源代码实现-3" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>)&#123;</div><div class="line">            fn.call(<span class="literal">undefined</span>, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><h2 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">numbers.map(<span class="function"><span class="keyword">function</span> <span class="params">(n)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> n + <span class="number">1</span></div><div class="line">&#125;);</div><div class="line"><span class="comment">// [2, 3, 4]</span></div><div class="line">numbers</div><div class="line"><span class="comment">// [1, 2, 3]</span></div></pre></td></tr></table></figure>
<h2 id="源代码实现-4"><a href="#源代码实现-4" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.map = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</div><div class="line">    <span class="keyword">let</span> result = []</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>) &#123;</div><div class="line">            result[i] = fn.call(<span class="literal">undefined</span>, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h1><h2 id="应用-4"><a href="#应用-4" class="headerlink" title="应用"></a>应用</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="name">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].filter(<span class="name">function</span> (<span class="name">elem</span>) &#123;</div><div class="line">  return (<span class="name">elem</span> &gt; <span class="number">3</span>)<span class="comment">;</span></div><div class="line">&#125;)</div><div class="line">// [<span class="name">4</span>, <span class="number">5</span>]</div></pre></td></tr></table></figure>
<h2 id="源代码实现-5"><a href="#源代码实现-5" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Arra.prototype.filter = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</div><div class="line">    <span class="keyword">let</span> result = []</div><div class="line">    <span class="keyword">let</span> temp</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>) &#123;</div><div class="line">            <span class="keyword">if</span>(temp = fn.call(<span class="literal">undefined</span>, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>) )&#123;</div><div class="line">                result.push(<span class="keyword">this</span>[i])</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h1><h2 id="应用-5"><a href="#应用-5" class="headerlink" title="应用"></a>应用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].reduce(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(a, b);</div><div class="line">    <span class="keyword">return</span> a + b;</div><div class="line">&#125;)</div><div class="line"><span class="comment">// 1 2</span></div><div class="line"><span class="comment">// 3 3</span></div><div class="line"><span class="comment">// 6 4</span></div><div class="line"><span class="comment">// 10 5</span></div><div class="line"><span class="comment">//最后结果：15</span></div></pre></td></tr></table></figure>
<h2 id="源代码实现-6"><a href="#源代码实现-6" class="headerlink" title="源代码实现"></a>源代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Arra.prototype.reduce = <span class="function"><span class="keyword">function</span>(<span class="params">fn, init</span>)</span>&#123;</div><div class="line">    <span class="keyword">let</span> result = init</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>) &#123;</div><div class="line">            result = fn.call(<span class="literal">undefined</span>, result, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;join&quot;&gt;&lt;a href=&quot;#join&quot; class=&quot;headerlink&quot; title=&quot;join&quot;&gt;&lt;/a&gt;join&lt;/h1&gt;&lt;h2 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h2&gt;&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var&lt;span class=&quot;built_in&quot;&gt; array &lt;/span&gt;= [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;array.join(&#39;-&#39;) // 结果是&#39;a-b-c&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS动画简介</title>
    <link href="http://yoursite.com/2018/06/15/2018.6.15/"/>
    <id>http://yoursite.com/2018/06/15/2018.6.15/</id>
    <published>2018-06-15T04:40:15.000Z</published>
    <updated>2018-06-20T14:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>CSS动画的两大组成部分：transition和animation</p>
<h1 id="CSS3Transition"><a href="#CSS3Transition" class="headerlink" title="CSS3Transition"></a>CSS3Transition</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>当鼠标放置于缩略图之上,缩略图会迅速变大,缩略图的变大是瞬间实现的<br><a id="more"></a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">height</span>:<span class="number">15px</span>;</div><div class="line">    <span class="attribute">width</span>:<span class="number">15px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">450px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>transition的作用在于，指定状态变化所需要的时间</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>指定transition适用的属性，只有height的变化需要1秒实现，其他变化（主要是width）依然瞬间实现</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span> height;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="transition-delay"><a href="#transition-delay" class="headerlink" title="transition-delay"></a>transition-delay</h2><p>同一行transition语句中，可以分别指定多个属性,height和width的变化是同时进行的，跟不指定它们没有差别</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span> height, <span class="number">1s</span> width;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>让height先发生变化，等结束以后，再让width发生变化。实现这一点很容易，就是为width指定一个delay参数,width在1秒之后，再开始变化，也就是延迟（delay）1秒</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span> height, <span class="number">1s</span> <span class="number">1s</span> width;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="transition-timing-function"><a href="#transition-timing-function" class="headerlink" title="transition-timing-function"></a>transition-timing-function</h2><p>transition的状态变化速度，默认不是匀速的，而是逐渐放慢，这叫做ease</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span> ease;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>除了ease以外，其他模式还包括</p>
<p>1.linear：匀速</p>
<p>2.ease-in：加速</p>
<p>3.ease-out：减速</p>
<p>4.cubic-bezier函数：自定义速度模式</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// cubic-bezier，可以使用工具网站来定制,会产生一个最后阶段放大过度、然后回缩的效果</span></div><div class="line">img&#123;</div><div class="line">    transition: <span class="number">1</span>s <span class="built_in">height</span> cubic-<span class="built_in">bezier</span>(<span class="number">.83</span>,<span class="number">.97</span>,<span class="number">.05</span>,<span class="number">1.44</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="transition的各项属性"><a href="#transition的各项属性" class="headerlink" title="transition的各项属性"></a>transition的各项属性</h2><p>transition的完整写法</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition</span>: <span class="number">1s</span> <span class="number">1s</span> height ease;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这其实是一个简写形式，可以单独定义成各个属性</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span>&#123;</div><div class="line">    <span class="attribute">transition-property</span>: height;</div><div class="line">    <span class="attribute">transition-duration</span>: <span class="number">1s</span>;</div><div class="line">    <span class="attribute">transition-delay</span>: <span class="number">1s</span>;</div><div class="line">    <span class="attribute">transition-timing-function</span>: ease;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="CSS3Animation"><a href="#CSS3Animation" class="headerlink" title="CSS3Animation"></a>CSS3Animation</h1><h2 id="基本用法-1"><a href="#基本用法-1" class="headerlink" title="基本用法"></a>基本用法</h2><p>CSS Animation需要指定动画一个周期持续的时间，以及动画效果的名称</p>
<p>当鼠标悬停在div元素上时，会产生名为rainbow的动画效果，持续时间为1秒。为此，我们还需要用keyframes关键字，定义rainbow效果</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">keyframes</span> rainbow &#123;</div><div class="line">  0% &#123; <span class="attribute">background</span>: <span class="number">#c00</span>; &#125;</div><div class="line">  50% &#123; <span class="attribute">background</span>: orange; &#125;</div><div class="line">  100% &#123; <span class="attribute">background</span>: yellowgreen; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>默认情况下，动画只播放一次。加入infinite关键字，可以让动画无限次播放</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow infinite;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>指定动画具体播放的次数，比如3次</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow <span class="number">3</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="animation-fill-mode"><a href="#animation-fill-mode" class="headerlink" title="animation-fill-mode"></a>animation-fill-mode</h2><p>动画结束以后，会立即从结束状态跳回到起始状态。forwards表示让动画停留在结束状态</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow forwards;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>animation-fill-mode还可以使用下列值</p>
<p>1.none：默认值，回到动画没开始时的状态</p>
<p>2.backwards：让动画回到第一帧的状态</p>
<p>3.both: 根据animation-direction（见后）轮流应用forwards和backwards规则</p>
<h2 id="animation-direction"><a href="#animation-direction" class="headerlink" title="animation-direction"></a>animation-direction</h2><p>动画循环播放时，每次都是从结束状态跳回到起始状态，再开始播放。animation-direction属性，可以改变这种行为</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@keyframes rainbow &#123;</div><div class="line">  0% &#123; <span class="attribute">background-color</span>: yellow; &#125;</div><div class="line">  100% &#123; <span class="attribute">background</span>: blue; &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 默认情况是，animation-direction等于normal</span></div><div class="line"><span class="comment">// 可以等于取alternate、reverse、alternate-reverse等值</span></div><div class="line"><span class="selector-tag">div</span>:hover &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow <span class="number">3</span> normal;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="animation的各项属性"><a href="#animation的各项属性" class="headerlink" title="animation的各项属性"></a>animation的各项属性</h2><p>animation也是一个简写形式</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> <span class="number">1s</span> rainbow linear <span class="number">3</span> forwards normal;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这是一个简写形式，可以分解成各个单独的属性</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation-name</span>: rainbow;</div><div class="line">  <span class="attribute">animation-duration</span>: <span class="number">1s</span>;</div><div class="line">  <span class="attribute">animation-timing-function</span>: linear;</div><div class="line">  <span class="attribute">animation-delay</span>: <span class="number">1s</span>;</div><div class="line">  <span class="attribute">animation-fill-mode</span>:forwards;</div><div class="line">  <span class="attribute">animation-direction</span>: normal;</div><div class="line">  <span class="attribute">animation-iteration-count</span>: <span class="number">3</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="keyframes的写法"><a href="#keyframes的写法" class="headerlink" title="keyframes的写法"></a>keyframes的写法</h2><p>keyframes关键字用来定义动画的各个状态</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@keyframes</span> rainbow &#123;</div><div class="line">  <span class="selector-tag">0%</span> &#123; <span class="attribute">background</span>: <span class="number">#c00</span> &#125;</div><div class="line">  <span class="selector-tag">50%</span> &#123; <span class="attribute">background</span>: orange &#125;</div><div class="line">  <span class="selector-tag">100%</span> &#123; <span class="attribute">background</span>: yellowgreen &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 0%可以用from代表，100%可以用to代表，等价于</span></div><div class="line"><span class="keyword">@keyframes</span> rainbow &#123;</div><div class="line">  <span class="selector-tag">from</span> &#123; <span class="attribute">background</span>: <span class="number">#c00</span> &#125;</div><div class="line">  <span class="selector-tag">50%</span> &#123; <span class="attribute">background</span>: orange &#125;</div><div class="line">  <span class="selector-tag">to</span> &#123; <span class="attribute">background</span>: yellowgreen &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>浏览器从一个状态向另一个状态过渡，是平滑过渡。steps函数可以实现分步过渡</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">1s</span> rainbow infinite <span class="built_in">steps</span>(10);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="animation-play-state"><a href="#animation-play-state" class="headerlink" title="animation-play-state"></a>animation-play-state</h2><p>动画播放过程中，会突然停止。这时，默认行为是跳回到动画的开始状态</p>
<p>如果想让动画保持突然终止时的状态，就要使用animation-play-state属性</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">animation</span>: spin <span class="number">1s</span> linear infinite;</div><div class="line">    <span class="attribute">animation-play-state</span>: paused;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">animation-play-state</span>: running;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS动画的两大组成部分：transition和animation&lt;/p&gt;
&lt;h1 id=&quot;CSS3Transition&quot;&gt;&lt;a href=&quot;#CSS3Transition&quot; class=&quot;headerlink&quot; title=&quot;CSS3Transition&quot;&gt;&lt;/a&gt;CSS3Transition&lt;/h1&gt;&lt;h2 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h2&gt;&lt;p&gt;当鼠标放置于缩略图之上,缩略图会迅速变大,缩略图的变大是瞬间实现的&lt;br&gt;
    
    </summary>
    
      <category term="HTML/CSS" scheme="http://yoursite.com/categories/HTML-CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>最好的学习方法</title>
    <link href="http://yoursite.com/2018/06/12/2018.6.12/"/>
    <id>http://yoursite.com/2018/06/12/2018.6.12/</id>
    <published>2018-06-12T04:40:15.000Z</published>
    <updated>2018-06-20T14:58:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天看了连岳的《最好的学习方法》，此文观点我非常认同;既最好的学习方法是复述。看完一本书，你能把要点转述给听众，基本上就掌握了,好处如下<br><a id="more"></a><br>1、教别人的时候，自己的知识不仅不会失去，还可以更精进</p>
<p>2、可以上升到更重要的阶层。是的，任何一个群体最后都会形成等级。一个聪明的、愿意传授知识的人，一定会在上等阶层</p>
<p>3、以后在学习上更容易得到同学的帮助</p>
<p>我也一直在坚持这种学习方法,到今年6月为止，我写Blog已经满1.5年了，一共写了接近40篇,今后应该还会继续写下去;为什么要写Blog？如下七点</p>
<h1 id="学会记录技术知识及总结"><a href="#学会记录技术知识及总结" class="headerlink" title="学会记录技术知识及总结"></a>学会记录技术知识及总结</h1><p>我刚开始的时候也不知道该怎么写,经过摸索,慢慢知道如何将阅读过得技术知识重点记录及日常总结</p>
<h1 id="熟悉Blog工具"><a href="#熟悉Blog工具" class="headerlink" title="熟悉Blog工具"></a>熟悉Blog工具</h1><p>在搭建blog的时候就需要用到命令行及软件,这本身也是种学习</p>
<h1 id="便于更好地安排时间"><a href="#便于更好地安排时间" class="headerlink" title="便于更好地安排时间"></a>便于更好地安排时间</h1><p>写作Blog花费的时间比知识过脑子花的时间多几十倍。但是每天我们又有很多时间被无谓地浪费了。坚持写作Blog的过程，也是进行更好的时间安排的过程</p>
<h1 id="便于你了解自己是否可以长期做一件喜欢的事情"><a href="#便于你了解自己是否可以长期做一件喜欢的事情" class="headerlink" title="便于你了解自己是否可以长期做一件喜欢的事情"></a>便于你了解自己是否可以长期做一件喜欢的事情</h1><p>长期坚持一件事情后,你会变得自信,相信自己是一个自律的人,对以后再坚持另一件兴趣爱好同样能坚持下去</p>
<h1 id="便于体验Blog文化"><a href="#便于体验Blog文化" class="headerlink" title="便于体验Blog文化"></a>便于体验Blog文化</h1><p>Blog的世界有一种无形的礼仪、风格和用语;如果你是技术人员,无论是面试者还是被面试者,都可以blog通过表达自己及理解他人,减少筛选时间</p>
<h1 id="便于你形成和了解自我"><a href="#便于你形成和了解自我" class="headerlink" title="便于你形成和了解自我"></a>便于你形成和了解自我</h1><p>长期写作Blog最大的好处之一就是，写着写着，你的自我会变得越来越清晰。你最终会明白自己是一个什么样的人，以及自己热爱的又是什么东西</p>
<h1 id="帮助你找到读者"><a href="#帮助你找到读者" class="headerlink" title="帮助你找到读者"></a>帮助你找到读者</h1><p>与他人交流是生命最大的乐趣之一;写作Blog可以帮助我们更好地做到这一点</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天看了连岳的《最好的学习方法》，此文观点我非常认同;既最好的学习方法是复述。看完一本书，你能把要点转述给听众，基本上就掌握了,好处如下&lt;br&gt;
    
    </summary>
    
      <category term="lifes" scheme="http://yoursite.com/categories/lifes/"/>
    
    
      <category term="学习方法" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的new</title>
    <link href="http://yoursite.com/2018/06/09/2018.6.9/"/>
    <id>http://yoursite.com/2018/06/09/2018.6.9/</id>
    <published>2018-06-09T05:40:15.000Z</published>
    <updated>2018-06-10T15:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="制造一个程序员"><a href="#制造一个程序员" class="headerlink" title="制造一个程序员"></a>制造一个程序员</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> 程序员 = &#123;</div><div class="line">  ID: <span class="number">1</span>, <span class="comment">// 用于区分每个程序员</span></div><div class="line">  程序员类型:<span class="string">"前端"</span>,</div><div class="line">  技能: JavaScript,</div><div class="line">  年龄: <span class="number">18</span>, </div><div class="line">  行走:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">  奔跑:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">  死亡:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">&#125;</div><div class="line">清华.制造(程序员)</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="制造一百个程序员"><a href="#制造一百个程序员" class="headerlink" title="制造一百个程序员"></a>制造一百个程序员</h1><h2 id="循环100次"><a href="#循环100次" class="headerlink" title="循环100次"></a>循环100次</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> 程序员们 = []</div><div class="line"><span class="keyword">var</span> 程序员</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)&#123;</div><div class="line">    <span class="keyword">var</span> 程序员 = &#123;</div><div class="line">      ID: <span class="number">1</span>, <span class="comment">// 用于区分每个程序员</span></div><div class="line">      程序员类型:<span class="string">"前端"</span>,</div><div class="line">      技能: JavaScript,</div><div class="line">      年龄: <span class="number">18</span>, </div><div class="line">      行走:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">      奔跑:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">      死亡:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">    &#125;</div><div class="line">  程序员们.push(程序员)</div><div class="line">&#125;</div><div class="line">清华.批量制造(程序员们)</div></pre></td></tr></table></figure>
<h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><p>创建一个「程序员原型」，然后让「程序员」的 <strong>proto</strong> 指向「程序员原型」</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> 程序员原型 = &#123;</div><div class="line">  程序员类型:<span class="string">"前端"</span>,</div><div class="line">  技能: JavaScript,</div><div class="line">  年龄: <span class="number">18</span>, </div><div class="line">  行走:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">  奔跑:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">  死亡:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> 程序员们 = []</div><div class="line"><span class="keyword">var</span> 程序员</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)&#123;</div><div class="line">  程序员 = &#123;</div><div class="line">    ID: i, <span class="comment">// ID 不能重复</span></div><div class="line">  &#125;</div><div class="line">  程序员.__proto__ = 程序员原型 </div><div class="line">  程序员们.push(程序员)</div><div class="line">&#125;</div><div class="line">清华.批量制造(程序员们)</div></pre></td></tr></table></figure>
<h2 id="优雅"><a href="#优雅" class="headerlink" title="优雅"></a>优雅</h2><p>创建一个程序员的代码分散在两个地方很不优雅，用一个函数把这两部分联系起来</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> 程序员(<span class="params">ID</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> 临时对象 = &#123;&#125;</div><div class="line">  临时对象.__proto__ = 程序员.原型</div><div class="line">  临时对象.ID = ID</div><div class="line">  <span class="keyword">return</span> 临时对象</div><div class="line">&#125;</div><div class="line"></div><div class="line">程序员.原型 = &#123;</div><div class="line">  程序员类型:<span class="string">"前端"</span>,</div><div class="line">  技能: JavaScript,</div><div class="line">  年龄: <span class="number">18</span>, </div><div class="line">  行走:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">  奔跑:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">  死亡:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 保存为文件：程序员.js</span></div><div class="line"></div><div class="line">引用「程序员」来创建程序员</div><div class="line"><span class="keyword">var</span> 程序员们 = []</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)&#123;</div><div class="line">  程序员们.push(程序员(i))</div><div class="line">&#125;</div><div class="line">清华.批量制造(程序员们)</div></pre></td></tr></table></figure>
<h1 id="new的作用"><a href="#new的作用" class="headerlink" title="new的作用"></a>new的作用</h1><p>在程序员前面使用new关键字，少做三件事情</p>
<ul>
<li>不用创建临时对象，因为 new 会帮你做</li>
<li>不用绑定原型，因为 new 会帮你做</li>
<li>不用 return 临时对象，因为 new 会帮你做</li>
</ul>
<h1 id="new的改进"><a href="#new的改进" class="headerlink" title="new的改进"></a>new的改进</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> 程序员(<span class="params">ID</span>)</span>&#123;</div><div class="line">  <span class="keyword">this</span>.ID = ID</div><div class="line">&#125;</div><div class="line">程序员.prototype = &#123;</div><div class="line">  程序员类型:<span class="string">"前端"</span>,</div><div class="line">  技能: JavaScript,</div><div class="line">  年龄: <span class="number">18</span>, </div><div class="line">  行走:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">  奔跑:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">  死亡:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 保存为文件：程序员.js</span></div><div class="line"></div><div class="line">然后是创建程序员（加了一个 <span class="keyword">new</span> 关键字）</div><div class="line"><span class="keyword">var</span> 程序员们 = []</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)&#123;</div><div class="line">  程序员们.push(<span class="keyword">new</span> 程序员(i))</div><div class="line">&#125;</div><div class="line"></div><div class="line">程序员.批量制造(程序员们)</div></pre></td></tr></table></figure>
<h1 id="constructor属性"><a href="#constructor属性" class="headerlink" title="constructor属性"></a>constructor属性</h1><p>new 操作为了记录「临时对象是由哪个函数创建的」，所以预先给「程序员.prototype」加了一个constructor属性</p>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">程序员.proto<span class="keyword">type</span> = &#123;</div><div class="line">  constructor: 程序员</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重新对「士兵.prototype」赋值，那么这个 constructor 属性,所以应该这么写</p>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">程序员.proto<span class="keyword">type</span>.程序员类型 = "前端"</div><div class="line">程序员.proto<span class="keyword">type</span>.技能 = "<span class="type">JavaScript</span>"</div><div class="line">程序员.proto<span class="keyword">type</span>.年龄 = 18</div><div class="line">程序员.proto<span class="keyword">type</span>.行走 = function()&#123; /*走俩步的代码*/&#125;</div><div class="line">程序员.proto<span class="keyword">type</span>.奔跑 = function()&#123; /*狂奔的代码*/  &#125;</div><div class="line">程序员.proto<span class="keyword">type</span>.死亡 = function()&#123; /*<span class="type">Go</span> die*/    &#125;</div></pre></td></tr></table></figure>
<p>给 constructor 重新赋值</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">程序员.prototype = &#123;</div><div class="line">  constructor: 程序员,</div><div class="line">  程序员类型:<span class="string">"前端"</span>,</div><div class="line">  技能: JavaScript,</div><div class="line">  年龄: <span class="number">18</span>, </div><div class="line">  行走:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*走俩步的代码*/</span>&#125;,</div><div class="line">  奔跑:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*狂奔的代码*/</span>  &#125;,</div><div class="line">  死亡:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="comment">/*Go die*/</span>    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;制造一个程序员&quot;&gt;&lt;a href=&quot;#制造一个程序员&quot; class=&quot;headerlink&quot; title=&quot;制造一个程序员&quot;&gt;&lt;/a&gt;制造一个程序员&lt;/h1&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; 程序员 = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ID: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 用于区分每个程序员&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  程序员类型:&lt;span class=&quot;string&quot;&gt;&quot;前端&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  技能: JavaScript,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  年龄: &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  行走:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/*走俩步的代码*/&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  奔跑:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/*狂奔的代码*/&lt;/span&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  死亡:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/*Go die*/&lt;/span&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;清华.制造(程序员)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的this值</title>
    <link href="http://yoursite.com/2018/06/08/2018.6.8/"/>
    <id>http://yoursite.com/2018/06/08/2018.6.8/</id>
    <published>2018-06-08T05:40:15.000Z</published>
    <updated>2018-06-07T16:38:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="this面试题"><a href="#this面试题" class="headerlink" title="this面试题"></a>this面试题</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">var</span> obj = &#123;</div><div class="line">  foo: function()&#123;</div><div class="line">    console.log(this)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">var</span> bar = obj<span class="selector-class">.foo</span></div><div class="line">obj.foo() <span class="comment">// 打印出的 this 是 obj</span></div><div class="line"><span class="function"><span class="title">bar</span><span class="params">()</span></span> <span class="comment">// 打印出的 this 是 window</span></div></pre></td></tr></table></figure>
<a id="more"></a> 
<h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><p>JS（ES5）里面有三种函数调用形式</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span><span class="params">(p1, p2)</span> </span></div><div class="line">obj.<span class="keyword">func</span>(p1, p2)</div><div class="line"><span class="function"><span class="keyword">func</span>.<span class="title">call</span><span class="params">(context, p1, p2)</span></span></div></pre></td></tr></table></figure>
<p>第三种调用形式，才是正常调用形式</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span>.<span class="title">call</span><span class="params">(context, p1, p2)</span></span></div></pre></td></tr></table></figure>
<p>其他两种等价地变为 call 形式</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span><span class="params">(p1, p2)</span> 等价于</span></div><div class="line"><span class="function"><span class="keyword">func</span>.<span class="title">call</span><span class="params">(undefined, p1, p2)</span></span></div><div class="line"></div><div class="line">obj.<span class="keyword">func</span>(p1, p2) 等价于</div><div class="line">obj.<span class="keyword">func</span>.<span class="built_in">call</span>(obj, p1, p2)</div></pre></td></tr></table></figure>
<blockquote>
<p>this一个函数时传的context</p>
</blockquote>
<h1 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h1><p>传的 context 就 null 或者 undefined，那么 window 对象就是默认的 context,打印结果是window</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">function <span class="function"><span class="keyword">func</span><span class="params">()</span>&#123;</span></div><div class="line">  console.<span class="built_in">log</span>(this)</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span></span></div><div class="line"></div><div class="line">// 等价于</div><div class="line">function <span class="function"><span class="keyword">func</span><span class="params">()</span>&#123;</span></div><div class="line">  console.<span class="built_in">log</span>(this)</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">func</span>.<span class="title">call</span><span class="params">(undefined)</span> // 可以简写为 <span class="title">func</span>.<span class="title">call</span><span class="params">()</span></span></div></pre></td></tr></table></figure>
<p>希望这里的 this 不是 window,修改为</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span>.<span class="title">call</span><span class="params">(obj)</span></span> <span class="comment">// 那么里面的 this 就是 obj 对象了</span></div></pre></td></tr></table></figure>
<h1 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h1><p>this 就是 obj</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">  <span class="attr">foo</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>)</div><div class="line">  &#125;</div><div class="line">&#125; </div><div class="line">obj.foo() </div><div class="line"></div><div class="line"><span class="comment">// 按照「转换代码」，我们将 obj.foo() 转换为</span></div><div class="line">obj.foo.call(obj)</div></pre></td></tr></table></figure>
<h1 id="面试题答案"><a href="#面试题答案" class="headerlink" title="面试题答案"></a>面试题答案</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">var</span> obj = &#123;</div><div class="line">  foo: function()&#123;</div><div class="line">    console.log(this)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">var</span> bar = obj<span class="selector-class">.foo</span></div><div class="line">obj.foo() <span class="comment">// 转换为 obj.foo.call(obj)，this 就是 obj</span></div><div class="line"><span class="function"><span class="title">bar</span><span class="params">()</span></span> </div><div class="line"><span class="comment">// 转换为 bar.call()</span></div><div class="line"><span class="comment">// 由于没有传 context</span></div><div class="line"><span class="comment">// 所以 this 就是 undefined</span></div><div class="line"><span class="comment">// 最后浏览器给你一个默认的 this —— window 对象</span></div></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul>
<li>this 就是你 call 一个函数时，传入的第一个参数</li>
<li>如果你的函数调用形式不是 call 形式，请按照「转换代码」将其转换为 call 形式</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;this面试题&quot;&gt;&lt;a href=&quot;#this面试题&quot; class=&quot;headerlink&quot; title=&quot;this面试题&quot;&gt;&lt;/a&gt;this面试题&lt;/h1&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  foo: function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(this)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;var&lt;/span&gt; bar = obj&lt;span class=&quot;selector-class&quot;&gt;.foo&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;obj.foo() &lt;span class=&quot;comment&quot;&gt;// 打印出的 this 是 obj&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 打印出的 this 是 window&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端MVC设计模式</title>
    <link href="http://yoursite.com/2018/06/07/2018.6.7/"/>
    <id>http://yoursite.com/2018/06/07/2018.6.7/</id>
    <published>2018-06-07T05:40:15.000Z</published>
    <updated>2018-06-07T13:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h1><p>一个页面分为两部分，浏览器上面的工作交给前端做，服务器上面的工作交给后端做</p>
<h1 id="页面开发流程"><a href="#页面开发流程" class="headerlink" title="页面开发流程"></a>页面开发流程</h1><a id="more"></a>
<h2 id="浏览器第一次加载的页面只是一个占位符"><a href="#浏览器第一次加载的页面只是一个占位符" class="headerlink" title="浏览器第一次加载的页面只是一个占位符"></a>浏览器第一次加载的页面只是一个占位符</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="前端将其他-HTML-和从服务器获取的数据填到占位符里"><a href="#前端将其他-HTML-和从服务器获取的数据填到占位符里" class="headerlink" title="前端将其他 HTML 和从服务器获取的数据填到占位符里"></a>前端将其他 HTML 和从服务器获取的数据填到占位符里</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$.get(<span class="string">'/user/1'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">user</span>)</span>&#123;</div><div class="line">  template = (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">  )</div><div class="line">  content = template.replace(<span class="string">'&#123;&#123; name &#125;&#125;'</span>, user.name)</div><div class="line">  $app.html(content)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="用户提交数据时，前端用-AJAX-提交异步请求"><a href="#用户提交数据时，前端用-AJAX-提交异步请求" class="headerlink" title="用户提交数据时，前端用 AJAX 提交异步请求"></a>用户提交数据时，前端用 AJAX 提交异步请求</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$form.on(<span class="string">'submit'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">  $.post(<span class="string">'/user/1'</span>, $form.serialize()).then(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">    alert(<span class="string">'提交成功'</span>)</div><div class="line">  &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h1 id="前端MVC模式"><a href="#前端MVC模式" class="headerlink" title="前端MVC模式"></a>前端MVC模式</h1><h2 id="Model-封装数据操作"><a href="#Model-封装数据操作" class="headerlink" title="Model-封装数据操作"></a>Model-封装数据操作</h2><p>对用户的增删改成其实都是异步请求,数据相关的操作就都放到这个 model 上</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> userModel = &#123;</div><div class="line">  <span class="attr">find</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> $.get(<span class="string">'/user/'</span>+id).then(<span class="function"><span class="keyword">function</span>(<span class="params">user</span>)</span>&#123;</div><div class="line">      $.extend(userModel, user)</div><div class="line">    &#125;)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">save</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id, data</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> $.post(<span class="string">'/user/'</span>+id, data)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 用户数据的校验</span></div><div class="line">userModel.validate = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.name === <span class="string">''</span>) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.password === <span class="string">''</span>) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="View-视图渲染"><a href="#View-视图渲染" class="headerlink" title="View-视图渲染"></a>View-视图渲染</h2><p>前端的视图也是 HTML,将数据与 HTML 混合起来</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">content</span> = template.replace(<span class="string">'&#123;&#123; name &#125;&#125;'</span>, user.name)</div></pre></td></tr></table></figure>
<p>前端们模板引擎，如 Handlebars.js、React</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">content = templateEngine( template, <span class="keyword">user</span> <span class="title">)</span></div></pre></td></tr></table></figure>
<h2 id="Controller-控制器"><a href="#Controller-控制器" class="headerlink" title="Controller-控制器"></a>Controller-控制器</h2><p>将 content 塞到页面里</p>
<p>浏览器事件监听 - 用户点击视图后去更新数据</p>
<p>数据事件监听 - user 数据更新后去更新视图</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">controller = &#123;</div><div class="line">  model: userModel,</div><div class="line">  element: $app,</div><div class="line">  <span class="keyword">template</span>: '&lt;h1&gt;&#123;&#123; name &#125;&#125; &lt;/h1&gt;........',</div><div class="line">  events: &#123;</div><div class="line">    'click button': 'onButtonClick',</div><div class="line">    'submit form' : 'onSubmitForm'</div><div class="line">  &#125;,</div><div class="line">  modelEvents: &#123;</div><div class="line">    'update': 'onModelUpdate',</div><div class="line">    'remove': 'onModelRemove'</div><div class="line">  &#125;,</div><div class="line">  init: function()&#123;</div><div class="line">    <span class="keyword">var</span> content = templateEngine(this.<span class="keyword">template</span>, userModel)</div><div class="line">    this.element.append($app)</div><div class="line">    </div><div class="line">    // 遍历 events 并绑定对应的方法</div><div class="line">    // 遍历 modelEvents 并绑定对应的方法</div><div class="line">  &#125;,</div><div class="line">  onButtonClick: function()<span class="meta">&#123;...&#125;</span>,</div><div class="line">  onSubmitForm: function()<span class="meta">&#123;...&#125;</span>,</div><div class="line">  onModelUpdate: function()<span class="meta">&#123;...&#125;</span>,</div><div class="line">  onModelRemove: function()<span class="meta">&#123;...&#125;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>控制器作用</p>
<ul>
<li><p>Controller 监听 Model 变化，Model 一变，Controller 就会去更新 View</p>
</li>
<li><p>Controller 监听用户交互，用户点了提交或修改按钮，Controller 就要去更新 Model</p>
</li>
</ul>
<h1 id="Router-路由"><a href="#Router-路由" class="headerlink" title="Router-路由"></a>Router-路由</h1><p>只是在每个页面局部使用 MVC，那么就不需要路由</p>
<p>整站是一个单页面，那么就要处理 URL 的变化</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前后端分离&quot;&gt;&lt;a href=&quot;#前后端分离&quot; class=&quot;headerlink&quot; title=&quot;前后端分离&quot;&gt;&lt;/a&gt;前后端分离&lt;/h1&gt;&lt;p&gt;一个页面分为两部分，浏览器上面的工作交给前端做，服务器上面的工作交给后端做&lt;/p&gt;
&lt;h1 id=&quot;页面开发流程&quot;&gt;&lt;a href=&quot;#页面开发流程&quot; class=&quot;headerlink&quot; title=&quot;页面开发流程&quot;&gt;&lt;/a&gt;页面开发流程&lt;/h1&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="MVC" scheme="http://yoursite.com/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript实现异步</title>
    <link href="http://yoursite.com/2018/06/04/2018.6.4/"/>
    <id>http://yoursite.com/2018/06/04/2018.6.4/</id>
    <published>2018-06-04T05:40:15.000Z</published>
    <updated>2018-06-07T13:27:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript的执行环境是单线程,只能一次完成一件任务</p>
<p>坏处: 浏览器无响应、JavaScript代码死循环</p>
<p>Javascript语言将任务的执行模式分成两种：同步和异步<br><a id="more"></a><br>解决方法:异步</p>
<p>异步:每一个任务有一个或多个回调函数,前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的</p>
<h1 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h1><p>普通函数f1和f2,后者等待前者的执行结果</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">f1</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">f2</span><span class="params">()</span></span></div></pre></td></tr></table></figure>
<p>改写f1，把f2写成f1的回调函数,两个函数异步执行</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span><span class="params">(callback)</span> </span>&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// f1的任务代码</span></div><div class="line">        callback();</div><div class="line">    &#125;, <span class="number">1000</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">f1(f2);</div></pre></td></tr></table></figure>
<p>优点:简单、容易理解和部署，缺点:不利于代码的阅读和维护</p>
<h1 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h1><p>任务的执行不取决于代码的顺序，而取决于某个事件是否发生</p>
<p>为f1绑定一个事件,当f1发生done事件，就执行f2</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f1.<span class="literal">on</span>(<span class="string">'done'</span>, f2);</div></pre></td></tr></table></figure>
<p>f1.trigger(‘done’)表示，执行完成后，立即触发done事件，从而开始执行f2</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span><span class="params">()</span> </span>&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// f1的任务代码</span></div><div class="line">        f1.trigger(<span class="string">'done'</span>);</div><div class="line">    &#125;, <span class="number">1000</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>优点:比较容易理解，可以绑定多个事件,有利于实现模块化，缺点：整个程序都要变成事件驱动型，运行流程会变得很不清晰</p>
<h1 id="发布-订阅"><a href="#发布-订阅" class="headerlink" title="发布/订阅"></a>发布/订阅</h1><p>发布一个信号，其他任务向信号中心订阅这个信号，从而知道什么时候自己可以开始执行。这就叫做发布/订阅模式</p>
<p>f2向”信号中心”jQuery订阅”done”信号</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">jQuery.subscribe</span>(<span class="string">"done"</span>, <span class="built_in">f2</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>jQuery.publish(“done”)的意思是，f1执行完成后，向”信号中心”jQuery发布”done”信号，从而引发f2的执行</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span><span class="params">()</span> </span>&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// f1的任务代码</span></div><div class="line">        jQuery.publish(<span class="string">"done"</span>);</div><div class="line">    &#125;, <span class="number">1000</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>f2完成执行后，也可以取消订阅</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">jQuery.unsubscribe</span>(<span class="string">"done"</span>, <span class="built_in">f2</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<h1 id="Promises对象"><a href="#Promises对象" class="headerlink" title="Promises对象"></a>Promises对象</h1><p>每一个异步任务返回一个Promise对象，该对象有一个then方法，允许指定回调函数</p>
<p>f1的回调函数f2</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">f1</span>()<span class="selector-class">.then</span>(f2);</div></pre></td></tr></table></figure>
<p>f1要进行如下改写</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> dfd = $.Deferred();</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">// f1的任务代码</span></div><div class="line">        dfd.resolve();</div><div class="line">    &#125;, <span class="number">500</span>);</div><div class="line">    <span class="keyword">return</span> dfd.promise;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>指定多个回调函数</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">f1</span>()<span class="selector-class">.then</span>(f2)<span class="selector-class">.then</span>(f3);</div></pre></td></tr></table></figure>
<p>指定发生错误时的回调函数</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">f1</span>()<span class="selector-class">.then</span>(f2)<span class="selector-class">.fail</span>(f3);</div></pre></td></tr></table></figure>
<h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="同步的写法"><a href="#同步的写法" class="headerlink" title="同步的写法"></a>同步的写法</h2><p>taskC 一定要等 taskB 执行完了才能执行，这就是同步</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">function taskB()&#123;</div><div class="line">  <span class="selector-tag">var</span> response = $.ajax(&#123;</div><div class="line">    url:<span class="string">"/data.json"</span>,</div><div class="line">    async: false <span class="comment">// 注意这里 async 为 false，表示是同步</span></div><div class="line">  &#125;)</div><div class="line">  return response <span class="comment">// 十秒钟后，返回 response</span></div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="function"><span class="title">taskA</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">taskB</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">taskC</span><span class="params">()</span></span></div><div class="line"></div><div class="line">执行顺序</div><div class="line">A -&gt; B -&gt; AJAX 请求 -&gt; C ---------------------------</div></pre></td></tr></table></figure>
<h2 id="异步的写法"><a href="#异步的写法" class="headerlink" title="异步的写法"></a>异步的写法</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">function taskB()&#123;</div><div class="line">  <span class="selector-tag">var</span> result = $.ajax(&#123;</div><div class="line">    url:<span class="string">"/data.json"</span>,</div><div class="line">    async: true <span class="comment">// 异步</span></div><div class="line">  &#125;)</div><div class="line">  return result <span class="comment">// 一定要注意，现在的 result 不是上面的 response</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="title">taskA</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">taskB</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">taskC</span><span class="params">()</span></span></div><div class="line"></div><div class="line">执行顺序</div><div class="line">A -&gt; B -&gt; C ---------------------------------------</div><div class="line">       -&gt; AJAX 请求 --------------------------------</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript的执行环境是单线程,只能一次完成一件任务&lt;/p&gt;
&lt;p&gt;坏处: 浏览器无响应、JavaScript代码死循环&lt;/p&gt;
&lt;p&gt;Javascript语言将任务的执行模式分成两种：同步和异步&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的10个设计缺陷</title>
    <link href="http://yoursite.com/2018/06/02/2018.6.2-1/"/>
    <id>http://yoursite.com/2018/06/02/2018.6.2-1/</id>
    <published>2018-06-01T18:40:15.000Z</published>
    <updated>2018-06-02T06:17:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>为什么现在的前端学JavaScript要学那么多的版本,并且一年一大更,半年一小更,还要用到很多js的库、模块化工具</p>
<p>就是因为JavaScript的设计缺陷</p>
<p>这篇主要是参考《JavaScript语言精髓》（JavaScript: The Good Parts）,总结的非常到位<br><a id="more"></a></p>
<h1 id="大型程序不宜"><a href="#大型程序不宜" class="headerlink" title="大型程序不宜"></a>大型程序不宜</h1><p>Javascript没有名称空间（namespace），很难模块化</p>
<h1 id="标准库小"><a href="#标准库小" class="headerlink" title="标准库小"></a>标准库小</h1><p>Javascript提供的标准函数库非常小，只能完成一些基本操作</p>
<h1 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a>null和undefined</h1><p>传说是道格拉斯喝醉酒的时候,重复了发明了这两个数据类型,null和undefined可以认为是一样的</p>
<h1 id="全局变量神出鬼没"><a href="#全局变量神出鬼没" class="headerlink" title="全局变量神出鬼没"></a>全局变量神出鬼没</h1><p>函数内部可以生成全局变量</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = <span class="number">1</span><span class="comment">;</span></div><div class="line">(<span class="name">function</span>()&#123;</div><div class="line">    b=2<span class="comment">;</span></div><div class="line">    alert(<span class="name">a</span>)<span class="comment">;</span></div><div class="line">&#125;)()<span class="comment">; // 1</span></div><div class="line">alert(<span class="name">b</span>)<span class="comment">; //2</span></div></pre></td></tr></table></figure>
<h1 id="行尾分号自动加"><a href="#行尾分号自动加" class="headerlink" title="行尾分号自动加"></a>行尾分号自动加</h1><p>Javascript的所有语句，都可以不用以分号结尾</p>
<p>比如，下面这个函数根本无法达到预期的结果，返回值不是一个对象，而是undefined</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">return</span></div><div class="line">    &#123;</div><div class="line">        i=<span class="number">1</span></div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>原因是解释器自动在return语句后面加上了分号</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">    &#123;</div><div class="line">        i=<span class="number">1</span></div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加号运算符"><a href="#加号运算符" class="headerlink" title="加号运算符"></a>加号运算符</h1><p>+号作为运算符，有两个含义，可以表示数字与数字的和，也可以表示字符与字符的连接</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">alert</span>(<span class="number">1</span>+<span class="number">10</span>); <span class="comment">// 11</span></div><div class="line"><span class="selector-tag">alert</span>(<span class="string">"1"</span>+<span class="string">"10"</span>); <span class="comment">// 110</span></div></pre></td></tr></table></figure>
<h1 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h1><p>NaN是一种数字，表示超出了解释器的极限。它有一些很奇怪的特性</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">NaN</span> === NaN; //<span class="literal">false</span></div></pre></td></tr></table></figure>
<h1 id="数组和对象的区分"><a href="#数组和对象的区分" class="headerlink" title="数组和对象的区分"></a>数组和对象的区分</h1><p>数组也是对象,要确认对象是不是数组比较麻烦</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( arr &amp;&amp; </div><div class="line"><span class="keyword">typeof</span> arr === <span class="string">'object'</span> &amp;&amp;</div><div class="line"><span class="keyword">typeof</span> arr.length === <span class="string">'number'</span> &amp;&amp;</div><div class="line">!arr.propertyIsEnumerable(<span class="string">'length'</span>))&#123;</div><div class="line">    alert(<span class="string">"arr is an array"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="和"><a href="#和" class="headerlink" title="== 和 ==="></a>== 和 ===</h1><p>==会自动转换数据类型,得到的直觉不符合常理</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="string">""</span> == <span class="string">"0"</span> <span class="comment">// false</span></div><div class="line"><span class="number">0</span> == <span class="string">""</span> <span class="comment">// true</span></div><div class="line"><span class="number">0</span> == <span class="string">"0"</span> <span class="comment">// true</span></div><div class="line"><span class="literal">false</span> == <span class="string">"false"</span> <span class="comment">// false</span></div><div class="line"><span class="literal">false</span> == <span class="string">"0"</span> <span class="comment">// true</span></div><div class="line"><span class="literal">false</span> == <span class="literal">undefined</span> <span class="comment">// false</span></div><div class="line"><span class="literal">false</span> == <span class="literal">null</span> <span class="comment">// false</span></div><div class="line"><span class="literal">null</span> == <span class="literal">undefined</span> <span class="comment">// true</span></div><div class="line"><span class="string">" \t\r\n"</span> == <span class="number">0</span> <span class="comment">// true</span></div></pre></td></tr></table></figure>
<h1 id="基本类型的包装对象"><a href="#基本类型的包装对象" class="headerlink" title="基本类型的包装对象"></a>基本类型的包装对象</h1><p>Javascript有三种基本数据类型：字符串、数字和布尔值。它们都有相应的建构函数，可以生成字符串对象、数字对象和布尔值对象</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> <span class="type">Boolean</span>(<span class="literal">false</span>);</div><div class="line"><span class="keyword">new</span> <span class="type">Number</span>(<span class="number">1234</span>);</div><div class="line"><span class="keyword">new</span> <span class="type">String</span>(<span class="string">"Hello World"</span>);</div></pre></td></tr></table></figure>
<p>与基本数据类型对应的对象类型，作用很小，造成的混淆却很大</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alert( <span class="keyword">typeof</span> <span class="number">1234</span>); <span class="comment">// number</span></div><div class="line">alert( <span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1234</span>)); <span class="comment">// object</span></div></pre></td></tr></table></figure>
<blockquote>
<p>虽然JavaScript缺陷很多,但是ES6及很多库已经很多解决了这些缺陷的问题,完善了不少。并且JavaScript是浏览器唯一的编程语言,将来一定是随着时代发展不断进步</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么现在的前端学JavaScript要学那么多的版本,并且一年一大更,半年一小更,还要用到很多js的库、模块化工具&lt;/p&gt;
&lt;p&gt;就是因为JavaScript的设计缺陷&lt;/p&gt;
&lt;p&gt;这篇主要是参考《JavaScript语言精髓》（JavaScript: The Good Parts）,总结的非常到位&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【总结】2018年4&amp;5月份个人总结</title>
    <link href="http://yoursite.com/2018/06/01/2018.4&amp;5summary/"/>
    <id>http://yoursite.com/2018/06/01/2018.4&amp;5summary/</id>
    <published>2018-05-31T16:40:15.000Z</published>
    <updated>2018-06-03T07:03:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1527882031035&amp;di=7ab4df32f0074bae42c6649305a46499&amp;imgtype=0&amp;src=http%3A%2F%2Fpic9.photophoto.cn%2F20081229%2F0034034829945374_b.jpg" alt="image"></p>
<p>白驹过隙,似水流年,不及时写月总结,你不知道时间过得有多快<br><a id="more"></a><br>4、5月份我度过了人生最难熬的阶段,发生很多很多的事情，这也造成了提笔难言的窘境</p>
<p>虽然人生在世会有种种不如意,但你仍可以在幸福与不幸中做出选择</p>
<p>在你最痛苦的阶段果然还是亲情和友情,很感动,远在北京老妹安慰、堂哥的劝说及爸妈的激励让我很快走出来,汕头7位兄弟及深圳同学,2个2个轮流请假从汕头到广州来找我玩</p>
<p>度过后从痛苦转为焦虑,从未发现自身很多bug(衣着、生活、理想、三观),正有意识的在往好的方向改进</p>
<p>请假回家有点多,家里房子重建6层,得到明年6月份完工,爸妈占时住旧房,养了2只猫,一个叫但丁，一只叫五一</p>
<p>汕头节奏实在太慢,睡了足足1天都丝毫没负罪感;在广州一个晚上没看书学习就有深深地负罪,争取以后每个月都要写总结,阿尼陀佛</p>
<h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>1.Vue.js: 中文官网看了遍,还没进行实践及踩坑,果然学得快忘得也快</p>
<p>2.ES6: 看完阮一峰的ES6教程,吸收80%,感觉不难,下次多用</p>
<p>3.C#: 公司用C#做后台,粗略看了菜鸟教程一遍,本来想深入系统学,问了阿里的朋友,被骂了一顿,批得体无完肤,说是C#碰都不要碰,没公司用了,所以简单学了下语法及模板,看得懂公司代码就行</p>
<p>4.PHP: 一直想深入学PHP,最近把近2个月要学的内容路线资料整理完毕,争取早日从PHP切入后台的学习,虽然前端只需要了解后台,但是深入后台绝对是硬实力,往全栈方向是我的规划并进入大公司的前提</p>
<p>5.专利: 买了专利法律知识、相关法律知识和专利代理实务。其中前两门是客观题，每门考试都是30道单选和70道多选，满分分别是150和100分，这两门的成绩加起来超过150分就算是法律考试通过；专利代理实务是主观题，一般有3—4道撰写题，考的就是专利申请、审查、复审、无效宣告等程序中的文件撰写，这一门满分150，及格线是90分;争取2个月赶紧学习专利理论基础</p>
<p>6.电商: 准备从运营进入,再学SEO方面知识</p>
<h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>1.把海尔小家电运营平台的前端业务代码实现看完,能快速定位bug并修改业务代码</p>
<p>2.把工作用到的前端插件玩了一遍,包括ligerUi、validation-engine、layer、distpicker.js、ztree、plupload</p>
<p>3.内部海尔插件进行修改、增加新功能</p>
<p>4.公司运维走了,占时没招到满意的,我占时交接了运维的工作,看了文档后学了点电脑系统修复,软件破解,vpn上网,打印机的驱动等等(打杂的),还有内部一些系统的操作,服务器的报账流程及合同申请流程的操作</p>
<p>5.海尔小家电运营平台增加自营产品管理产品导入,供应商外部link及客户管理功能</p>
<p>6.熟悉前端工作流工作,节省了不少时间和提高了效率</p>
<h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>1.从城中村搬到老小区住,安静清闲,太适合我的生活了,扔了旧的东西,买了很多新的家具,买了几件衣服,1双鞋子</p>
<p>2.有段时间压力太大失眠,导致内分泌有点失调,好久没长痘,体验了把青春期的骚动~,接下来不熬夜,调整心态做好自己</p>
<p>3.经常回家,买了点改善生活的用品给爸妈,毕竟还要住旧房1年,接了宽带,他们一天没上微信看到我们在群活跃都会打电话来问,尽量不让他们担心</p>
<p>4.思想从在广州奋斗4、5年回汕头发展转为在广州定居,争取家里今年建好房子然后在广州买房,35到40岁有资金流动再回汕头养老,照顾得到父母,毕竟离不开汕头的空气和美食</p>
<p>5.毕业到现在瘦了10多斤,接下来多吃,然后运动,再吃夜宵,今年目标胖10斤</p>
<p>6.世界这么大,我想到处走走。我17年都一直宅家里学技术,这个月去了白云山爬到山顶、大夫山骑单车、红砖厂,争取1年把广州走遍,然后去外省玩</p>
<p>7.认识了工作上几位比较好的同事,一位已经离职,最近老是在想待人接物的礼仪、言辞表达的自我训练,本身我性格比较内向,都是把自己定位为一个技术人员,但还是想努力提高人际这方面</p>
<p>8.图书馆看的大部分都是文学的书,很崇拜会写诗文采好的人-“前方你的身影,开出花一朵”</p>
<p>9.买了茶桌、餐桌、餐具、茶具</p>
<p>10.厨艺有长进,起码喜欢吃的那几样潮汕小菜美滋滋,阿萌</p>
<p>11.感觉自己写字太正,买了几本楷书字帖,每晚睡前练下,坚持1年看下成效</p>
<p>12.迷上摄影照片,查了下支付宝钱包,一入单反毁一生,镜头是个无底洞,打消念头,但是也打消不了欣赏的心</p>
<h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p>《Head First HTML与CSS》200%、《CSS权威指南》100%、《JavaScript高级程序设计》100%、《正见》300%、《ES6标准入门》80%、《JavaScript+DOM编程艺术》100%、《JavaScript语言精粹》40%、《锋利的jQuery》100%、《黑客与画家》100%、《你不知道的JavaScript(上)》60%、《软件随想录》100%</p>
<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2><p>《后来的我们》、《星际穿越》、《夏洛特烦恼》、《星球大战》、《速度与激情》、《猩球崛起》</p>
<h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p>《人生哲理》、《晓说》、《罗辑思维》</p>
<h1 id="绩效评估"><a href="#绩效评估" class="headerlink" title="绩效评估"></a>绩效评估</h1><table>
<thead>
<tr>
<th>学习</th>
<th>工作</th>
<th>生活</th>
<th>阅读</th>
<th>总分</th>
</tr>
</thead>
<tbody>
<tr>
<td>5</td>
<td>7</td>
<td>7</td>
<td>6</td>
<td>25</td>
</tr>
</tbody>
</table>
<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><p>坚持跑步,达到20公里、徒步一次从化、学PHP、电商、专利</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1527882031035&amp;amp;di=7ab4df32f0074bae42c6649305a46499&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fpic9.photophoto.cn%2F20081229%2F0034034829945374_b.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;白驹过隙,似水流年,不及时写月总结,你不知道时间过得有多快&lt;br&gt;
    
    </summary>
    
      <category term="lifes" scheme="http://yoursite.com/categories/lifes/"/>
    
    
      <category term="个人总结" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【总结】2017年个人年度总结</title>
    <link href="http://yoursite.com/2018/03/11/2017summary/"/>
    <id>http://yoursite.com/2018/03/11/2017summary/</id>
    <published>2018-03-10T16:40:15.000Z</published>
    <updated>2018-06-03T07:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.pkstep.com/wp-content/uploads/2017/12/fb_2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%A71.png" alt="image"></p>
<p>人生如寄,遇见的只是旅人<br><a id="more"></a><br>2017年过得比任何一年都快,每天都沉浸在代码”柳暗花明又一村”的喜悦中,并很幸运的转到另一种职业规划中</p>
<p>这一年经历有点多,要叙述一个复杂的故事,从简单的时间轴是最好的方法</p>
<h1 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h1><p>1月初,辞职后立马到厦门去玩了几天</p>
<p>1月份中,辞职后解脱沉寂内心许久的痛苦,内心完全释怀,看着小胖子推荐《CSS权威指南》和《JavaScript高级程序设计》,demo一遍一遍练习,踽踽独行，时感孤单</p>
<p>2月份中旬过年,躲在家里撸代码,只参加少量同学聚会</p>
<p>3月份,小胖子给我准备了四个项目完成后,3个月的日夜技术积累,从一个完全零基础的小白,到独立完成4个简单的练手项目</p>
<p>4月份,准备简历,到广州面试,拿到3个offer,成功入职</p>
<p>5月份,开始接触实际工作的项目,不断复习不断实践,不断踩坑不断填坑</p>
<p>于是,2017年就这样过去了,学无止境,起点比别人晚,那么我就不断地自我提升,不断学习,赶上大家节奏</p>
<h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>HTML/CSS/JavaScript: 跟着犀牛书一遍遍练习,跟着百度技术学院做了一个个demo;学习jQuery，BootStrap并利用所学模仿制作了简历</p>
<p>工作上: angular框架写后台管理业务,用gulp工具打包代码,node.js搭建前端服务器</p>
<p>班后: 学习了命令行、git、vue、webpack、node.js</p>
<p>写了二十多篇基础博客</p>
<h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>涉猎it编程的书</p>
<p>从喜欢看娱乐节目转美国电影及传记电影</p>
<p>戒除游戏,真浪费时间和精力,去TM的王者荣耀去荣耀去</p>
<p>开始自己煮饭及锻炼身体及内心开始变得强大,努力成为一个超级个体</p>
<h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><p>把前端入门书籍其它杂七杂八的书都看了一遍,接下来准备复习巩固,不下50本,不再一一列出</p>
<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2><p>电影院最新出的都看过(浪费钱)</p>
<h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p>FM102.5及各种乱七八杂(古典音乐、哲学等等),不再一一列出</p>
<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><p>1.徒步</p>
<p>2.把公司业务都看完</p>
<p>3.入股大学同学初创的公司(深圳)提供建站技术支持</p>
<p>4.兼职专利代理(机械),和汕头朋友一起考专利代理人并接单提供专利服务(这行竞争不多,来钱比编程还可怕)</p>
<p>5.保持学习的劲头,坚持每天运动,提高表达能力及沟通能力</p>
<p>6.学后端PHP兼职整个建站服务,玩下C#、Java</p>
<p>7.坚持一周三天广州图书馆看it、电商、专利、文学书籍</p>
<p>8.坚持开始写新进阶技术文章迭代之前的基础技术文章,每天写博客总结,每月月度博客总结自己</p>
<p>9.不要立flag、不要立flag、不要立flag,行动起来</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul>
<li>自信提升30%效率</li>
<li>适度深挖知识点提升1.5倍效率</li>
<li>坚信半年抵得上3年【130(天)3(小时)1.5(倍效率)+50(天)7.5(小时)1.5(倍效率) =  1148&gt; 360(天)3(年)1(每天1个小时) = 1080】</li>
<li>时间越碎片化</li>
<li>多关注当前新闻、历史故事、未来科技</li>
<li>钱少花在吃,花在实用改善生活品</li>
<li>多买书多看书</li>
<li>多走出去外面</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.pkstep.com/wp-content/uploads/2017/12/fb_2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%A71.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;人生如寄,遇见的只是旅人&lt;br&gt;
    
    </summary>
    
      <category term="lifes" scheme="http://yoursite.com/categories/lifes/"/>
    
    
      <category term="个人总结" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Node.js后端服务器框架</title>
    <link href="http://yoursite.com/2017/11/11/node-server/"/>
    <id>http://yoursite.com/2017/11/11/node-server/</id>
    <published>2017-11-11T14:16:41.000Z</published>
    <updated>2018-05-30T12:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">本地开启服务器</div><div class="line">根据路径mock数据</div><div class="line">读取静态文件</div><div class="line">支持模板引擎渲染</div></pre></td></tr></table></figure>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">bin // 主函数</div><div class="line">	www</div><div class="line"></div><div class="line">lib // 公共库(自己)</div><div class="line">	express.js </div><div class="line">	mime.js</div><div class="line"></div><div class="line">node_modules //各种模块依赖</div><div class="line">	...</div><div class="line"></div><div class="line">static //静态文件</div><div class="line">	css</div><div class="line">	imgs</div><div class="line">	js</div><div class="line">	index.html</div><div class="line"></div><div class="line">views //视图层,渲染模板</div><div class="line">	about.html</div><div class="line"></div><div class="line">app.js //引入各种模块依赖及设置路由</div><div class="line"></div><div class="line">package.json //npm初始化文件</div></pre></td></tr></table></figure>
<h2 id="www"><a href="#www" class="headerlink" title="www"></a>www</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env node</div><div class="line"></div><div class="line"></div><div class="line">var app = require('../app')</div><div class="line">var http = require('http')</div><div class="line">console.log(app)</div><div class="line"></div><div class="line">http.createServer(app).listen(8080)</div><div class="line">console.log('open http://localhost:8080')</div></pre></td></tr></table></figure>
<h2 id="express-js"><a href="#express-js" class="headerlink" title="express.js"></a>express.js</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">var url = require('url')</div><div class="line">var fs = require('fs')</div><div class="line">var path = require('path')</div><div class="line">var ejs = require('ejs')</div><div class="line"></div><div class="line"></div><div class="line">function express() &#123;</div><div class="line"></div><div class="line">  var tasks = []</div><div class="line"></div><div class="line">  var app = function(req, res)&#123;</div><div class="line"></div><div class="line">    addQuery(req, res)</div><div class="line">    addSend(req, res)</div><div class="line">    addRender(req, res, app)</div><div class="line"></div><div class="line">    var i = 0</div><div class="line"></div><div class="line">    function next() &#123;</div><div class="line">      var task = tasks[i++]</div><div class="line">      if(!task) &#123;</div><div class="line">        return</div><div class="line">      &#125;</div><div class="line">      if(task.routePath === null || url.parse(req.url, true).pathname === task.routePath)&#123;</div><div class="line">        task.middleWare(req, res, next)</div><div class="line">      &#125;else&#123;</div><div class="line">        next()</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    next()</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  app.use = function(routePath, middleWare)&#123;</div><div class="line">    if(typeof routePath === 'function') &#123;</div><div class="line">      middleWare = routePath</div><div class="line">      routePath = null</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    tasks.push(&#123;</div><div class="line">      routePath: routePath,</div><div class="line">      middleWare: middleWare</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  app.data = &#123;&#125;</div><div class="line"></div><div class="line">  app.set = function(key, value)&#123;</div><div class="line">    app.data[key] = value</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  app.get = function(key)&#123;</div><div class="line">    return app.data[key]</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  return app</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">express.static = function(staticPath)&#123;</div><div class="line"></div><div class="line">  return function(req, res, next)&#123;</div><div class="line">    var pathObj = url.parse(req.url, true)</div><div class="line">    var filePath = path.resolve(staticPath, pathObj.pathname.substr(1))</div><div class="line">    console.log(filePath)</div><div class="line">    fs.readFile(filePath,'binary', function(err, content)&#123;</div><div class="line">      if(err)&#123;</div><div class="line">        next()</div><div class="line">      &#125;else &#123;</div><div class="line">        res.writeHead(200, 'Ok')</div><div class="line">        res.write(content, 'binary')</div><div class="line">        res.end()         </div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">module.exports = express</div><div class="line"></div><div class="line"></div><div class="line">function addQuery(req, res)&#123;</div><div class="line">  var pathObj = url.parse(req.url, true)</div><div class="line">  req.query = pathObj.query</div><div class="line">&#125;</div><div class="line"></div><div class="line">function addSend(req, res)&#123;</div><div class="line">  res.send = function(toSend)&#123;</div><div class="line">    if(typeof toSend === 'string')&#123;</div><div class="line">      res.end(toSend)</div><div class="line">    &#125;</div><div class="line">    if(typeof toSend === 'object')&#123;</div><div class="line">      res.end(JSON.stringify(toSend))</div><div class="line">    &#125;</div><div class="line">    if(typeof toSend === 'number')&#123;</div><div class="line">      res.writeHead(toSend, arguments[1])</div><div class="line">      res.end()</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function addRender(req, res, app)&#123;</div><div class="line"></div><div class="line">  res.render = function(tplPath, data) &#123;</div><div class="line"></div><div class="line">    var fullpath = path.join(app.get('views'), tplPath) </div><div class="line">    ejs.renderFile(fullpath, data, &#123;&#125;, function(err, str)&#123;</div><div class="line">      if(err)&#123;</div><div class="line">        res.writeHead(503, 'System error')</div><div class="line">        res.end() </div><div class="line">      &#125;else &#123;</div><div class="line">        res.setHeader('content-type', 'text/html')</div><div class="line">        res.writeHead(200, 'Ok')</div><div class="line">        res.write(str)</div><div class="line">        res.end()         </div><div class="line">      &#125;</div><div class="line">    &#125;)</div><div class="line">    </div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/a.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/logo.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/search"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"search"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/b.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="about"><a href="#about" class="headerlink" title="about"></a>about</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">  &lt;title&gt;about&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">  &lt;h1&gt;&lt;%= title %&gt;&lt;/h1&gt;</div><div class="line">  &lt;dl&gt;</div><div class="line">    &lt;dt&gt;人物:&lt;/dt&gt;</div><div class="line">    &lt;dd&gt;&lt;%= people %&gt;&lt;/dd&gt;</div><div class="line">    &lt;dt&gt;日期:&lt;/dt&gt;</div><div class="line">    &lt;dd&gt;&lt;%= date %&gt;&lt;/dd&gt;</div><div class="line">    &lt;dt&gt;我的博客&lt;/dt&gt;</div><div class="line">    &lt;dd&gt;&lt;a href=&quot;&lt;%= intro %&gt;&quot;&gt;点击查看&lt;/a&gt;&lt;/dd&gt;</div><div class="line">  &lt;/dl&gt;</div><div class="line">  </div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">var express = require('./lib/express')</div><div class="line">var path = require('path')</div><div class="line">var bodyParser = require('body-parser')</div><div class="line">var urlencodedParser = bodyParser.urlencoded(&#123; extended: false &#125;)</div><div class="line">var mimeType = require('./lib/mime')</div><div class="line"></div><div class="line"></div><div class="line">var app = express()</div><div class="line"></div><div class="line"></div><div class="line">app.use(urlencodedParser)</div><div class="line">app.use(mimeType)</div><div class="line">app.use(express.static(path.join(__dirname, 'static')))</div><div class="line">app.set('views', path.join(__dirname, 'views'))</div><div class="line"></div><div class="line"></div><div class="line">app.use(function(req, res, next) &#123;</div><div class="line">  console.log('middleware 1')</div><div class="line">  next()</div><div class="line">&#125;)</div><div class="line"></div><div class="line">app.use(function(req, res, next) &#123;</div><div class="line">  console.log('middleware 12')</div><div class="line">  next()</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line">app.use('/hello', function(req, res)&#123;</div><div class="line">  console.log('/hello..')</div><div class="line">  res.send('hello world')</div><div class="line">&#125;)</div><div class="line"></div><div class="line">app.use('/getWeather', function(req, res)&#123;</div><div class="line">  res.send(&#123;url:'/getWeather', city: req.query.city&#125;)</div><div class="line">&#125;)</div><div class="line"></div><div class="line">app.use('/search', function(req, res)&#123;</div><div class="line">  res.send(req.body)</div><div class="line">&#125;)</div><div class="line"></div><div class="line">app.use('/about', function(req, res)&#123;</div><div class="line">  res.render('about.html', &#123;</div><div class="line">    title: '头部',</div><div class="line">    people: '张扬',</div><div class="line">    date: '2018-1-1',</div><div class="line">    intro: 'zy343134464@github.io'</div><div class="line">  &#125;)</div><div class="line">&#125;)</div><div class="line"></div><div class="line">app.use(function(req, res)&#123;</div><div class="line">  res.send(404, 'haha Not Found')</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line">module.exports = app</div></pre></td></tr></table></figure>
<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "name": "step5",</div><div class="line">  "version": "1.0.0",</div><div class="line">  "main": "index.js",</div><div class="line">  "license": "MIT",</div><div class="line">  "dependencies": &#123;</div><div class="line">    "body-parser": "^1.17.2",</div><div class="line">    "ejs": "^2.5.6",</div><div class="line">    "mime-types": "^2.1.15"</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h2&gt;
    
    </summary>
    
      <category term="Node.js" scheme="http://yoursite.com/categories/Node-js/"/>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://yoursite.com/2017/11/05/arithmetic/"/>
    <id>http://yoursite.com/2017/11/05/arithmetic/</id>
    <published>2017-11-05T14:16:41.000Z</published>
    <updated>2018-05-30T12:02:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法简介"><a href="#算法简介" class="headerlink" title="算法简介"></a>算法简介</h2><p>以下是高德纳在他的著作《计算机程序设计艺术》里对算法的特征归纳：</p>
<a id="more"></a>
<p>输入：一个算法必须有零个或以上输入量。</p>
<p>输出：一个算法应有一个或以上输出量，输出量是算法计算的结果。<br>明确性：算法的描述必须无歧义，以保证算法的实际执行结果是精确地匹配要求或期望，通常要求实际运行结果是确定的。</p>
<p>有限性：依据图灵的定义，一个算法是能够被任何图灵完备系统模拟的一串运算，而图灵机只有有限个状态、有限个输入符号和有限个转移函数（指令）。而一些定义更规定算法必须在有限个步骤内完成任务。</p>
<p>有效性：又称可行性。能够实现，算法中描述的操作都是可以通过已经实现的基本运算执行有限次来实现。</p>
<h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><p>中国学生学不好排序算法主要是因为这些算法的名字是外国人取的</p>
<p>体育委员两两摸头法（冒泡排序）</p>
<p>体育老师一指禅法（选择排序）</p>
<p>起扑克牌法（插入排序）</p>
<p>强迫症收扑克牌法（基数排序）</p>
<p>快排</p>
<p>归并排序</p>
<p>堆排序</p>
<p>排序可视化：<a href="https://visualgo.net/bn/sorting" target="_blank" rel="external">https://visualgo.net/bn/sorting</a></p>
<p>伪代码：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">a &lt;- &#123;</div><div class="line">    <span class="string">'0'</span>:<span class="number">4</span>,</div><div class="line">    <span class="string">'1'</span>:<span class="number">6</span>,</div><div class="line">    <span class="string">'2'</span>:<span class="number">3</span>,</div><div class="line">    <span class="string">'3'</span>:<span class="number">2</span>,</div><div class="line">    <span class="string">'4'</span>:<span class="number">1</span>,</div><div class="line">    <span class="string">'length'</span>: <span class="number">5</span></div><div class="line">&#125;</div><div class="line">轮数 = <span class="number">1</span></div><div class="line">左手指向的下标 </div><div class="line"></div><div class="line"><span class="built_in">while</span>(轮数 &lt; a[<span class="string">'length'</span>])</div><div class="line">    左手指向的下标 = <span class="number">0</span></div><div class="line">    <span class="built_in">while</span>(左手指向的下标 &lt;= a[<span class="string">'length'</span>] - <span class="number">1</span> - 轮数)</div><div class="line">        <span class="built_in">if</span> a[左手指向的下标] &lt; a[左手指向的下标+<span class="number">1</span>]</div><div class="line">            <span class="comment">// 什么也不做</span></div><div class="line">        <span class="built_in">else</span></div><div class="line">            <span class="comment">// 交换左右的位置</span></div><div class="line">            t &lt;- a[左手指向的下标]</div><div class="line">            a[左手指向的下标] &lt;- a[左手指向的下标+<span class="number">1</span>]</div><div class="line">            a[左手指向的下标+<span class="number">1</span>] &lt;- t</div><div class="line">        <span class="built_in">end</span></div><div class="line">        左手指向的下标 &lt;- 左手指向的下标+<span class="number">1</span></div><div class="line">    <span class="built_in">end</span></div><div class="line">    轮数 &lt;- 轮数 + <span class="number">1</span></div><div class="line"><span class="built_in">end</span></div><div class="line"><span class="built_in">print</span> a</div><div class="line"><span class="comment">/////////</span></div><div class="line"></div><div class="line">轮数  左手指向的下标最大值（从<span class="number">0</span>开始）</div><div class="line"><span class="number">1</span>        <span class="number">3</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span></div><div class="line"><span class="number">3</span>       <span class="number">1</span></div><div class="line"><span class="number">4</span>       <span class="number">0</span></div></pre></td></tr></table></figure>
<h2 id="冒泡排序算法流程图"><a href="#冒泡排序算法流程图" class="headerlink" title="冒泡排序算法流程图"></a>冒泡排序算法流程图</h2><p><img src="http://oqev4hx8u.bkt.clouddn.com/14-3.jpg" alt="image"></p>
<h2 id="选择排序算法流程图"><a href="#选择排序算法流程图" class="headerlink" title="选择排序算法流程图"></a>选择排序算法流程图</h2><p><img src="http://oqev4hx8u.bkt.clouddn.com/14-5.jpg" alt="image"></p>
<p>排序</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;算法简介&quot;&gt;&lt;a href=&quot;#算法简介&quot; class=&quot;headerlink&quot; title=&quot;算法简介&quot;&gt;&lt;/a&gt;算法简介&lt;/h2&gt;&lt;p&gt;以下是高德纳在他的著作《计算机程序设计艺术》里对算法的特征归纳：&lt;/p&gt;
    
    </summary>
    
      <category term="others" scheme="http://yoursite.com/categories/others/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>初探jquery代码</title>
    <link href="http://yoursite.com/2017/11/05/jquerydemo/"/>
    <id>http://yoursite.com/2017/11/05/jquerydemo/</id>
    <published>2017-11-05T14:16:41.000Z</published>
    <updated>2018-05-30T12:32:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery源码设计"><a href="#jQuery源码设计" class="headerlink" title="jQuery源码设计"></a>jQuery源码设计</h1><p>看完jquery源代码,开始自己脑补了api的实现</p>
<a id="more"></a>
<h2 id="jQuery的DOM代码需求设计"><a href="#jQuery的DOM代码需求设计" class="headerlink" title="jQuery的DOM代码需求设计"></a>jQuery的DOM代码需求设计</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">let <span class="keyword">items</span> = $(<span class="string">'li'</span>)</div><div class="line"></div><div class="line"><span class="keyword">items</span>.on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>()&#123;</span></div><div class="line">  console.<span class="built_in">log</span>(<span class="string">'click'</span>)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">items</span>.addClass(<span class="string">'hi'</span>).removeClass(<span class="string">'error'</span>)</div><div class="line"></div><div class="line"><span class="keyword">items</span>.<span class="keyword">text</span>(<span class="string">'你好'</span>)</div><div class="line"></div><div class="line"><span class="keyword">items</span>.<span class="built_in">get</span>(<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="number">1.</span> <span class="keyword">item</span> 没有 siblings 方法</div><div class="line"><span class="number">2.</span> 需求要有 xxx.siblings 方法</div><div class="line"><span class="number">3.</span> $<span class="keyword">item</span> = $(<span class="keyword">item</span>)   $<span class="keyword">item</span>.siblings() 返回 <span class="keyword">item</span> 的兄弟</div><div class="line"></div><div class="line"><span class="number">1.</span> $<span class="keyword">item</span>.siblings() 没有 addClass 方法</div><div class="line"><span class="number">2.</span> 需求要有  $<span class="keyword">item</span>.siblings().addClass</div><div class="line"><span class="number">3.</span> $<span class="keyword">item</span>.siblings() 的结果是 $(<span class="string">'li'</span>) 类似的东西</div><div class="line"></div><div class="line">$<span class="keyword">item</span>.siblings().removeClass(<span class="string">'active'</span>).<span class="keyword">end</span>()</div><div class="line">  .addClass(<span class="string">'active'</span>)</div></pre></td></tr></table></figure>
<h2 id="jQuery的DOM源代码设计实现"><a href="#jQuery的DOM源代码设计实现" class="headerlink" title="jQuery的DOM源代码设计实现"></a>jQuery的DOM源代码设计实现</h2><figure class="highlight zephir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// $ 接收一个字符串或元素或元素列表</span></div><div class="line"><span class="comment">// 返回一个新的数组</span></div><div class="line"><span class="comment">// 这个数组有  on  addClass removeClass ... API</span></div><div class="line">window.$ = <span class="function"><span class="keyword">function</span><span class="params">(selectorOrNode)</span></span>&#123;</div><div class="line">    <span class="keyword">let</span> <span class="keyword">array</span> = []</div><div class="line">    <span class="keyword">if</span>(typeof selectorOrNode === <span class="string">'string'</span>)&#123;</div><div class="line">        <span class="keyword">let</span> items = document.querySelectorAll(selectorOrNode)</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;items.length; i++)&#123;</div><div class="line">            <span class="keyword">array</span>.push(items[i])</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectorOrNode <span class="keyword">instanceof</span> Element)&#123;</div><div class="line">        <span class="keyword">array</span>.push(selectorOrNode)</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectorOrNode <span class="keyword">instanceof</span> <span class="keyword">Array</span>)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;selectorOrNode.length; i++)&#123;</div><div class="line">            <span class="keyword">if</span>(!(selectorOrNode[i] <span class="keyword">instanceof</span> Element))&#123;</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">array</span>.push(selectorOrNode[i])</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    </div><div class="line">    <span class="keyword">array</span>.on = <span class="function"><span class="keyword">function</span><span class="params">(eventType, fn)</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">array</span>.length;i++)&#123;</div><div class="line">            <span class="keyword">array</span>[i].addEventListener(eventType, fn)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">array</span>.addClass = <span class="function"><span class="keyword">function</span><span class="params">(className)</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">array</span>.length;i++)&#123;</div><div class="line">            <span class="keyword">array</span>[i].classList.add(className)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">array</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">array</span>.removeClass = <span class="function"><span class="keyword">function</span><span class="params">(className)</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">array</span>.length;i++)&#123;</div><div class="line">            <span class="keyword">array</span>[i].classList.remove(className)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">array</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">array</span>.text = <span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(value !== undefined)&#123;</div><div class="line">          <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">array</span>.length;i++)&#123;</div><div class="line">            <span class="keyword">array</span>[i].textContent = value</div><div class="line">          &#125;</div><div class="line">          <span class="keyword">return</span> <span class="keyword">array</span>  </div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">let</span> result = []</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">array</span>.length;i++)&#123;</div><div class="line">              result.push(<span class="keyword">array</span>[i].textContent)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> result</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">array</span>.get = <span class="function"><span class="keyword">function</span><span class="params">(index)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">array</span>[index]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">array</span>.end = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">array</span>.previousSelection</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">array</span>.siblings = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">let</span> children = <span class="keyword">array</span>[<span class="number">0</span>].parentNode.children</div><div class="line">        <span class="keyword">let</span> resultArray = []</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;children.length; i++)&#123;</div><div class="line">            <span class="keyword">if</span>(children[i] !== <span class="keyword">array</span>[<span class="number">0</span>])&#123;</div><div class="line">                resultArray.push(children[i])</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">let</span> items = $(resultArray)</div><div class="line">        items.previousSelection = <span class="keyword">array</span></div><div class="line">        <span class="keyword">return</span> items</div><div class="line">                                                           </div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">array</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="jQuery的BOM代码需求设计"><a href="#jQuery的BOM代码需求设计" class="headerlink" title="jQuery的BOM代码需求设计"></a>jQuery的BOM代码需求设计</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">http://xxx.com/index.html?a=1</div><div class="line">$.bom.search('a')  </div><div class="line"></div><div class="line">$.bom.search('a', 'xxx')</div><div class="line">http://xxx.com/index.html?a=xxx</div></pre></td></tr></table></figure>
<h2 id="jQuery的BOM源代码设计实现"><a href="#jQuery的BOM源代码设计实现" class="headerlink" title="jQuery的BOM源代码设计实现"></a>jQuery的BOM源代码设计实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">window.$ = function()&#123;</div><div class="line">  let array = []</div><div class="line">  return array</div><div class="line">&#125;</div><div class="line"></div><div class="line">$.bom = &#123;</div><div class="line">  openAtCenter: function(width, height, url)&#123;</div><div class="line">    window.open(url, '_blank', `</div><div class="line">      width=$&#123;width&#125;px,height=$&#123;height&#125;px,</div><div class="line">      screenX=$&#123;screen.width/2 - width/2&#125;px,</div><div class="line">      screenY=$&#123;screen.height/2 - height/2&#125;px</div><div class="line">    `)</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  search: function(name, value)&#123;</div><div class="line">    let searchAll = function()&#123;</div><div class="line">      let result = &#123;&#125;</div><div class="line">      let search = window.location.search</div><div class="line">      // 去掉?</div><div class="line">      if(search[0] === '?')&#123;</div><div class="line">        search = search.slice(1)</div><div class="line">      &#125;</div><div class="line">      // 用 &amp; 分隔成数组</div><div class="line">      let searchArray = search.split('&amp;')</div><div class="line">      // 遍历数组</div><div class="line">      for(var i =0;i<span class="tag">&lt;<span class="name">searchArray.length;</span> <span class="attr">i</span>++)&#123;</span></div><div class="line">        <span class="attr">let</span> <span class="attr">parts</span> = <span class="string">searchArray[i].split(</span>'=<span class="string">')</span></div><div class="line">        result[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1] || '')</div><div class="line">      &#125;</div><div class="line">      <span class="attr">return</span> <span class="attr">result</span></div><div class="line">    &#125;</div><div class="line">    <span class="attr">let</span> <span class="attr">result</span> = <span class="string">searchAll()</span></div><div class="line">    <span class="attr">if</span>(<span class="attr">value</span> === <span class="string">undefined)&#123;</span></div><div class="line">      <span class="attr">return</span> <span class="attr">result</span>[<span class="attr">name</span>]</div><div class="line">    &#125;<span class="attr">else</span>&#123;</div><div class="line">      <span class="attr">if</span>(<span class="attr">result</span>[<span class="attr">name</span>] === <span class="string">undefined)&#123;</span></div><div class="line">        <span class="attr">location.search</span> += `&amp;$&#123;<span class="attr">encodeURIComponent</span>(<span class="attr">name</span>)&#125;=<span class="string">$&#123;encodeURIComponent(value)&#125;</span>`</div><div class="line">      &#125;<span class="attr">else</span>&#123;</div><div class="line">        <span class="attr">result</span>[<span class="attr">name</span>] = <span class="string">encodeURIComponent(value)</span></div><div class="line">        <span class="attr">let</span> <span class="attr">newSearch</span> = <span class="string">'?'</span></div><div class="line">        <span class="attr">for</span>(<span class="attr">let</span> <span class="attr">key</span> <span class="attr">in</span> <span class="attr">result</span>)&#123;</div><div class="line">          <span class="attr">newSearch</span> += `$&#123;<span class="attr">encodeURIComponent</span>(<span class="attr">key</span>)&#125;=<span class="string">$&#123;encodeURIComponent(result[key])&#125;&amp;</span>`</div><div class="line">        &#125;</div><div class="line">        <span class="attr">location.search</span> = <span class="string">newSearch</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;jQuery源码设计&quot;&gt;&lt;a href=&quot;#jQuery源码设计&quot; class=&quot;headerlink&quot; title=&quot;jQuery源码设计&quot;&gt;&lt;/a&gt;jQuery源码设计&lt;/h1&gt;&lt;p&gt;看完jquery源代码,开始自己脑补了api的实现&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="Jquery" scheme="http://yoursite.com/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap</title>
    <link href="http://yoursite.com/2017/10/27/bootstrap/"/>
    <id>http://yoursite.com/2017/10/27/bootstrap/</id>
    <published>2017-10-27T14:16:41.000Z</published>
    <updated>2018-05-30T12:27:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h1><ul>
<li>cdn方式</li>
</ul>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 新 Bootstrap4 核心 CSS 文件 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- popper.min.js 用于弹窗、提示、下拉菜单 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 最新的 Bootstrap4 核心 JavaScript 文件 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>npm方式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install bootstrap@4.0.0-beta.2</div></pre></td></tr></table></figure>
<h1 id="网格系统"><a href="#网格系统" class="headerlink" title="网格系统"></a>网格系统</h1><ul>
<li><p>Bootstrap提供了一套响应式、移动设备优先的流式网格系统</p>
</li>
<li><p>随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多 12 列</p>
</li>
</ul>
<h2 id="网格类"><a href="#网格类" class="headerlink" title="网格类"></a>网格类</h2><ul>
<li>.col- 针对所有设备</li>
<li>.col-sm- 平板 - 屏幕宽度等于或大于 576px</li>
<li>.col-md- 桌面显示器 - 屏幕宽度等于或大于 768px)</li>
<li>.col-lg- 大桌面显示器 - 屏幕宽度等于或大于 992px)</li>
<li>.col-xl- 超大桌面显示器 - 屏幕宽度等于或大于 1200px)</li>
</ul>
<h2 id="Bootstrap-4-网格的基本结构"><a href="#Bootstrap-4-网格的基本结构" class="headerlink" title="Bootstrap 4 网格的基本结构"></a>Bootstrap 4 网格的基本结构</h2><ul>
<li>等宽响应式列:在移动设备上，即屏幕宽度小于 576px 时，四个列将会上下堆叠排版</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>重置浏览器大小查效果。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span> 在移动设备上，即屏幕宽度小于 576px 时，四个列将会上下堆叠排版。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color:lavender;"</span>&gt;</span>.col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color:lavenderblush;"</span>&gt;</span>.col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color:lavender;"</span>&gt;</span>.col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color:lavenderblush;"</span>&gt;</span>.col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>不等宽响应式列: 在移动设备上，即屏幕宽度小于 576px 时，四个列将会上下堆叠排版</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>重置浏览器大小查效果。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>在移动设备上，即屏幕宽度小于 576px 时，四个列将会上下堆叠排版。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span> <span class="attr">style</span>=<span class="string">"background-color:lavender;"</span>&gt;</span>.col-sm-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-8"</span> <span class="attr">style</span>=<span class="string">"background-color:lavenderblush;"</span>&gt;</span>.col-sm-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h1><ul>
<li>文字颜色</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>代表指定意义的文本颜色<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span>&gt;</span>柔和的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-primary"</span>&gt;</span>重要的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-success"</span>&gt;</span>执行成功的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>代表一些提示信息的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-warning"</span>&gt;</span>警告文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>危险操作文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-secondary"</span>&gt;</span>副标题。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-dark"</span>&gt;</span>深灰色文字。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-light"</span>&gt;</span>浅灰色文本（白色背景上看不清楚）。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-white"</span>&gt;</span>白色文本（白色背景上看不清楚）。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>背景颜色:一些实例中你需要与 .text-* 类一起使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>背景颜色<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-primary text-white"</span>&gt;</span>重要的背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-success text-white"</span>&gt;</span>执行成功背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-info text-white"</span>&gt;</span>信息提示背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-warning text-white"</span>&gt;</span>警告背景颜色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-danger text-white"</span>&gt;</span>危险背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-secondary text-white"</span>&gt;</span>副标题背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-dark text-white"</span>&gt;</span>深灰背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-light text-dark"</span>&gt;</span>浅灰背景颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><ul>
<li>.table 类来设置基础表格的样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>基础表格<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.table 类来设置基础表格的样式:<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Firstname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Lastname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>John<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Doe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>john@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mary<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Moe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>mary@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>July<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Dooley<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>july@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>通过添加 .table-striped 类，您将在 <tbody> 内的行上看到条纹</tbody></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>条纹表格<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>通过添加 .table-striped 类，来设置条纹表格:<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Firstname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Lastname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>John<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Doe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>john@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mary<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Moe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>mary@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>July<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Dooley<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>july@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>.table-bordered 类可以为表格添加边框</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>带边框表格<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.table-bordered 类可以为表格添加边框:<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Firstname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Lastname<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>John<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Doe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>john@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mary<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Moe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>mary@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>July<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Dooley<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>july@example.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>其它详见官网</p>
</blockquote>
<h1 id="图像形状"><a href="#图像形状" class="headerlink" title="图像形状"></a>图像形状</h1><ul>
<li>.rounded 类可以让图片显示圆角效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>圆角图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.rounded 类可以让图片显示圆角效果：<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/cinqueterre.jpg"</span> <span class="attr">class</span>=<span class="string">"rounded"</span> <span class="attr">alt</span>=<span class="string">"Cinque Terre"</span> <span class="attr">width</span>=<span class="string">"304"</span> <span class="attr">height</span>=<span class="string">"236"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>.rounded-circle 类可以设置椭圆形图片</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>椭圆图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.rounded-circle 类可以设置椭圆形图片:<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/cinqueterre.jpg"</span> <span class="attr">class</span>=<span class="string">"rounded-circle"</span> <span class="attr">alt</span>=<span class="string">"Cinque Terre"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>.img-thumbnail 类用于设置图片缩略图(图片有边框)</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>缩略图<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.img-thumbnail 类用于设置图片缩略图(图片有边框):<span class="tag">&lt;/<span class="name">p</span>&gt;</span>            </div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/cinqueterre.jpg"</span> <span class="attr">class</span>=<span class="string">"img-thumbnail"</span> <span class="attr">alt</span>=<span class="string">"Cinque Terre"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 .float-right 类来设置图片右对齐，使用 .float-left 类设置图片左对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>图片对齐方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>使用 .float-right 类来设置突破右对齐，使用 .float-left 类设置图片左对齐:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/paris.jpg"</span> <span class="attr">class</span>=<span class="string">"float-left"</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/cinqueterre.jpg"</span> <span class="attr">class</span>=<span class="string">"float-right"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>通过在 <img> 标签中添加 .img-fluid 类来设置响应式图片</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>响应式图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.img-fluid 类可以设置响应式图片，重置浏览器大小查看效果:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/mix/paris.jpg"</span> <span class="attr">class</span>=<span class="string">"img-fluid"</span>"&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="jumbotron"><a href="#jumbotron" class="headerlink" title="jumbotron"></a>jumbotron</h1><ul>
<li>Jumbotron（超大屏幕）会创建一个大的灰色背景框，里面可以设置一些特殊的内容和信息</li>
<li>通过在 <div> 元素 中添加 .jumbotron 类来创建 jumbotron</div></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jumbotron"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>学的不仅是技术，更是梦想！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>      </div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>      </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>创建一个没有圆角的全屏幕，可以在 .jumbotron-fluid 类里头的 div添加 .container 或 .container-fluid 类来实现</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jumbotron jumbotron-fluid"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>学的不仅是技术，更是梦想！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>是一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>      </div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>是一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>      </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="信息提示框"><a href="#信息提示框" class="headerlink" title="信息提示框"></a>信息提示框</h1><ul>
<li>提示框可以使用 .alert 类, 后面加上 .alert-success, .alert-info, .alert-warning, .alert-danger, .alert-primary, .alert-secondary, .alert-light 或 .alert-dark 类来实现</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提示框<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>提示框可以使用 .alert 类, 后面加上指定特定意义的颜色类来实现:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>成功!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 指定操作成功提示信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>信息!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 请注意这个信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>警告!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 设置警告信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>错误!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 失败的操作</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-primary"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>首选!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 这是一个重要的操作信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-secondary"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>次要的!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 显示一些不重要的信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-dark"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>深灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 深灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-light"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>浅灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>浅灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>提示框中在链接的标签上添加 alert-link 类来设置匹配提示框颜色的链接</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提示框添加链接<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>提示框中在链接的标签上添加 alert-link 类来设置匹配提示框颜色的链接：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>成功!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>信息!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>警告!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>错误!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-primary"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>首选!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-secondary"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>次要的!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-dark"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>深灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-light"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 你应该认真阅读 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>这条信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>在提示框中的 div 中添加 .alert-dismissable 类，然后在关闭按钮的链接上添加 class=”close” 和 data-dismiss=”alert” 类来设置提示框的关闭操作</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>关闭提示框<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我们可以在提示框中的 div 中添加 .alert-dismissable 类，然后在关闭按钮的链接上添加 class="close" 和 data-dismiss="alert" 类来设置提示框的关闭操作。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>成功!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 指定操作成功提示信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>信息!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 请注意这个信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>警告!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 设置警告信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>错误!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 失败的操作。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-primary alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>首选!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 这是一个重要的操作信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-secondary alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>次要的!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 显示一些不重要的信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-dark alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>深灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 深灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-light alert-dismissable"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>浅灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>浅灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>.fade 和 .show 类用于设置提示框在关闭时的淡出和淡入效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/popper.js/1.12.5/umd/popper.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>提示框动画<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>.fade 和 .show 类用于设置提示框在关闭时的淡出和淡入效果：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>成功!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 指定操作成功提示信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>信息!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 请注意这个信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>警告!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 设置警告信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>错误!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 失败的操作。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-primary alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>首选!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 这是一个重要的操作信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-secondary alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>次要的!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 显示一些不重要的信息。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-dark alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>深灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 深灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-light alert-dismissable fade show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>浅灰色!<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>浅灰色提示框。</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>其它组件看官网文档</li>
</ul>
</blockquote>
<h1 id="响应式网站"><a href="#响应式网站" class="headerlink" title="响应式网站"></a>响应式网站</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装使用&quot;&gt;&lt;a href=&quot;#安装使用&quot; class=&quot;headerlink&quot; title=&quot;安装使用&quot;&gt;&lt;/a&gt;安装使用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;cdn方式&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>angular.js</title>
    <link href="http://yoursite.com/2017/08/22/angular/"/>
    <id>http://yoursite.com/2017/08/22/angular/</id>
    <published>2017-08-22T15:16:41.000Z</published>
    <updated>2018-05-30T12:27:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AngularJS-简介"><a href="#AngularJS-简介" class="headerlink" title="AngularJS 简介"></a>AngularJS 简介</h2><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><ul>
<li>ng-app 指令告诉 AngularJS，<div> 元素是 AngularJS 应用程序 的”所有者”  </div></li>
<li>ng-model 指令把输入域的值绑定到应用程序变量 name  <a id="more"></a>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>名字 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>ng-bind 指令把应用程序变量 name 绑定到某个段落的 innerHTML  </li>
<li>ng-init 指令初始化 AngularJS 应用程序变量  </li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"firstName='John'"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-ng-app</span>=<span class="string">""</span> <span class="attr">data-ng-init</span>=<span class="string">"firstName='John'"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-ng-bind</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><ul>
<li>AngularJS 表达式写在双大括号内：</li>
</ul>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ul>
<li>ng-app指令定义了应用</li>
<li>ng-controller 定义了控制器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"> </div><div class="line">名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓名: &#123;&#123;firstName + " " + lastName&#125;&#125;</div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName= <span class="string">"John"</span>;</div><div class="line">    $scope.lastName= <span class="string">"Doe"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-表达式"><a href="#AngularJS-表达式" class="headerlink" title="AngularJS 表达式"></a>AngularJS 表达式</h2><ul>
<li>AngularJS 表达式写在双大括号内：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个表达式: &#123;&#123; 5 + 5 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-数字"><a href="#AngularJS-数字" class="headerlink" title="AngularJS 数字"></a>AngularJS 数字</h3><ul>
<li>AngularJS 数字就像 JavaScript 数字</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"quantity=1;cost=5"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总价： &#123;&#123; quantity * cost &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-bind 的相同实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"quantity=1;cost=5"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总价： <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"quantity * cost"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-表达式-1"><a href="#AngularJS-表达式-1" class="headerlink" title="AngularJS 表达式"></a>AngularJS 表达式</h2><ul>
<li>AngularJS 表达式写在双大括号内：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个表达式: &#123;&#123; 5 + 5 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-数字-1"><a href="#AngularJS-数字-1" class="headerlink" title="AngularJS 数字"></a>AngularJS 数字</h3><ul>
<li>AngularJS 数字就像 JavaScript 数字</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"quantity=1;cost=5"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总价： &#123;&#123; quantity * cost &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-bind 的相同实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"quantity=1;cost=5"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总价： <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"quantity * cost"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-字符串"><a href="#AngularJS-字符串" class="headerlink" title="AngularJS 字符串"></a>AngularJS 字符串</h3><ul>
<li>AngularJS 字符串就像 JavaScript 字符串</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"firstName='John';lastName='Doe'"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名： &#123;&#123; firstName + " " + lastName &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-bind 的相同实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"firstName='John';lastName='Doe'"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名： <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"firstName + ' ' + lastName"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-对象"><a href="#AngularJS-对象" class="headerlink" title="AngularJS 对象"></a>AngularJS 对象</h3><ul>
<li>AngularJS 对象就像 JavaScript 对象</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"person=&#123;firstName:'John',lastName:'Doe'&#125;"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓为 &#123;&#123; person.lastName &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-bind 的相同实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"person=&#123;firstName:'John',lastName:'Doe'&#125;"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"person.lastName"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-数组"><a href="#AngularJS-数组" class="headerlink" title="AngularJS 数组"></a>AngularJS 数组</h3><ul>
<li>AngularJS 数组就像 JavaScript 数组</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"points=[1,15,19,2,40]"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第三个值为 &#123;&#123; points[2] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-bind 的相同实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"points=[1,15,19,2,40]"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>第三个值为 <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-bind</span>=<span class="string">"points[2]"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-表达式-与-JavaScript-表达式"><a href="#AngularJS-表达式-与-JavaScript-表达式" class="headerlink" title="AngularJS 表达式 与 JavaScript 表达式"></a>AngularJS 表达式 与 JavaScript 表达式</h3><ul>
<li>类似于 JavaScript 表达式，AngularJS 表达式可以包含字母，操作符，变量。</li>
<li>与 JavaScript 表达式不同，AngularJS 表达式可以写在 HTML 中。</li>
<li>与 JavaScript 表达式不同，AngularJS 表达式不支持条件判断，循环及异常。</li>
<li>与 JavaScript 表达式不同，AngularJS 表达式支持过滤器</li>
</ul>
<hr>
<h2 id="ngularJS-指令"><a href="#ngularJS-指令" class="headerlink" title="ngularJS 指令"></a>ngularJS 指令</h2><ul>
<li>ng-app 指令初始化一个 AngularJS 应用程序。</li>
<li>ng-init 指令初始化应用程序数据。</li>
<li>ng-model 指令把元素值（比如输入域的值）绑定到应用程序</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"firstName='John'"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>在输入框中尝试输入：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>你输入的为： &#123;&#123; firstName &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h3><ul>
<li> 表达式是一个 AngularJS 数据绑定表达</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"quantity=1;price=5"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>价格计算器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"> </div><div class="line">数量： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"quantity"</span>&gt;</span></div><div class="line">价格： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"price"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>总价：<span class="tag">&lt;/<span class="name">b</span>&gt;</span> &#123;&#123; quantity * price &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="重复-HTML-元素"><a href="#重复-HTML-元素" class="headerlink" title="重复 HTML 元素"></a>重复 HTML 元素</h3><ul>
<li>ng-repeat 指令会重复一个 HTML 元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"names=['Jani','Hege','Kai']"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>使用 ng-repeat 来循环数组<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">      &#123;&#123; x &#125;&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>ng-repeat 指令用在一个对象数组上</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"names=[</span></span></div><div class="line">&#123;name:'Jani',country:'Norway'&#125;,</div><div class="line">&#123;name:'Hege',country:'Sweden'&#125;,</div><div class="line">&#123;name:'Kai',country:'Denmark'&#125;]"&gt;</div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>循环对象：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">    &#123;&#123; x.name + ', ' + x.country &#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ng-app-指令"><a href="#ng-app-指令" class="headerlink" title="ng-app 指令"></a>ng-app 指令</h3><ul>
<li>ng-app 指令在网页加载完毕时会自动引导（自动初始化）应用程序</li>
</ul>
<h3 id="ng-init-指令"><a href="#ng-init-指令" class="headerlink" title="ng-init 指令"></a>ng-init 指令</h3><ul>
<li>ng-init 指令为 AngularJS 应用程序定义了 初始值</li>
</ul>
<h3 id="ng-model-指令"><a href="#ng-model-指令" class="headerlink" title="ng-model 指令"></a>ng-model 指令</h3><ul>
<li>ng-model 指令 绑定 HTML 元素 到应用程序数据</li>
</ul>
<h3 id="ng-repeat-指令"><a href="#ng-repeat-指令" class="headerlink" title="ng-repeat 指令"></a>ng-repeat 指令</h3><ul>
<li>ng-repeat 指令对于集合中（数组中）的每个项会 克隆一次 HTML 元素</li>
</ul>
<h3 id="创建自定义的指令"><a href="#创建自定义的指令" class="headerlink" title="创建自定义的指令"></a>创建自定义的指令</h3><ul>
<li>.directive 函数来添加自定义的指令</li>
<li>要调用自定义指令，HTML 元素上需要添加自定义指令名</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">runoob-directive</span>&gt;</span><span class="tag">&lt;/<span class="name">runoob-directive</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"myApp"</span>, []);</div><div class="line">app.directive(<span class="string">"runoobDirective"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        template : <span class="string">"&lt;h1&gt;自定义指令!&lt;/h1&gt;"</span></div><div class="line">    &#125;;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="限制使用"><a href="#限制使用" class="headerlink" title="限制使用"></a>限制使用</h3><ul>
<li>通过添加 restrict 属性,restrict 默认值为 EA, 即可以通过元素名和属性名来调用指令</li>
<li>E 作为元素名使用</li>
<li>A 作为属性使用</li>
<li>C 作为类名使用</li>
<li>M 作为注释使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var app = angular.module("myApp", []);</div><div class="line">app.directive("runoobDirective", function() &#123;</div><div class="line">    return &#123;</div><div class="line">        restrict : "A",</div><div class="line">        template : "<span class="tag">&lt;<span class="name">h1</span>&gt;</span>自定义指令!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>"</div><div class="line">    &#125;;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS模型"><a href="#AngularJS模型" class="headerlink" title="AngularJS模型"></a>AngularJS模型</h2><ul>
<li>ng-model 指令用于绑定应用程序数据到 HTML 控制器(input, select, textarea)的值</li>
</ul>
<h3 id="ng-model-指令-1"><a href="#ng-model-指令-1" class="headerlink" title="ng-model 指令"></a>ng-model 指令</h3><ul>
<li>ng-model 指令可以将输入域的值与 AngularJS 创建的变量绑定</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">    名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">ng-model</span>=<span class="string">"name"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.name = <span class="string">"John Doe"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h3><ul>
<li>双向绑定，在修改输入域的值时， AngularJS 属性的值也将修改</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">ng-model</span>=<span class="string">"name"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你输入了: &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.name = <span class="string">"John Doe"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="验证用户输入"><a href="#验证用户输入" class="headerlink" title="验证用户输入"></a>验证用户输入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"myForm"</span>&gt;</span></div><div class="line">    Email:</div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"myAddress"</span> <span class="attr">ng-model</span>=<span class="string">"text"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-show</span>=<span class="string">"myForm.myAddress.$error.email"</span>&gt;</span>不是一个合法的邮箱地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="应用状态"><a href="#应用状态" class="headerlink" title="应用状态"></a>应用状态</h3><ul>
<li>ng-model 指令可以为应用数据提供状态值(invalid, dirty, touched, error)</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"myForm"</span> <span class="attr">ng-init</span>=<span class="string">"myText = 'test@runoob.com'"</span>&gt;</span></div><div class="line">    Email:</div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"myAddress"</span> <span class="attr">ng-model</span>=<span class="string">"myText"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    &#123;&#123;myForm.myAddress.$valid&#125;&#125;</div><div class="line">    &#123;&#123;myForm.myAddress.$dirty&#125;&#125;</div><div class="line">    &#123;&#123;myForm.myAddress.$touched&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-类"><a href="#CSS-类" class="headerlink" title="CSS 类"></a>CSS 类</h3><ul>
<li>ng-model 指令基于它们的状态为 HTML 元素提供了 CSS 类</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">input.ng-invalid &#123;</div><div class="line">    background-color: lightblue;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"myForm"</span>&gt;</span></div><div class="line">    输入你的名字:</div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"myAddress"</span> <span class="attr">ng-model</span>=<span class="string">"text"</span> <span class="attr">required</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-Scope"><a href="#AngularJS-Scope" class="headerlink" title="AngularJS Scope"></a>AngularJS Scope</h2><ul>
<li>Scope(作用域) 是应用在 HTML (视图) 和 JavaScript (控制器)之间的纽带</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;carname&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line"></div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.carname = <span class="string">"Volvo"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Scope-概述"><a href="#Scope-概述" class="headerlink" title="Scope 概述"></a>Scope 概述</h3><ul>
<li>View(视图), 即 HTML。</li>
<li>Model(模型), 当前视图中可用的数据。</li>
<li>Controller(控制器), 即 JavaScript 函数，可以添加或修改属性</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">ng-model</span>=<span class="string">"name"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;greeting&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">'sayHello()'</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.name = <span class="string">"Runoob"</span>;</div><div class="line">    $scope.sayHello = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        $scope.greeting = <span class="string">'Hello '</span> + $scope.name + <span class="string">'!'</span>;</div><div class="line">    &#125;;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Scope-作用范围"><a href="#Scope-作用范围" class="headerlink" title="Scope 作用范围"></a>Scope 作用范围</h3><ul>
<li>在以上两个实例中，只有一个作用域 scope，所以处理起来比较简单</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span>&#123;&#123;x&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line"></div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.names = [<span class="string">"Emil"</span>, <span class="string">"Tobias"</span>, <span class="string">"Linus"</span>];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="根作用域"><a href="#根作用域" class="headerlink" title="根作用域"></a>根作用域</h3><ul>
<li>$rootScope 可作用于整个应用中。是各个 controller 中 scope 的桥梁。用 rootscope 定义的值，可以在各个 controller 中使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;lastname&#125;&#125; 家族成员:<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span>&#123;&#123;x&#125;&#125; &#123;&#123;lastname&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line"></div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $rootScope)</span> </span>&#123;</div><div class="line">    $scope.names = [<span class="string">"Emil"</span>, <span class="string">"Tobias"</span>, <span class="string">"Linus"</span>];</div><div class="line">    $rootScope.lastname = <span class="string">"Refsnes"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-过滤器"><a href="#AngularJS-过滤器" class="headerlink" title="AngularJS 过滤器"></a>AngularJS 过滤器</h2><ul>
<li>过滤器可以使用一个管道字符（|）添加到表达式和指令中</li>
</ul>
<h3 id="AngularJS-过滤器-1"><a href="#AngularJS-过滤器-1" class="headerlink" title="AngularJS 过滤器"></a>AngularJS 过滤器</h3><ul>
<li>AngularJS 过滤器可用于转换数据</li>
<li>currency 格式化数字为货币格式</li>
<li>filter 从数组项中选择一个子集</li>
<li>lowercase 格式化字符串为小写</li>
<li>orderBy 根据某个表达式排列数组</li>
<li>uppercase 格式化字符串为大写</li>
</ul>
<h3 id="表达式中添加过滤器"><a href="#表达式中添加过滤器" class="headerlink" title="表达式中添加过滤器"></a>表达式中添加过滤器</h3><ul>
<li>过滤器可以通过一个管道字符（|）和一个过滤器添加到表达式中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"personCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名为 &#123;&#123; lastName | uppercase &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">  <span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, [])</div><div class="line">  app.controller(<span class="string">'personCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName = <span class="string">"John"</span>,</div><div class="line">    $scope.lastName = <span class="string">"Doe"</span>,</div><div class="line">    $scope.fullName = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> $scope.firstName + <span class="string">" "</span> + $scope.lastName;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="currency-过滤器"><a href="#currency-过滤器" class="headerlink" title="currency 过滤器"></a>currency 过滤器</h3><ul>
<li>currency 过滤器将数字格式化为货币格式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"costCtrl"</span>&gt;</span></div><div class="line"></div><div class="line">数量: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"quantity"</span>&gt;</span></div><div class="line">价格: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"price"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总价 = &#123;&#123; (quantity * price) | currency &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'costCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.quantity = <span class="number">1</span>;</div><div class="line">    $scope.price = <span class="number">9.99</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="向指令添加过滤器"><a href="#向指令添加过滤器" class="headerlink" title="向指令添加过滤器"></a>向指令添加过滤器</h3><ul>
<li>orderBy 过滤器根据表达式排列数组</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"namesCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>循环对象:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names | orderBy:'country'"</span>&gt;</span></div><div class="line">    &#123;&#123; x.name + ', ' + x.country &#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">	<span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, [])</div><div class="line">	.controller(<span class="string">'namesCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">		$scope.names = [</div><div class="line">			&#123;name:<span class="string">'Jani'</span>,country:<span class="string">'Norway'</span>&#125;,</div><div class="line">			&#123;name:<span class="string">'Hege'</span>,country:<span class="string">'Sweden'</span>&#125;,</div><div class="line">			&#123;name:<span class="string">'Kai'</span>,country:<span class="string">'Denmark'</span>&#125;</div><div class="line">		];</div><div class="line">	&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="过滤输入"><a href="#过滤输入" class="headerlink" title="过滤输入"></a>过滤输入</h3><ul>
<li>filter 过滤器从数组中选择一个子集</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"namesCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>输入过滤:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names | filter:test | orderBy:'country'"</span>&gt;</span></div><div class="line">    &#123;&#123; (x.name | uppercase) + ', ' + x.country &#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">angular.module(<span class="string">'myApp'</span>, []).controller(<span class="string">'namesCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.names = [</div><div class="line">        &#123;name:<span class="string">'Jani'</span>,country:<span class="string">'Norway'</span>&#125;,</div><div class="line">        &#123;name:<span class="string">'Hege'</span>,country:<span class="string">'Sweden'</span>&#125;,</div><div class="line">        &#123;name:<span class="string">'Kai'</span>,country:<span class="string">'Denmark'</span>&#125;</div><div class="line">    ];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="自定义过滤器"><a href="#自定义过滤器" class="headerlink" title="自定义过滤器"></a>自定义过滤器</h3><ul>
<li>以下实例自定义一个过滤器 reverse，将字符串反转</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var app = angular.module('myApp', []);</div><div class="line">app.controller('myCtrl', function($scope) &#123;</div><div class="line">    $scope.msg = "Runoob";</div><div class="line">&#125;);</div><div class="line">app.filter('reverse', function() &#123; //可以注入依赖</div><div class="line">    return function(text) &#123;</div><div class="line">        return text.split("").reverse().join("");</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-服务-Service"><a href="#AngularJS-服务-Service" class="headerlink" title="AngularJS 服务(Service)"></a>AngularJS 服务(Service)</h2><ul>
<li>AngularJS 中你可以创建自己的服务，或使用内建服务</li>
</ul>
<h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><ul>
<li>在 AngularJS 中，服务是一个函数或对象，可在你的 AngularJS 应用中使用</li>
<li>$location 服务，它可以返回当前页面的 URL 地址</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 当前页面的url:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;myUrl&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>该实例使用了内建的 $location 服务获取当前页面的 URL。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $location)</span> </span>&#123;</div><div class="line">    $scope.myUrl = $location.absUrl();</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h3><ul>
<li>AngularJS 会一直监控应用，处理事件变化， AngularJS 使用 $location 服务比使用 window.location 对象更好</li>
</ul>
<h3 id="http-服务"><a href="#http-服务" class="headerlink" title="$http 服务"></a>$http 服务</h3><ul>
<li>$http 是 AngularJS 应用中最常用的服务，服务向服务器发送请求，应用响应服务器传送过来的数据</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎信息:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;myWelcome&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> $http 服务向服务器请求信息，返回的值放入变量 "myWelcome" 中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">  $http.get(<span class="string">"welcome.htm"</span>).then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</div><div class="line">      $scope.myWelcome = response.data;</div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="timeout-服务"><a href="#timeout-服务" class="headerlink" title="$timeout 服务"></a>$timeout 服务</h3><ul>
<li>AngularJS $timeout 服务对应了 JS window.setTimeout 函数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>两秒后显示信息:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;myHeader&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>$timeout 访问在规定的毫秒数后执行指定函数。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $timeout)</span> </span>&#123;</div><div class="line">  $scope.myHeader = <span class="string">"Hello World!"</span>;</div><div class="line">  $timeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">      $scope.myHeader = <span class="string">"How are you today?"</span>;</div><div class="line">  &#125;, <span class="number">2000</span>);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="interval-服务"><a href="#interval-服务" class="headerlink" title="$interval 服务"></a>$interval 服务</h3><ul>
<li>AngularJS $interval 服务对应了 JS window.setInterval 函数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>现在时间是:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;theTime&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>$interval 访问在指定的周期(以毫秒计)来调用函数或计算表达式。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope, $interval</span>) </span>&#123;</div><div class="line">  $scope.theTime = <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString();</div><div class="line">  $interval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      $scope.theTime = <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString();</div><div class="line">  &#125;, <span class="number">1000</span>);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建自定义服务"><a href="#创建自定义服务" class="headerlink" title="创建自定义服务"></a>创建自定义服务</h3><ul>
<li>创建访问自定义服务，链接到你的模块中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">app.service('hexafy', function() &#123;</div><div class="line">    this.myFunc = function (x) &#123;</div><div class="line">        return x.toString(16);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>要使用访问自定义服务，需要在定义控制器的时候独立添加，设置依赖关系</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>255 的16进制是:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;hex&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>自定义服务，用于转换16进制数：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line"></div><div class="line">app.service(<span class="string">'hexafy'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.myFunc = <span class="function"><span class="keyword">function</span> <span class="params">(x)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x.toString(<span class="number">16</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, hexafy)</span> </span>&#123;</div><div class="line">  $scope.hex = hexafy.myFunc(<span class="number">255</span>);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="过滤器中，使用自定义服务"><a href="#过滤器中，使用自定义服务" class="headerlink" title="过滤器中，使用自定义服务"></a>过滤器中，使用自定义服务</h3><ul>
<li>当你创建了自定义服务，并连接到你的应用上后，你可以在控制器，指令，过滤器或其他服务中使用它</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></div><div class="line">在过滤器中使用服务:</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;255 | myFormat&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.service(<span class="string">'hexafy'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.myFunc = <span class="function"><span class="keyword">function</span> <span class="params">(x)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x.toString(<span class="number">16</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">app.filter(<span class="string">'myFormat'</span>,[<span class="string">'hexafy'</span>, <span class="function"><span class="keyword">function</span><span class="params">(hexafy)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(x)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> hexafy.myFunc(x);</div><div class="line">    &#125;;</div><div class="line">&#125;]);</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>在对象数组中获取值时你可以使用过滤器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在获取数组 [255, 251, 200] 值时使用过滤器:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in counts"</span>&gt;</span>&#123;&#123;x | myFormat&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>过滤器使用服务将10进制转换为16进制。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.service(<span class="string">'hexafy'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">this</span>.myFunc = <span class="function"><span class="keyword">function</span> <span class="params">(x)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x.toString(<span class="number">16</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">app.filter(<span class="string">'myFormat'</span>,[<span class="string">'hexafy'</span>, <span class="function"><span class="keyword">function</span><span class="params">(hexafy)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(x)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> hexafy.myFunc(x);</div><div class="line">    &#125;;</div><div class="line">&#125;]);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.counts = [<span class="number">255</span>, <span class="number">251</span>, <span class="number">200</span>];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-Select-选择框"><a href="#AngularJS-Select-选择框" class="headerlink" title="AngularJS Select(选择框)"></a>AngularJS Select(选择框)</h2><ul>
<li>AngularJS 可以使用数组或对象创建一个下拉列表选项</li>
</ul>
<h3 id="使用-ng-options-创建选择框"><a href="#使用-ng-options-创建选择框" class="headerlink" title="使用 ng-options 创建选择框"></a>使用 ng-options 创建选择框</h3><ul>
<li>在 AngularJS 中我们可以使用 ng-option 指令来创建一个下拉列表，列表项通过对象和数组循环输出</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-init</span>=<span class="string">"selectedName = names[0]"</span> <span class="attr">ng-model</span>=<span class="string">"selectedName"</span> <span class="attr">ng-options</span>=<span class="string">"x for x in names"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.names = [<span class="string">"Google"</span>, <span class="string">"Runoob"</span>, <span class="string">"Taobao"</span>];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ng-options-与-ng-repeat"><a href="#ng-options-与-ng-repeat" class="headerlink" title="ng-options 与 ng-repeat"></a>ng-options 与 ng-repeat</h3><ul>
<li>可以使用ng-repeat 指令来创建下拉列表</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>选择网站:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"selectedSite"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">ng-repeat</span>=<span class="string">"x in sites"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;x.url&#125;&#125;"</span>&gt;</span>&#123;&#123;x.site&#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你选择的是: &#123;&#123;selectedSite&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">   $scope.sites = [</div><div class="line">	    &#123;site : <span class="string">"Google"</span>, url : <span class="string">"http://www.google.com"</span>&#125;,</div><div class="line">	    &#123;site : <span class="string">"Runoob"</span>, url : <span class="string">"http://www.runoob.com"</span>&#125;,</div><div class="line">	    &#123;site : <span class="string">"Taobao"</span>, url : <span class="string">"http://www.taobao.com"</span>&#125;</div><div class="line">	];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 ng-options 指令，选择的值是一个对象</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>选择网站:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"selectedSite"</span> <span class="attr">ng-options</span>=<span class="string">"x.site for x in sites"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你选择的是: &#123;&#123;selectedSite.site&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>网址为: &#123;&#123;selectedSite.url&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">   $scope.sites = [</div><div class="line">	    &#123;site : <span class="string">"Google"</span>, url : <span class="string">"http://www.google.com"</span>&#125;,</div><div class="line">	    &#123;site : <span class="string">"Runoob"</span>, url : <span class="string">"http://www.runoob.com"</span>&#125;,</div><div class="line">	    &#123;site : <span class="string">"Taobao"</span>, url : <span class="string">"http://www.taobao.com"</span>&#125;</div><div class="line">	];</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="数据源为对象"><a href="#数据源为对象" class="headerlink" title="数据源为对象"></a>数据源为对象</h3><ul>
<li>前面实例我们使用了数组作为数据源，以下我们将数据对象作为数据源</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>选择的网站是:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"selectedSite"</span> <span class="attr">ng-options</span>=<span class="string">"x for (x, y) in sites"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你选择的值是: &#123;&#123;selectedSite&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>该实例演示了使用对象作为创建下拉列表。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.sites = &#123;</div><div class="line">	    site01 : <span class="string">"Google"</span>,</div><div class="line">	    site02 : <span class="string">"Runoob"</span>,</div><div class="line">	    site03 : <span class="string">"Taobao"</span></div><div class="line">	&#125;;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>value 在 key-value 对中也可以是个对象</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>选择一辆车:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"selectedCar"</span> <span class="attr">ng-options</span>=<span class="string">"x for (x, y) in cars"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你选择的是: &#123;&#123;selectedCar.brand&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>模型: &#123;&#123;selectedCar.model&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>颜色: &#123;&#123;selectedCar.color&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意选中的值是一个对象。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.cars = &#123;</div><div class="line">        car01 : &#123;brand : <span class="string">"Ford"</span>, model : <span class="string">"Mustang"</span>, color : <span class="string">"red"</span>&#125;,</div><div class="line">        car02 : &#123;brand : <span class="string">"Fiat"</span>, model : <span class="string">"500"</span>, color : <span class="string">"white"</span>&#125;,</div><div class="line">        car03 : &#123;brand : <span class="string">"Volvo"</span>, model : <span class="string">"XC90"</span>, color : <span class="string">"black"</span>&#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>在下拉菜单也可以不使用 key-value 对中的 key , 直接使用对象的属性</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>选择一辆车:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"selectedCar"</span> <span class="attr">ng-options</span>=<span class="string">"y.brand for (x, y) in cars"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你选择的是: &#123;&#123;selectedCar.brand&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>型号为: &#123;&#123;selectedCar.model&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>颜色为: &#123;&#123;selectedCar.color&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下拉列表中的选项也可以是对象的属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.cars = &#123;</div><div class="line">        car01 : &#123;brand : <span class="string">"Ford"</span>, model : <span class="string">"Mustang"</span>, color : <span class="string">"red"</span>&#125;,</div><div class="line">        car02 : &#123;brand : <span class="string">"Fiat"</span>, model : <span class="string">"500"</span>, color : <span class="string">"white"</span>&#125;,</div><div class="line">        car03 : &#123;brand : <span class="string">"Volvo"</span>, model : <span class="string">"XC90"</span>, color : <span class="string">"black"</span>&#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-表格"><a href="#AngularJS-表格" class="headerlink" title="AngularJS 表格"></a>AngularJS 表格</h2><ul>
<li>ng-repeat 指令可以完美的显示表格</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">    $http.get(<span class="string">"/try/angularjs/data/Customers_JSON.php"</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</div><div class="line">        $scope.names = result.data.records;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="废弃声明-v1-5"><a href="#废弃声明-v1-5" class="headerlink" title="废弃声明 (v1.5)"></a>废弃声明 (v1.5)</h3><ul>
<li>v1.5 中$http 的 success 和 error 方法已废弃。使用 then 方法替代</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var app = angular.module('myApp', []);</div><div class="line">app.controller('customersCtrl', function($scope, $http) &#123;</div><div class="line">    $http.get("/try/angularjs/data/Customers_JSON.php")</div><div class="line">    .success(function (response) &#123;$scope.names = response.records;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="使用-orderBy-过滤器"><a href="#使用-orderBy-过滤器" class="headerlink" title="使用 orderBy 过滤器"></a>使用 orderBy 过滤器</h3><ul>
<li>排序显示，可以使用 orderBy 过滤器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names | orderBy : 'Country'"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">    $http.get(<span class="string">"/try/angularjs/data/Customers_JSON.php"</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</div><div class="line">        $scope.names = result.data.records;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="显示序号-index"><a href="#显示序号-index" class="headerlink" title="显示序号 ($index)"></a>显示序号 ($index)</h3><ul>
<li>表格显示序号可以在 <td> 中添加 $index</td></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $index + 1 &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">    $http.get(<span class="string">"/try/angularjs/data/Customers_JSON.php"</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</div><div class="line">        $scope.names = result.data.records;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="使用-even-和-odd"><a href="#使用-even-和-odd" class="headerlink" title="使用 $even 和 $odd"></a>使用 $even 和 $odd</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">ng-if</span>=<span class="string">"$odd"</span> <span class="attr">style</span>=<span class="string">"background-color:#f1f1f1"</span>&gt;</span></div><div class="line">    &#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">ng-if</span>=<span class="string">"$even"</span>&gt;</span></div><div class="line">    &#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">ng-if</span>=<span class="string">"$odd"</span> <span class="attr">style</span>=<span class="string">"background-color:#f1f1f1"</span>&gt;</span></div><div class="line">    &#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">ng-if</span>=<span class="string">"$even"</span>&gt;</span></div><div class="line">    &#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">    $http.get(<span class="string">"/try/angularjs/data/Customers_JSON.php"</span>)</div><div class="line">    .then(<span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</div><div class="line">        $scope.names = result.data.records;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-SQL"><a href="#AngularJS-SQL" class="headerlink" title="AngularJS SQL"></a>AngularJS SQL</h2><ul>
<li>在前面章节中的代码也可以用于读取数据库中的数据</li>
</ul>
<h3 id="使用-PHP-从-MySQL-中获取数据"><a href="#使用-PHP-从-MySQL-中获取数据" class="headerlink" title="使用 PHP 从 MySQL 中获取数据"></a>使用 PHP 从 MySQL 中获取数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">   $http.get(<span class="string">"http://www.runoob.com/try/angularjs/data/Customers_MySQL.php"</span>)</div><div class="line">   .success(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;$scope.names = response.records;&#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ASP-NET-中执行-SQL-获取数据"><a href="#ASP-NET-中执行-SQL-获取数据" class="headerlink" title="ASP.NET 中执行 SQL 获取数据"></a>ASP.NET 中执行 SQL 获取数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"customersCtrl"</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Country &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'customersCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">   $http.get(<span class="string">"http://www.runoob.com/try/angularjs/data/Customers_SQL.aspx"</span>)</div><div class="line">   .success(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;$scope.names = response.records;&#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h3><ul>
<li>使用 PHP 和 MySQL。返回 JSON。</li>
<li>使用 PHP 和 MS Access。返回 JSON。</li>
<li>使用 ASP.NET, VB, 及 MS Access。 返回 JSON。</li>
<li>使用 ASP.NET, Razor, 及 SQL Lite。 返回 JSON</li>
</ul>
<h3 id="跨域-HTTP-请求"><a href="#跨域-HTTP-请求" class="headerlink" title="跨域 HTTP 请求"></a>跨域 HTTP 请求</h3><ul>
<li>header(“Access-Control-Allow-Origin: *”);</li>
</ul>
<h3 id="PHP-和-MySql-代码实例"><a href="#PHP-和-MySql-代码实例" class="headerlink" title="PHP 和 MySql 代码实例"></a>PHP 和 MySql 代码实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line">header(<span class="string">"Access-Control-Allow-Origin: *"</span>);</div><div class="line">header(<span class="string">"Content-Type: application/json; charset=UTF-8"</span>);</div><div class="line"></div><div class="line">$conn = <span class="keyword">new</span> mysqli(<span class="string">"myServer"</span>, <span class="string">"myUser"</span>, <span class="string">"myPassword"</span>, <span class="string">"Northwind"</span>);</div><div class="line"></div><div class="line">$result = $conn-&gt;query(<span class="string">"SELECT CompanyName, City, Country FROM Customers"</span>);</div><div class="line"></div><div class="line">$outp = <span class="string">""</span>;</div><div class="line"><span class="keyword">while</span>($rs = $result-&gt;fetch_array(MYSQLI_ASSOC)) &#123;</div><div class="line">    <span class="keyword">if</span> ($outp != <span class="string">""</span>) &#123;$outp .= <span class="string">","</span>;&#125;</div><div class="line">    $outp .= <span class="string">'&#123;"Name":"'</span>  . $rs[<span class="string">"CompanyName"</span>] . <span class="string">'",'</span>;</div><div class="line">    $outp .= <span class="string">'"City":"'</span>   . $rs[<span class="string">"City"</span>]        . <span class="string">'",'</span>;</div><div class="line">    $outp .= <span class="string">'"Country":"'</span>. $rs[<span class="string">"Country"</span>]     . <span class="string">'"&#125;'</span>; </div><div class="line">&#125;</div><div class="line">$outp =<span class="string">'&#123;"records":['</span>.$outp.<span class="string">']&#125;'</span>;</div><div class="line">$conn-&gt;close();</div><div class="line"></div><div class="line"><span class="keyword">echo</span>($outp);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h3 id="PHP-和-MS-Access-代码实例"><a href="#PHP-和-MS-Access-代码实例" class="headerlink" title="PHP 和 MS Access 代码实例"></a>PHP 和 MS Access 代码实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line">header(<span class="string">"Access-Control-Allow-Origin: *"</span>);</div><div class="line">header(<span class="string">"Content-Type: application/json; charset=ISO-8859-1"</span>);</div><div class="line"></div><div class="line">$conn = <span class="keyword">new</span> COM(<span class="string">"ADODB.Connection"</span>);</div><div class="line">$conn-&gt;open(<span class="string">"PROVIDER=Microsoft.Jet.OLEDB.4.0;Data Source=Northwind.mdb"</span>);</div><div class="line"></div><div class="line">$rs = $conn-&gt;execute(<span class="string">"SELECT CompanyName, City, Country FROM Customers"</span>);</div><div class="line"></div><div class="line">$outp = <span class="string">""</span>;</div><div class="line"><span class="keyword">while</span> (!$rs-&gt;EOF) &#123;</div><div class="line">    <span class="keyword">if</span> ($outp != <span class="string">""</span>) &#123;$outp .= <span class="string">","</span>;&#125;</div><div class="line">    $outp .= <span class="string">'&#123;"Name":"'</span>  . $rs[<span class="string">"CompanyName"</span>] . <span class="string">'",'</span>;</div><div class="line">    $outp .= <span class="string">'"City":"'</span>   . $rs[<span class="string">"City"</span>]        . <span class="string">'",'</span>;</div><div class="line">    $outp .= <span class="string">'"Country":"'</span>. $rs[<span class="string">"Country"</span>]     . <span class="string">'"&#125;'</span>; </div><div class="line">    $rs-&gt;MoveNext();</div><div class="line">&#125;</div><div class="line">$outp =<span class="string">'&#123;"records":['</span>.$outp.<span class="string">']&#125;'</span>;</div><div class="line"></div><div class="line">$conn-&gt;close();</div><div class="line"></div><div class="line"><span class="keyword">echo</span> ($outp);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ASP-NET-VB-和-MS-Access-代码实例"><a href="#ASP-NET-VB-和-MS-Access-代码实例" class="headerlink" title="ASP.NET, VB 和 MS Access 代码实例"></a>ASP.NET, VB 和 MS Access 代码实例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;%@ Import Namespace="System.IO"%&gt;</div><div class="line">&lt;%@ Import Namespace="System.Data"%&gt;</div><div class="line">&lt;%@ Import Namespace="System.Data.OleDb"%&gt;</div><div class="line">&lt;%</div><div class="line">Response.AppendHeader("Access-Control-Allow-Origin", "*")</div><div class="line">Response.AppendHeader("Content-type", "application/json")</div><div class="line">Dim conn As OleDbConnection</div><div class="line">Dim objAdapter As OleDbDataAdapter</div><div class="line">Dim objTable As DataTable</div><div class="line">Dim objRow As DataRow</div><div class="line">Dim objDataSet As New DataSet()</div><div class="line">Dim outp</div><div class="line">Dim c</div><div class="line">conn = New OledbConnection("Provider=Microsoft.Jet.OLEDB.4.0;data source=Northwind.mdb")</div><div class="line">objAdapter = New OledbDataAdapter("SELECT CompanyName, City, Country FROM Customers", conn)</div><div class="line">objAdapter.Fill(objDataSet, "myTable")</div><div class="line">objTable=objDataSet.Tables("myTable")</div><div class="line"></div><div class="line">outp = ""</div><div class="line">c = chr(34)</div><div class="line">for each x in objTable.Rows</div><div class="line">if outp &lt;&gt; "" then outp = outp &amp; ","</div><div class="line">outp = outp &amp; "&#123;" &amp; c &amp; "Name"    &amp; c &amp; ":" &amp; c &amp; x("CompanyName") &amp; c &amp; ","</div><div class="line">outp = outp &amp;       c &amp; "City"    &amp; c &amp; ":" &amp; c &amp; x("City")        &amp; c &amp; "," </div><div class="line">outp = outp &amp;       c &amp; "Country" &amp; c &amp; ":" &amp; c &amp; x("Country")     &amp; c &amp; "&#125;"</div><div class="line">next</div><div class="line"></div><div class="line">outp ="&#123;" &amp; c &amp; "records" &amp; c &amp; ":[" &amp; outp &amp; "]&#125;"</div><div class="line">response.write(outp)</div><div class="line">conn.close</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<h3 id="ASP-NET-VB-Razor-和-SQL-Lite-代码实例"><a href="#ASP-NET-VB-Razor-和-SQL-Lite-代码实例" class="headerlink" title="ASP.NET, VB Razor 和 SQL Lite 代码实例"></a>ASP.NET, VB Razor 和 SQL Lite 代码实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">  @&#123;</div><div class="line">Response.AppendHeader("Access-Control-Allow-Origin", "*")</div><div class="line">Response.AppendHeader("Content-type", "application/json")</div><div class="line">var db = Database.Open("Northwind");</div><div class="line">var query = db.Query("SELECT CompanyName, City, Country FROM Customers");</div><div class="line">var outp =""</div><div class="line">var c = chr(34)</div><div class="line">&#125;</div><div class="line">@foreach(var row in query)</div><div class="line">&#123;</div><div class="line">if outp <span class="tag">&lt;&gt;</span> "" then outp = outp + ","</div><div class="line">outp = outp + "&#123;" + c + "Name"    + c + ":" + c + @row.CompanyName + c + ","</div><div class="line">outp = outp +       c + "City"    + c + ":" + c + @row.City        + c + ","</div><div class="line">outp = outp +       c + "Country" + c + ":" + c + @row.Country     + c + "&#125;"</div><div class="line">&#125;</div><div class="line">outp ="&#123;" + c + "records" + c + ":[" + outp + "]&#125;"</div><div class="line">@outp</div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-HTML-DOM"><a href="#AngularJS-HTML-DOM" class="headerlink" title="AngularJS HTML DOM"></a>AngularJS HTML DOM</h2><ul>
<li>AngularJS 为 HTML DOM 元素的属性提供了绑定应用数据的指令</li>
</ul>
<h3 id="ng-disabled-指令"><a href="#ng-disabled-指令" class="headerlink" title="ng-disabled 指令"></a>ng-disabled 指令</h3><ul>
<li>ng-disabled 指令直接绑定应用程序数据到 HTML 的 disabled 属性</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span> <span class="attr">ng-init</span>=<span class="string">"mySwitch=true"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-disabled</span>=<span class="string">"mySwitch"</span>&gt;</span>点我!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"mySwitch"</span>&gt;</span>按钮</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">&#123;&#123; mySwitch &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ng-show-指令"><a href="#ng-show-指令" class="headerlink" title="ng-show 指令"></a>ng-show 指令</h3><ul>
<li>ng-show 指令隐藏或显示一个 HTML 元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"true"</span>&gt;</span>我是可见的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"false"</span>&gt;</span>我是不可见的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ng-hide-指令"><a href="#ng-hide-指令" class="headerlink" title="ng-hide 指令"></a>ng-hide 指令</h3><ul>
<li>ng-hide 指令用于隐藏或显示 HTML 元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-hide</span>=<span class="string">"true"</span>&gt;</span>我是不可见的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-hide</span>=<span class="string">"false"</span>&gt;</span>我是可见的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-事件"><a href="#AngularJS-事件" class="headerlink" title="AngularJS 事件"></a>AngularJS 事件</h2><ul>
<li>AngularJS 有自己的 HTML 事件指令</li>
</ul>
<h3 id="ng-click-指令"><a href="#ng-click-指令" class="headerlink" title="ng-click 指令"></a>ng-click 指令</h3><ul>
<li>ng-click 指令定义了 AngularJS 点击事件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"count = count + 1"</span>&gt;</span>点我！<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.count = <span class="number">0</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="隐藏-HTML-元素"><a href="#隐藏-HTML-元素" class="headerlink" title="隐藏 HTML 元素"></a>隐藏 HTML 元素</h3><ul>
<li>ng-hide 指令用于设置应用部分是否可见</li>
<li>ng-hide=”true” 设置 HTML 元素不可见</li>
<li>ng-hide=”false” 设置 HTML 元素可见</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"personCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"toggle()"</span>&gt;</span>隐藏/显示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-hide</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">ng-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span> <span class="attr">ng-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓名: &#123;&#123;firstName + " " + lastName&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'personCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName = <span class="string">"John"</span>;</div><div class="line">    $scope.lastName = <span class="string">"Doe"</span>;</div><div class="line">    $scope.myVar = <span class="literal">false</span>;</div><div class="line">    $scope.toggle = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        $scope.myVar = !$scope.myVar;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="显示-HTML-元素"><a href="#显示-HTML-元素" class="headerlink" title="显示 HTML 元素"></a>显示 HTML 元素</h3><ul>
<li>ng-show 指令可用于设置应用中的一部分是否可见 </li>
<li>ng-show=”false” 可以设置 HTML 元素 不可见</li>
<li>ng-show=”true” 可以以设置 HTML 元素可见</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"personCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"toggle()"</span>&gt;</span>隐藏/显示<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"lastName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">姓名: &#123;&#123;firstName + " " + lastName&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'personCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName = <span class="string">"John"</span>,</div><div class="line">    $scope.lastName = <span class="string">"Doe"</span></div><div class="line">    $scope.myVar = <span class="literal">true</span>;</div><div class="line">    $scope.toggle = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        $scope.myVar = !$scope.myVar;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-模块"><a href="#AngularJS-模块" class="headerlink" title="AngularJS 模块"></a>AngularJS 模块</h2><ul>
<li>模块定义了一个应用程序</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"myApp"</span>, []); </div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="添加控制器"><a href="#添加控制器" class="headerlink" title="添加控制器"></a>添加控制器</h3><ul>
<li>使用 ng-controller 指令来添加应用的控制器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">&#123;&#123; firstName + " " + lastName &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"myApp"</span>, []);</div><div class="line"></div><div class="line">app.controller(<span class="string">"myCtrl"</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName = <span class="string">"John"</span>;</div><div class="line">    $scope.lastName = <span class="string">"Doe"</span>;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="添加指令"><a href="#添加指令" class="headerlink" title="添加指令"></a>添加指令</h3><ul>
<li>AngularJS 提供了很多内置的指令，你可以使用它们来为你的应用添加功能</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">runoob-directive</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"myApp"</span>, []);</div><div class="line"></div><div class="line">app.directive(<span class="string">"runoobDirective"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        template : <span class="string">"我在指令构造器中创建!"</span></div><div class="line">    &#125;;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="模块和控制器包含在-JS-文件中"><a href="#模块和控制器包含在-JS-文件中" class="headerlink" title="模块和控制器包含在 JS 文件中"></a>模块和控制器包含在 JS 文件中</h3><ul>
<li>通常 AngularJS 应用程序将模块和控制器包含在 JavaScript 文件中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">&#123;&#123; firstName + " " + lastName &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myApp.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myCtrl.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="函数会影响到全局命名空间"><a href="#函数会影响到全局命名空间" class="headerlink" title="函数会影响到全局命名空间"></a>函数会影响到全局命名空间</h3><ul>
<li>AngularJS 模块让所有函数的作用域在该模块下，避免了该问题</li>
</ul>
<h3 id="什么时候载入库"><a href="#什么时候载入库" class="headerlink" title="什么时候载入库"></a>什么时候载入库</h3><ul>
<li>AngularJS 在 <head> 元素中被加载，因为对 angular.module 的调用只能在库加载完成后才能进行</head></li>
<li>AngularJS 库是在文档的 <head> 区域被加载</head></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line">&#123;&#123; firstName + " " + lastName &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">"myApp"</span>, []);</div><div class="line">app.controller(<span class="string">"myCtrl"</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstName = <span class="string">"John"</span>;</div><div class="line">    $scope.lastName = <span class="string">"Doe"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-表单"><a href="#AngularJS-表单" class="headerlink" title="AngularJS 表单"></a>AngularJS 表单</h2><ul>
<li>AngularJS 表单是输入控件的集合</li>
</ul>
<h3 id="HTML-控件"><a href="#HTML-控件" class="headerlink" title="HTML 控件"></a>HTML 控件</h3><ul>
<li>input 元素</li>
<li>select 元素</li>
<li>button 元素</li>
<li>textarea 元素</li>
</ul>
<h3 id="数据绑定-1"><a href="#数据绑定-1" class="headerlink" title="数据绑定"></a>数据绑定</h3><ul>
<li>Input 控件使用 ng-model 指令来实现数据绑定</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"formCtrl"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">    First Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"firstname"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'formCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.firstname = <span class="string">"John"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Checkbox（复选框）"><a href="#Checkbox（复选框）" class="headerlink" title="Checkbox（复选框）"></a>Checkbox（复选框）</h3><ul>
<li>checkbox 的值为 true 或 false，可以使用 ng-model 指令绑定</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">    选中复选框，显示标题:</div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">ng-show</span>=<span class="string">"myVar"</span>&gt;</span>My Header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><ul>
<li>单选框使用同一个 ng-model ，可以有不同的值，但只有被选中的单选按钮的值会被使用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">  选择一个选项:</div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">ng-model</span>=<span class="string">"myVar"</span> <span class="attr">value</span>=<span class="string">"dogs"</span>&gt;</span>Dogs</div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">ng-model</span>=<span class="string">"myVar"</span> <span class="attr">value</span>=<span class="string">"tuts"</span>&gt;</span>Tutorials</div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">ng-model</span>=<span class="string">"myVar"</span> <span class="attr">value</span>=<span class="string">"cars"</span>&gt;</span>Cars</div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"dogs"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Dogs<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome to a world of dogs.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"tuts"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tutorials<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Learn from examples.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"cars"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Cars<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Read about cars.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><ul>
<li>ng-model 属性的值为你在下拉菜单选中的选项</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">  选择一个选项:</div><div class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"dogs"</span>&gt;</span>Dogs</div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"tuts"</span>&gt;</span>Tutorials</div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"cars"</span>&gt;</span>Cars</div><div class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch</span>=<span class="string">"myVar"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"dogs"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Dogs<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome to a world of dogs.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"tuts"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tutorials<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Learn from examples.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-switch-when</span>=<span class="string">"cars"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Cars<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Read about cars.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="AngularJS-表单实例"><a href="#AngularJS-表单实例" class="headerlink" title="AngularJS 表单实例"></a>AngularJS 表单实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"formCtrl"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span>&gt;</span></div><div class="line">    First Name:<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"user.firstName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    Last Name:<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"user.lastName"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"reset()"</span>&gt;</span>RESET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>form = &#123;&#123;user&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>master = &#123;&#123;master&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'formCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.master = &#123;firstName: <span class="string">"John"</span>, lastName: <span class="string">"Doe"</span>&#125;;</div><div class="line">    $scope.reset = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        $scope.user = angular.copy($scope.master);</div><div class="line">    &#125;;</div><div class="line">    $scope.reset();</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-输入验证"><a href="#AngularJS-输入验证" class="headerlink" title="AngularJS 输入验证"></a>AngularJS 输入验证</h2><ul>
<li>AngularJS 表单和控件可以验证输入的数据</li>
</ul>
<h3 id="输入验证"><a href="#输入验证" class="headerlink" title="输入验证"></a>输入验证</h3><ul>
<li>AngularJS 表单和控件可以提供验证功能，并对用户输入的非法数据进行警告</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>验证实例<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"validateCtrl"</span> </span></div><div class="line"><span class="attr">name</span>=<span class="string">"myForm"</span> <span class="attr">novalidate</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">ng-model</span>=<span class="string">"user"</span> <span class="attr">required</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span> <span class="attr">ng-show</span>=<span class="string">"myForm.user.$dirty &amp;&amp; myForm.user.$invalid"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-show</span>=<span class="string">"myForm.user.$error.required"</span>&gt;</span>用户名是必须的。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱:<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">ng-model</span>=<span class="string">"email"</span> <span class="attr">required</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span> <span class="attr">ng-show</span>=<span class="string">"myForm.email.$dirty &amp;&amp; myForm.email.$invalid"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-show</span>=<span class="string">"myForm.email.$error.required"</span>&gt;</span>邮箱是必须的。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">ng-show</span>=<span class="string">"myForm.email.$error.email"</span>&gt;</span>非法的邮箱地址。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span></span></div><div class="line"><span class="attr">ng-disabled</span>=<span class="string">"myForm.user.$dirty &amp;&amp; myForm.user.$invalid ||  </span></div><div class="line">myForm.email.$dirty &amp;&amp; myForm.email.$invalid"&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'validateCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">    $scope.user = <span class="string">'John Doe'</span>;</div><div class="line">    $scope.email = <span class="string">'john.doe@gmail.com'</span>;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-API"><a href="#AngularJS-API" class="headerlink" title="AngularJS API"></a>AngularJS API</h2><ul>
<li>API 意为 Application Programming Interface（应用程序编程接口）</li>
</ul>
<h3 id="AngularJS-全局-API"><a href="#AngularJS-全局-API" class="headerlink" title="AngularJS 全局 API"></a>AngularJS 全局 API</h3><ul>
<li>AngularJS 全局 API 用于执行常见任务的 JavaScript 函数集合</li>
<li>比较对象</li>
<li>迭代对象</li>
<li>转换对象</li>
</ul>
<h3 id="angular-lowercase"><a href="#angular-lowercase" class="headerlink" title="angular.lowercase()"></a>angular.lowercase()</h3><ul>
<li>转换字符串为小写</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">$scope.x1 = <span class="string">"JOHN"</span>;</div><div class="line">$scope.x2 = angular.lowercase($scope.x1);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="angular-uppercase"><a href="#angular-uppercase" class="headerlink" title="angular.uppercase()"></a>angular.uppercase()</h3><ul>
<li>转换字符串为大写</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">$scope.x1 = <span class="string">"John"</span>;</div><div class="line">$scope.x2 = angular.uppercase($scope.x1);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="angular-isString"><a href="#angular-isString" class="headerlink" title="angular.isString()"></a>angular.isString()</h3><ul>
<li>判断给定的对象是否为字符串，如果是返回 true</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">$scope.x1 = <span class="string">"JOHN"</span>;</div><div class="line">$scope.x2 = angular.isString($scope.x1);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="angular-isNumber"><a href="#angular-isNumber" class="headerlink" title="angular.isNumber()"></a>angular.isNumber()</h3><ul>
<li>判断给定的对象是否为数字，如果是返回 true</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; x2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">$scope.x1 = <span class="string">"JOHN"</span>;</div><div class="line">$scope.x2 = angular.isNumber($scope.x1);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-Bootstrap"><a href="#AngularJS-Bootstrap" class="headerlink" title="AngularJS Bootstrap"></a>AngularJS Bootstrap</h2><ul>
<li>AngularJS 的首选样式表是 Twitter Bootstrap， Twitter Bootstrap 是目前最受欢迎的前端框架</li>
</ul>
<h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><ul>
<li><head>元素中添加如下代码</head></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">// 站点在国内，建议使用百度静态资源库的Bootstrap</div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-代码"><a href="#HTML-代码" class="headerlink" title="HTML 代码"></a>HTML 代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"http://apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"userCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Users<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Edit<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"user in users"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">ng-click</span>=<span class="string">"editUser(user.id)"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&amp;nbsp;Edit</div><div class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.fName &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.lName &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">ng-click</span>=<span class="string">"editUser('new')"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Create New User</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">ng-show</span>=<span class="string">"edit"</span>&gt;</span>Create New User:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">ng-hide</span>=<span class="string">"edit"</span>&gt;</span>Edit User:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>First Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"fName"</span> <span class="attr">ng-disabled</span>=<span class="string">"!edit"</span> <span class="attr">placeholder</span>=<span class="string">"First Name"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Last Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"lName"</span> <span class="attr">ng-disabled</span>=<span class="string">"!edit"</span> <span class="attr">placeholder</span>=<span class="string">"Last Name"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">ng-model</span>=<span class="string">"passw1"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Repeat:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">ng-model</span>=<span class="string">"passw2"</span> <span class="attr">placeholder</span>=<span class="string">"Repeat Password"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">ng-disabled</span>=<span class="string">"error || incomplete"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-save"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Save Changes</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">"myUsers.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-Bootstrap-1"><a href="#AngularJS-Bootstrap-1" class="headerlink" title="AngularJS Bootstrap"></a>AngularJS Bootstrap</h2><ul>
<li>AngularJS 的首选样式表是 Twitter Bootstrap， Twitter Bootstrap 是目前最受欢迎的前端框架</li>
</ul>
<h3 id="Bootstrap-1"><a href="#Bootstrap-1" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><ul>
<li><head>元素中添加如下代码</head></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div><div class="line">// 站点在国内，建议使用百度静态资源库的Bootstrap</div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-代码-1"><a href="#HTML-代码-1" class="headerlink" title="HTML 代码"></a>HTML 代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"http://apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"userCtrl"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Users<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Edit<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"user in users"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">ng-click</span>=<span class="string">"editUser(user.id)"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&amp;nbsp;Edit</div><div class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.fName &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.lName &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">ng-click</span>=<span class="string">"editUser('new')"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Create New User</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">ng-show</span>=<span class="string">"edit"</span>&gt;</span>Create New User:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">ng-hide</span>=<span class="string">"edit"</span>&gt;</span>Edit User:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>First Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"fName"</span> <span class="attr">ng-disabled</span>=<span class="string">"!edit"</span> <span class="attr">placeholder</span>=<span class="string">"First Name"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Last Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"lName"</span> <span class="attr">ng-disabled</span>=<span class="string">"!edit"</span> <span class="attr">placeholder</span>=<span class="string">"Last Name"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">ng-model</span>=<span class="string">"passw1"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Repeat:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">ng-model</span>=<span class="string">"passw2"</span> <span class="attr">placeholder</span>=<span class="string">"Repeat Password"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">ng-disabled</span>=<span class="string">"error || incomplete"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-save"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> Save Changes</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">"myUsers.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="JavaScript-代码"><a href="#JavaScript-代码" class="headerlink" title="JavaScript 代码"></a>JavaScript 代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">angular.module('myApp', []).controller('userCtrl', function($scope) &#123;</div><div class="line">$scope.fName = '';</div><div class="line">$scope.lName = '';</div><div class="line">$scope.passw1 = '';</div><div class="line">$scope.passw2 = '';</div><div class="line">$scope.users = [</div><div class="line">&#123;id:1, fName:'Hege', lName:"Pege" &#125;,</div><div class="line">&#123;id:2, fName:'Kim',  lName:"Pim" &#125;,</div><div class="line">&#123;id:3, fName:'Sal',  lName:"Smith" &#125;,</div><div class="line">&#123;id:4, fName:'Jack', lName:"Jones" &#125;,</div><div class="line">&#123;id:5, fName:'John', lName:"Doe" &#125;,</div><div class="line">&#123;id:6, fName:'Peter',lName:"Pan" &#125;</div><div class="line">];</div><div class="line">$scope.edit = true;</div><div class="line">$scope.error = false;</div><div class="line">$scope.incomplete = false; </div><div class="line"></div><div class="line">$scope.editUser = function(id) &#123;</div><div class="line">  if (id == 'new') &#123;</div><div class="line">    $scope.edit = true;</div><div class="line">    $scope.incomplete = true;</div><div class="line">    $scope.fName = '';</div><div class="line">    $scope.lName = '';</div><div class="line">    &#125; else &#123;</div><div class="line">    $scope.edit = false;</div><div class="line">    $scope.fName = $scope.users[id-1].fName;</div><div class="line">    $scope.lName = $scope.users[id-1].lName; </div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">$scope.$watch('passw1',function() &#123;$scope.test();&#125;);</div><div class="line">$scope.$watch('passw2',function() &#123;$scope.test();&#125;);</div><div class="line">$scope.$watch('fName', function() &#123;$scope.test();&#125;);</div><div class="line">$scope.$watch('lName', function() &#123;$scope.test();&#125;);</div><div class="line"></div><div class="line">$scope.test = function() &#123;</div><div class="line">  if ($scope.passw1 !== $scope.passw2) &#123;</div><div class="line">    $scope.error = true;</div><div class="line">    &#125; else &#123;</div><div class="line">    $scope.error = false;</div><div class="line">  &#125;</div><div class="line">  $scope.incomplete = false;</div><div class="line">  if ($scope.edit &amp;&amp; (!$scope.fName.length ||</div><div class="line">  !$scope.lName.length ||</div><div class="line">  !$scope.passw1.length || !$scope.passw2.length)) &#123;</div><div class="line">     $scope.incomplete = true;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-包含"><a href="#AngularJS-包含" class="headerlink" title="AngularJS 包含"></a>AngularJS 包含</h2><ul>
<li>在 AngularJS 中，你可以在 HTML 中包含 HTML 文件</li>
</ul>
<h3 id="在-HTML-中包含-HTML-文件"><a href="#在-HTML-中包含-HTML-文件" class="headerlink" title="在 HTML 中包含 HTML 文件"></a>在 HTML 中包含 HTML 文件</h3><ul>
<li>在 HTML 中，目前还不支持包含 HTML 文件的功能</li>
</ul>
<h3 id="服务端包含"><a href="#服务端包含" class="headerlink" title="服务端包含"></a>服务端包含</h3><ul>
<li>大多服务端脚本都支持包含文件功能 (SSI： Server Side Includes)</li>
<li>使用 SSI, 你可在 HTML 中包含 HTML 文件，并发送到客户端浏览器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">require</span>(<span class="string">"navigation.php"</span>); <span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="客户端包含"><a href="#客户端包含" class="headerlink" title="客户端包含"></a>客户端包含</h3><ul>
<li>通常我们使用 http 请求 (AJAX) 从服务端获取数据，返回的数据我们可以通过 使用 innerHTML 写入到 HTML 元素中</li>
</ul>
<h3 id="AngularJS-包含-1"><a href="#AngularJS-包含-1" class="headerlink" title="AngularJS 包含"></a>AngularJS 包含</h3><ul>
<li>使用 AngularJS, 你可以使用 ng-include 指令来包含 HTML 内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-include</span>=<span class="string">"'runoob.htm'"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>runoob.htm 文件代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个被包含的 HTML 页面，使用 ng-include 指令来实现！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="包含-AngularJS-代码"><a href="#包含-AngularJS-代码" class="headerlink" title="包含 AngularJS 代码"></a>包含 AngularJS 代码</h3><ul>
<li>ng-include 指令除了可以包含 HTML 文件外，还可以包含 AngularJS 代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"sitesCtrl"</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-include</span>=<span class="string">"'sites.htm'"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</div><div class="line">app.controller(<span class="string">'sitesCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</div><div class="line">    $http.get(<span class="string">"sites.php"</span>).then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</div><div class="line">        $scope.names = response.data.records;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>sites.htm 文件代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; x.Url &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="跨域包含"><a href="#跨域包含" class="headerlink" title="跨域包含"></a>跨域包含</h3><ul>
<li>默认情况下， ng-include 指令不允许包含其他域名的文件</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-include</span>=<span class="string">"'http://c.runoob.com/runoobtest/angular_include.php'"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, [])</div><div class="line">app.config(<span class="function"><span class="keyword">function</span><span class="params">($sceDelegateProvider)</span> </span>&#123;</div><div class="line">    $sceDelegateProvider.resourceUrlWhitelist([</div><div class="line">        <span class="string">'http://c.runoob.com/runoobtest/**'</span></div><div class="line">    ]);</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>还需要设置服务端允许跨域访问</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="comment">// 允许所有域名可以访问</span></div><div class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>);</div><div class="line"> </div><div class="line"><span class="keyword">echo</span> <span class="string">'&lt;b style="color:red"&gt;我是跨域的内容&lt;/b&gt;'</span>;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-动画"><a href="#AngularJS-动画" class="headerlink" title="AngularJS 动画"></a>AngularJS 动画</h2><ul>
<li>AngularJS 提供了动画效果，可以配合 CSS 使用</li>
<li>AngularJS 使用动画需要引入 angular-animate.min.js 库</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.static.runoob.com/libs/angular.js/1.4.6/angular-animate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>还需在应用中使用模型 ngAnimate</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"ngAnimate"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>动画是通过改变 HTML 元素产生的动态变化效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">transition</span>: all linear <span class="number">0.5s</span>;</div><div class="line">  <span class="attribute">background-color</span>: lightblue;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ng-hide</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">background-color</span>: transparent;</div><div class="line">  <span class="attribute">top</span>:-<span class="number">200px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular-animate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"ngAnimate"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>隐藏 DIV: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-hide</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>如果我们应用已经设置了应用名，可以把 ngAnimate 直接添加在模型中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">transition</span>: all linear <span class="number">0.5s</span>;</div><div class="line">  <span class="attribute">background-color</span>: lightblue;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ng-hide</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">background-color</span>: transparent;</div><div class="line">  <span class="attribute">top</span>:-<span class="number">200px</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular-animate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>隐藏 DIV: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-hide</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, [<span class="string">'ngAnimate'</span>]);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ngAnimate-做了什么"><a href="#ngAnimate-做了什么" class="headerlink" title="ngAnimate 做了什么"></a>ngAnimate 做了什么</h3><ul>
<li>ngAnimate 模型可以添加或移除 class </li>
<li>ngAnimate 模型并不能使 HTML 元素产生动画，但是 ngAnimate 会监测事件，类似隐藏显示 HTML 元素 ，如果事件发生 ngAnimate 就会使用预定义的 class 来设置 HTML 元素的动画</li>
<li>AngularJS 添加/移除 class 的指令</li>
<li>ng-show</li>
<li>ng-hide</li>
<li>ng-class</li>
<li>ng-view</li>
<li>ng-include</li>
<li>ng-repeat</li>
<li>ng-if</li>
<li>ng-switch</li>
</ul>
<h3 id="使用-CSS-动画"><a href="#使用-CSS-动画" class="headerlink" title="使用 CSS 动画"></a>使用 CSS 动画</h3><ul>
<li>CSS transition(过渡) 或 CSS 动画让 HTML 元素产生动画效果</li>
</ul>
<h3 id="CSS-过渡"><a href="#CSS-过渡" class="headerlink" title="CSS 过渡"></a>CSS 过渡</h3><ul>
<li>CSS 过渡可以让我们平滑的将一个 CSS 属性值修改为另外一个</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">transition</span>: all linear <span class="number">0.5s</span>;</div><div class="line">  <span class="attribute">background-color</span>: lightblue;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ng-hide</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular-animate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>隐藏 DIV: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-hide</span>=<span class="string">"myCheck"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, [<span class="string">'ngAnimate'</span>]);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-动画"><a href="#CSS-动画" class="headerlink" title="CSS 动画"></a>CSS 动画</h3><ul>
<li>CSS 动画允许你平滑的修改 CSS 属性值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">@<span class="keyword">keyframes</span> myChange &#123;</div><div class="line">  <span class="selector-tag">from</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">  &#125; <span class="selector-tag">to</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">background-color</span>: lightblue;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.ng-hide</span> &#123;</div><div class="line">  <span class="attribute">animation</span>: <span class="number">0.5s</span> myChange;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular-animate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"ngAnimate"</span>&gt;</span></div><div class="line"></div><div class="line">隐藏 DIV: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-model</span>=<span class="string">"myCheck"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-hide</span>=<span class="string">"myCheck"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-依赖注入"><a href="#AngularJS-依赖注入" class="headerlink" title="AngularJS 依赖注入"></a>AngularJS 依赖注入</h2><h3 id="什么是依赖注入"><a href="#什么是依赖注入" class="headerlink" title="什么是依赖注入"></a>什么是依赖注入</h3><ul>
<li>依赖注入（Dependency Injection，简称DI）是一种软件设计模式，在这种模式下，一个或更多的依赖（或服务）被注入（或者通过引用传递）到一个独立的对象（或客户端）中，然后成为了该客户端状态的一部分</li>
</ul>
<h3 id="AngularJS-提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入"><a href="#AngularJS-提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入" class="headerlink" title="AngularJS 提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入"></a>AngularJS 提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入</h3><ul>
<li>value</li>
<li>factory</li>
<li>service</li>
<li>provider</li>
<li>constant</li>
</ul>
<h3 id="value"><a href="#value" class="headerlink" title="value"></a>value</h3><ul>
<li>Value 是一个简单的 javascript 对象，用于向控制器传递值（配置阶段）</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// 定义一个模块</div><div class="line">var mainApp = angular.module("mainApp", []);</div><div class="line"></div><div class="line">// 创建 value 对象 "defaultInput" 并传递数据</div><div class="line">mainApp.value("defaultInput", 5);</div><div class="line">...</div><div class="line"></div><div class="line">// 将 "defaultInput" 注入到控制器</div><div class="line">mainApp.controller('CalcController', function($scope, CalcService, defaultInput) &#123;</div><div class="line">   $scope.number = defaultInput;</div><div class="line">   $scope.result = CalcService.square($scope.number);</div><div class="line">   </div><div class="line">   $scope.square = function() &#123;</div><div class="line">      $scope.result = CalcService.square($scope.number);</div><div class="line">   &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="factory"><a href="#factory" class="headerlink" title="factory"></a>factory</h3><ul>
<li>factory 是一个函数用于返回值。在 service 和 controller 需要时创建</li>
<li>通常我们使用 factory 函数来计算或返回值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">// 定义一个模块</div><div class="line">var mainApp = angular.module("mainApp", []);</div><div class="line"></div><div class="line">// 创建 factory "MathService" 用于两数的乘积 provides a method multiply to return multiplication of two numbers</div><div class="line">mainApp.factory('MathService', function() &#123;</div><div class="line">   var factory = &#123;&#125;;</div><div class="line">   </div><div class="line">   factory.multiply = function(a, b) &#123;</div><div class="line">      return a * b</div><div class="line">   &#125;</div><div class="line">   return factory;</div><div class="line">&#125;); </div><div class="line"></div><div class="line">// 在 service 中注入 factory "MathService"</div><div class="line">mainApp.service('CalcService', function(MathService)&#123;</div><div class="line">   this.square = function(a) &#123;</div><div class="line">      return MathService.multiply(a,a);</div><div class="line">   &#125;</div><div class="line">&#125;);</div><div class="line">...</div></pre></td></tr></table></figure>
<h3 id="provider"><a href="#provider" class="headerlink" title="provider"></a>provider</h3><ul>
<li>AngularJS 中通过 provider 创建一个 service、factory等(配置阶段)</li>
<li>rovider 中提供了一个 factory 方法 get()，它用于返回 value/service/factory</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">// 定义一个模块</div><div class="line">var mainApp = angular.module("mainApp", []);</div><div class="line">...</div><div class="line"></div><div class="line">// 使用 provider 创建 service 定义一个方法用于计算两数乘积</div><div class="line">mainApp.config(function($provide) &#123;</div><div class="line">   $provide.provider('MathService', function() &#123;</div><div class="line">      this.$get = function() &#123;</div><div class="line">         var factory = &#123;&#125;;  </div><div class="line">         </div><div class="line">         factory.multiply = function(a, b) &#123;</div><div class="line">            return a * b; </div><div class="line">         &#125;</div><div class="line">         return factory;</div><div class="line">      &#125;;</div><div class="line">   &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="constant"><a href="#constant" class="headerlink" title="constant"></a>constant</h3><ul>
<li>constant(常量)用来在配置阶段传递数值，注意这个常量在配置阶段是不可用的</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mainApp.constant("configParam", "constant value");</div></pre></td></tr></table></figure>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul>
<li>AngularJS 实例 - factory</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>AngularJS 简单应用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span> = <span class="string">"mainApp"</span> <span class="attr">ng-controller</span> = <span class="string">"CalcController"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入一个数字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"number"</span> <span class="attr">ng-model</span> = <span class="string">"number"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span> = <span class="string">"square()"</span>&gt;</span>X<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>结果: &#123;&#123;result&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">   <span class="keyword">var</span> mainApp = angular.module(<span class="string">"mainApp"</span>, []);</div><div class="line">   mainApp.value(<span class="string">"defaultInput"</span>, <span class="number">5</span>);</div><div class="line"></div><div class="line">   mainApp.factory(<span class="string">'MathService'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">var</span> factory = &#123;&#125;;</div><div class="line"></div><div class="line">      factory.multiply = <span class="function"><span class="keyword">function</span><span class="params">(a, b)</span> </span>&#123;</div><div class="line">         <span class="keyword">return</span> a * b;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> factory;</div><div class="line">   &#125;);</div><div class="line"></div><div class="line">   mainApp.service(<span class="string">'CalcService'</span>, <span class="function"><span class="keyword">function</span><span class="params">(MathService)</span></span>&#123;</div><div class="line">      <span class="keyword">this</span>.square = <span class="function"><span class="keyword">function</span><span class="params">(a)</span> </span>&#123;</div><div class="line">         <span class="keyword">return</span> MathService.multiply(a,a);</div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line"></div><div class="line">   mainApp.controller(<span class="string">'CalcController'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, CalcService, defaultInput)</span> </span>&#123;</div><div class="line">      $scope.number = defaultInput;</div><div class="line">      $scope.result = CalcService.square($scope.number);</div><div class="line"></div><div class="line">      $scope.square = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">         $scope.result = CalcService.square($scope.number);</div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>AngularJS 实例 - provider</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>AngularJS 简单应用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span> = <span class="string">"mainApp"</span> <span class="attr">ng-controller</span> = <span class="string">"CalcController"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入一个数字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"number"</span> <span class="attr">ng-model</span> = <span class="string">"number"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span> = <span class="string">"square()"</span>&gt;</span>X<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>结果: &#123;&#123;result&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">   <span class="keyword">var</span> mainApp = angular.module(<span class="string">"mainApp"</span>, []);</div><div class="line"></div><div class="line">   mainApp.config(<span class="function"><span class="keyword">function</span><span class="params">($provide)</span> </span>&#123;</div><div class="line">      $provide.provider(<span class="string">'MathService'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">         <span class="keyword">this</span>.$<span class="keyword">get</span> = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">var</span> factory = &#123;&#125;;</div><div class="line"></div><div class="line">            factory.multiply = <span class="function"><span class="keyword">function</span><span class="params">(a, b)</span> </span>&#123;</div><div class="line">               <span class="keyword">return</span> a * b;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> factory;</div><div class="line">         &#125;;</div><div class="line">      &#125;);</div><div class="line">   &#125;);</div><div class="line"></div><div class="line">   mainApp.value(<span class="string">"defaultInput"</span>, <span class="number">5</span>);</div><div class="line"></div><div class="line">   mainApp.service(<span class="string">'CalcService'</span>, <span class="function"><span class="keyword">function</span><span class="params">(MathService)</span></span>&#123;</div><div class="line">      <span class="keyword">this</span>.square = <span class="function"><span class="keyword">function</span><span class="params">(a)</span> </span>&#123;</div><div class="line">         <span class="keyword">return</span> MathService.multiply(a,a);</div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line"></div><div class="line">   mainApp.controller(<span class="string">'CalcController'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, CalcService, defaultInput)</span> </span>&#123;</div><div class="line">      $scope.number = defaultInput;</div><div class="line">      $scope.result = CalcService.square($scope.number);</div><div class="line"></div><div class="line">      $scope.square = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">         $scope.result = CalcService.square($scope.number);</div><div class="line">      &#125;</div><div class="line">   &#125;);</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="AngularJS-路由"><a href="#AngularJS-路由" class="headerlink" title="AngularJS 路由"></a>AngularJS 路由</h2><ul>
<li>AngularJS 路由允许我们通过不同的 URL 访问不同的内容</li>
<li>通过 AngularJS 可以实现多视图的单页Web应用（single page web application，SPA）</li>
<li>通常我们的URL形式为 <a href="http://runoob.com/first/page，但在单页Web应用中" target="_blank" rel="external">http://runoob.com/first/page，但在单页Web应用中</a> AngularJS 通过 # + 标记 实现</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://runoob.com/#/first</div><div class="line">http://runoob.com/#/second</div><div class="line">http://runoob.com/#/third</div></pre></td></tr></table></figure>
<h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><ul>
<li>在以上图形中，我们可以看到创建了两个 URL： /ShowOrders 和 /AddNewOrder。每个 URL 都有对应的视图和控制器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>AngularJS 路由实例 - 菜鸟教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">'routingDemoApp'</span>&gt;</span></div><div class="line">     </div><div class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>AngularJS 路由应用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/computers"</span>&gt;</span>电脑<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/printers"</span>&gt;</span>打印机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#/blabla"</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">         </div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-view</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/angular-route/1.3.13/angular-route.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">            angular.module(<span class="string">'routingDemoApp'</span>,[<span class="string">'ngRoute'</span>])</div><div class="line">            .config([<span class="string">'$routeProvider'</span>, <span class="function"><span class="keyword">function</span><span class="params">($routeProvider)</span></span>&#123;</div><div class="line">                $routeProvider</div><div class="line">                .when(<span class="string">'/'</span>,&#123;template:<span class="string">'这是首页页面'</span>&#125;)</div><div class="line">                .when(<span class="string">'/computers'</span>,&#123;template:<span class="string">'这是电脑分类页面'</span>&#125;)</div><div class="line">                .when(<span class="string">'/printers'</span>,&#123;template:<span class="string">'这是打印机页面'</span>&#125;)</div><div class="line">                .otherwise(&#123;redirectTo:<span class="string">'/'</span>&#125;);</div><div class="line">            &#125;]);</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;AngularJS-简介&quot;&gt;&lt;a href=&quot;#AngularJS-简介&quot; class=&quot;headerlink&quot; title=&quot;AngularJS 简介&quot;&gt;&lt;/a&gt;AngularJS 简介&lt;/h2&gt;&lt;h3 id=&quot;指令&quot;&gt;&lt;a href=&quot;#指令&quot; class=&quot;headerlink&quot; title=&quot;指令&quot;&gt;&lt;/a&gt;指令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ng-app 指令告诉 AngularJS，&lt;div&gt; 元素是 AngularJS 应用程序 的”所有者”  &lt;/li&gt;
&lt;li&gt;ng-model 指令把输入域的值绑定到应用程序变量 name
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="angular" scheme="http://yoursite.com/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>ES6核心</title>
    <link href="http://yoursite.com/2017/07/01/es6/"/>
    <id>http://yoursite.com/2017/07/01/es6/</id>
    <published>2017-07-01T07:33:44.000Z</published>
    <updated>2018-06-24T13:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES6的简介"><a href="#ES6的简介" class="headerlink" title="ES6的简介"></a>ES6的简介</h1><p>ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015<br><a id="more"></a></p>
<h2 id="Babel转码器"><a href="#Babel转码器" class="headerlink" title="Babel转码器"></a>Babel转码器</h2><p>Babel 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 转码前</span></div><div class="line">input.map(<span class="function"><span class="params">item</span> =&gt;</span> item + <span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="comment">// 转码后</span></div><div class="line">input.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> item + <span class="number">1</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h1 id="let和const命令"><a href="#let和const命令" class="headerlink" title="let和const命令"></a>let和const命令</h1><h2 id="let命令"><a href="#let命令" class="headerlink" title="let命令"></a>let命令</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>ES6 新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="keyword">let</span> a = <span class="number">10</span>;</div><div class="line">  <span class="keyword">var</span> b = <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">a <span class="comment">// ReferenceError: a is not defined.</span></div><div class="line">b <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<p>使用let，声明的变量仅在块级作用域内有效,解决如下代码问题</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">  a[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(i);</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line">a[<span class="number">6</span>](); <span class="comment">// 10</span></div><div class="line"></div><div class="line"><span class="comment">// 用let</span></div><div class="line"><span class="keyword">var</span> a = [];</div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</div><div class="line">  a[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(i);</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line">a[<span class="number">6</span>](); <span class="comment">// 6</span></div></pre></td></tr></table></figure>
<p>let命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// var 的情况</span></div><div class="line">console.<span class="built_in">log</span>(foo); <span class="comment">// 输出undefined</span></div><div class="line">var foo = <span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">// let 的情况</span></div><div class="line">console.<span class="built_in">log</span>(<span class="built_in">bar</span>); <span class="comment">// 报错ReferenceError</span></div><div class="line"><span class="keyword">let</span> <span class="built_in">bar</span> = <span class="number">2</span>;</div></pre></td></tr></table></figure>
<p>let不允许在相同作用域内，重复声明同一个变量</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> a = <span class="number">10</span>;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 报错</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> a = <span class="number">10</span>;</div><div class="line">  <span class="keyword">let</span> a = <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="const-命令"><a href="#const-命令" class="headerlink" title="const 命令"></a>const 命令</h2><p>const声明一个只读的常量。一旦声明，常量的值就不能改变</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">const <span class="literal">PI</span> = <span class="number">3.1415</span>;</div><div class="line"><span class="literal">PI</span> <span class="comment">// 3.1415</span></div><div class="line"></div><div class="line"><span class="literal">PI</span> = <span class="number">3</span>;</div><div class="line"><span class="comment">// TypeError: Assignment to constant variable.</span></div></pre></td></tr></table></figure>
<p>const的作用域与let命令相同：只在声明所在的块级作用域内有效</p>
 <figure class="highlight monkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</div><div class="line">  <span class="keyword">const</span> <span class="built_in">MAX</span> = <span class="number">5</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">MAX</span> // Uncaught ReferenceError: <span class="built_in">MAX</span> is <span class="keyword">not</span> defined</div></pre></td></tr></table></figure>
<h1 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的解构赋值</h1><h2 id="数组的解构赋值"><a href="#数组的解构赋值" class="headerlink" title="数组的解构赋值"></a>数组的解构赋值</h2><p>ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 为变量赋值，直接指定值</span></div><div class="line">let a = <span class="number">1</span>;</div><div class="line">let b = <span class="number">2</span>;</div><div class="line">let c = <span class="number">3</span>;</div><div class="line"></div><div class="line"><span class="comment">// 从数组中提取值，按照对应位置，对变量赋值</span></div><div class="line">let [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div></pre></td></tr></table></figure>
<p>下面是一些使用嵌套数组进行解构的例子</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">let [foo, [[bar], baz]] = [<span class="number">1</span>, [[<span class="number">2</span>], <span class="number">3</span>]];</div><div class="line">foo <span class="comment">// 1</span></div><div class="line">bar <span class="comment">// 2</span></div><div class="line">baz <span class="comment">// 3</span></div><div class="line"></div><div class="line">let [ , , third] = [<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>];</div><div class="line">third <span class="comment">// "baz"</span></div><div class="line"></div><div class="line">let [x, , y] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">x <span class="comment">// 1</span></div><div class="line">y <span class="comment">// 3</span></div><div class="line"></div><div class="line">let [head, ...tail] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</div><div class="line">head <span class="comment">// 1</span></div><div class="line">tail <span class="comment">// [2, 3, 4]</span></div><div class="line"></div><div class="line">let [x, y, ...z] = ['a'];</div><div class="line">x <span class="comment">// "a"</span></div><div class="line">y <span class="comment">// undefined</span></div><div class="line">z <span class="comment">// []</span></div></pre></td></tr></table></figure>
<p>解构赋值允许指定默认值</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [foo = <span class="literal">true</span>] = [];</div><div class="line">foo <span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> [x, y = <span class="string">'b'</span>] = [<span class="string">'a'</span>]; <span class="comment">// x='a', y='b'</span></div><div class="line"><span class="keyword">let</span> [x, y = <span class="string">'b'</span>] = [<span class="string">'a'</span>, <span class="literal">undefined</span>]; <span class="comment">// x='a', y='b'</span></div></pre></td></tr></table></figure>
<h2 id="对象的解构赋值"><a href="#对象的解构赋值" class="headerlink" title="对象的解构赋值"></a>对象的解构赋值</h2><p>解构不仅可以用于数组，还可以用于对象</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> &#123; foo, <span class="built_in">bar</span> &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">foo <span class="comment">// "aaa"</span></div><div class="line"><span class="built_in">bar</span> <span class="comment">// "bbb"</span></div></pre></td></tr></table></figure>
<p>对象的属性没有次序，变量必须与属性同名，才能取到正确的值</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> &#123; <span class="built_in">bar</span>, foo &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">foo <span class="comment">// "aaa"</span></div><div class="line"><span class="built_in">bar</span> <span class="comment">// "bbb"</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> &#123; baz &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">baz <span class="comment">// undefined</span></div></pre></td></tr></table></figure>
<p>如果变量名与属性名不一致，必须写成下面这样</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">let &#123; <span class="string">foo:</span> baz &#125; = &#123; <span class="string">foo:</span> <span class="string">'aaa'</span>, <span class="string">bar:</span> <span class="string">'bbb'</span> &#125;;</div><div class="line">baz <span class="comment">// "aaa"</span></div><div class="line"></div><div class="line">let obj = &#123; <span class="string">first:</span> <span class="string">'hello'</span>, <span class="string">last:</span> <span class="string">'world'</span> &#125;;</div><div class="line">let &#123; <span class="string">first:</span> f, <span class="string">last:</span> l &#125; = obj;</div><div class="line">f <span class="comment">// 'hello'</span></div><div class="line">l <span class="comment">// 'world'</span></div></pre></td></tr></table></figure>
<h2 id="字符串的解构赋值"><a href="#字符串的解构赋值" class="headerlink" title="字符串的解构赋值"></a>字符串的解构赋值</h2><p>字符串被转换成了一个类似数组的对象</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">const [a, b, c, d, e] = <span class="string">'hello'</span>;</div><div class="line">a <span class="regexp">//</span> <span class="string">"h"</span></div><div class="line">b <span class="regexp">//</span> <span class="string">"e"</span></div><div class="line">c <span class="regexp">//</span> <span class="string">"l"</span></div><div class="line">d <span class="regexp">//</span> <span class="string">"l"</span></div><div class="line">e <span class="regexp">//</span> <span class="string">"o"</span></div></pre></td></tr></table></figure>
<p>数组的对象都有一个length属性，因此还可以对这个属性解构赋值</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">let &#123;length : <span class="built_in">len</span>&#125; = <span class="string">'hello'</span>;</div><div class="line"><span class="built_in">len</span> <span class="comment">// 5</span></div></pre></td></tr></table></figure>
<h2 id="数值和布尔值的解构赋值"><a href="#数值和布尔值的解构赋值" class="headerlink" title="数值和布尔值的解构赋值"></a>数值和布尔值的解构赋值</h2><p>解构赋值时，如果等号右边是数值和布尔值，则会先转为对象</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> &#123;<span class="built_in">toString</span>: s&#125; = <span class="number">123</span>;</div><div class="line"><span class="attr">s</span> === Number.prototype.<span class="built_in">toString</span> // <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> &#123;<span class="built_in">toString</span>: s&#125; = <span class="literal">true</span>;</div><div class="line"><span class="attr">s</span> === Boolean.prototype.<span class="built_in">toString</span> // <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>解构赋值的规则是，只要等号右边的值不是对象或数组，就先将其转为对象.由于undefined和null无法转为对象，所以对它们进行解构赋值，都会报错</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> &#123; <span class="attr">prop</span>: x &#125; = <span class="literal">undefined</span>; <span class="comment">// TypeError</span></div><div class="line"><span class="keyword">let</span> &#123; <span class="attr">prop</span>: y &#125; = <span class="literal">null</span>; <span class="comment">// TypeError</span></div></pre></td></tr></table></figure>
<h2 id="函数参数的解构赋值"><a href="#函数参数的解构赋值" class="headerlink" title="函数参数的解构赋值"></a>函数参数的解构赋值</h2><p>函数add的参数表面上是一个数组，但在传入参数的那一刻，数组参数就被解构成变量x和y</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">([x, y])</span></span>&#123;</div><div class="line">  <span class="keyword">return</span> x + y;</div><div class="line">&#125;</div><div class="line">add([<span class="number">1</span>, <span class="number">2</span>]); <span class="comment">// 3</span></div></pre></td></tr></table></figure>
<p>函数参数的解构也可以使用默认值</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function <span class="built_in">move</span>(&#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125; = &#123;&#125;) &#123;</div><div class="line">  <span class="built_in">return</span> [x, y];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>, y: <span class="number">8</span>&#125;); <span class="comment">// [3, 8]</span></div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>&#125;); <span class="comment">// [3, 0]</span></div><div class="line"><span class="built_in">move</span>(&#123;&#125;); <span class="comment">// [0, 0]</span></div><div class="line"><span class="built_in">move</span>(); <span class="comment">// [0, 0]</span></div></pre></td></tr></table></figure>
<h2 id="圆括号问题"><a href="#圆括号问题" class="headerlink" title="圆括号问题"></a>圆括号问题</h2><p>ES6 的规则是，只要有可能导致解构的歧义，就不得使用圆括号</p>
<h2 id="解构赋值用途"><a href="#解构赋值用途" class="headerlink" title="解构赋值用途"></a>解构赋值用途</h2><h3 id="交换变量的值"><a href="#交换变量的值" class="headerlink" title="交换变量的值"></a>交换变量的值</h3><p>交换变量x和y的值，这样的写法不仅简洁，而且易读，语义非常清晰</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> <span class="attr">x</span> = <span class="number">1</span>;</div><div class="line"><span class="keyword">let</span> <span class="attr">y</span> = <span class="number">2</span>;</div><div class="line"></div><div class="line">[x, y] = [y, x];</div></pre></td></tr></table></figure>
<h3 id="从函数返回多个值"><a href="#从函数返回多个值" class="headerlink" title="从函数返回多个值"></a>从函数返回多个值</h3><p>函数只能返回一个值，如果要返回多个值，只能将它们放在数组或对象里返回。有了解构赋值，取出这些值就非常方便</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 返回一个数组</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> [a, b, c] = example();</div><div class="line"></div><div class="line"><span class="comment">// 返回一个对象</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">foo</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">bar</span>: <span class="number">2</span></div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> &#123; foo, bar &#125; = example();</div></pre></td></tr></table></figure>
<h3 id="函数参数的定义"><a href="#函数参数的定义" class="headerlink" title="函数参数的定义"></a>函数参数的定义</h3><p>解构赋值可以方便地将一组参数与变量名对应起来</p>
<figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 参数是一组有次序的值</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">([x, y, z])</span> <span class="comment">&#123; ... &#125;</span></span></div><div class="line"><span class="title">f</span><span class="params">([1, 2, 3])</span>;</div><div class="line"></div><div class="line"><span class="comment">// 参数是一组无次序的值</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">(<span class="comment">&#123;x, y, z&#125;</span>)</span> <span class="comment">&#123; ... &#125;</span></span></div><div class="line"><span class="title">f</span><span class="params">(<span class="comment">&#123;z: 3, y: 2, x: 1&#125;</span>)</span>;</div></pre></td></tr></table></figure>
<h3 id="提取-JSON-数据"><a href="#提取-JSON-数据" class="headerlink" title="提取 JSON 数据"></a>提取 JSON 数据</h3><p>快速提取 JSON 数据的值</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">let jsonData = &#123;</div><div class="line">  id: <span class="number">42</span>,</div><div class="line">  <span class="keyword">status</span>: <span class="string">"OK"</span>,</div><div class="line">  <span class="keyword">data</span>: [<span class="number">867</span>, <span class="number">5309</span>]</div><div class="line">&#125;;</div><div class="line"></div><div class="line">let &#123; id, <span class="keyword">status</span>, <span class="keyword">data</span>: <span class="keyword">number</span> &#125; = jsonData;</div><div class="line"></div><div class="line">console.<span class="built_in">log</span>(id, <span class="keyword">status</span>, <span class="keyword">number</span>);</div><div class="line">// <span class="number">42</span>, <span class="string">"OK"</span>, [<span class="number">867</span>, <span class="number">5309</span>]</div></pre></td></tr></table></figure>
<h3 id="函数参数的默认值"><a href="#函数参数的默认值" class="headerlink" title="函数参数的默认值"></a>函数参数的默认值</h3><p>指定参数的默认值，就避免了在函数体内部再写var foo = config.foo || ‘default foo’;这样的语句</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">jQuery.ajax = <span class="function"><span class="keyword">function</span> </span>(url, &#123;</div><div class="line">  async = <span class="literal">true</span>,</div><div class="line">  beforeSend = <span class="function"><span class="keyword">function</span> </span>() &#123;&#125;,</div><div class="line">  cache = <span class="literal">true</span>,</div><div class="line">  complete = <span class="function"><span class="keyword">function</span> </span>() &#123;&#125;,</div><div class="line">  crossDomain = <span class="literal">false</span>,</div><div class="line">  global = <span class="literal">true</span>,</div><div class="line">  <span class="comment">// ... more config</span></div><div class="line">&#125; = &#123;&#125;) &#123;</div><div class="line">  <span class="comment">// ... do stuff</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="遍历Map结构"><a href="#遍历Map结构" class="headerlink" title="遍历Map结构"></a>遍历Map结构</h3><p>任何部署了 Iterator 接口的对象，都可以用for…of循环遍历。Map 结构原生支持 Iterator 接口，配合变量的解构赋值，获取键名和键值就非常方便</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="built_in">map</span> = <span class="keyword">new</span> Map();</div><div class="line"><span class="built_in">map</span>.<span class="built_in">set</span>(<span class="string">'first'</span>, <span class="string">'hello'</span>);</div><div class="line"><span class="built_in">map</span>.<span class="built_in">set</span>(<span class="string">'second'</span>, <span class="string">'world'</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (let [<span class="built_in">key</span>, value] of <span class="built_in">map</span>) &#123;</div><div class="line">  console.<span class="built_in">log</span>(<span class="built_in">key</span> + <span class="string">" is "</span> + value);</div><div class="line">&#125;</div><div class="line"><span class="comment">// first is hello</span></div><div class="line"><span class="comment">// second is world</span></div></pre></td></tr></table></figure>
<p>如果只想获取键名，或者只想获取键值，可以写成下面这样</p>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取键名</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [key] <span class="keyword">of</span> map) &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取键值</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [,<span class="keyword">value</span>] <span class="keyword">of</span> map) &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="输入模块的指定方法"><a href="#输入模块的指定方法" class="headerlink" title="输入模块的指定方法"></a>输入模块的指定方法</h3><p>加载模块时，往往需要指定输入哪些方法。解构赋值使得输入语句非常清晰</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> &#123; SourceMapConsumer, SourceNode &#125; = <span class="built_in">require</span>(<span class="string">"source-map"</span>);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ES6的简介&quot;&gt;&lt;a href=&quot;#ES6的简介&quot; class=&quot;headerlink&quot; title=&quot;ES6的简介&quot;&gt;&lt;/a&gt;ES6的简介&lt;/h1&gt;&lt;p&gt;ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的JS</title>
    <link href="http://yoursite.com/2017/06/10/ydnjs/"/>
    <id>http://yoursite.com/2017/06/10/ydnjs/</id>
    <published>2017-06-10T03:40:15.000Z</published>
    <updated>2018-05-30T12:43:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul>
<li>这几天看完《你不知道的JavaScirpt》系列的书籍,里面的模拟场景和例子真的经典<a id="more"></a>,解决了《高程3》模糊的概念,对作用域闭包this对象做了深入的讲解,让我忍不住对这系列的书进行总结,画思维导图(提炼关键字,反复代码练习才能实现),变成自己知识</li>
</ul>
<h1 id="作用域与闭包"><a href="#作用域与闭包" class="headerlink" title="作用域与闭包"></a>作用域与闭包</h1><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><ul>
<li>定义如何在某些位置存储变量，以及如何在稍后找到这些变量</li>
</ul>
<h3 id="编辑器理论"><a href="#编辑器理论" class="headerlink" title="编辑器理论"></a>编辑器理论</h3><ul>
<li>JavaScript是一个编译型语言</li>
<li>在传统的编译型语言处理中，一块儿源代码，你的程序，在它被执行 之前 通常将会经历三个步骤，大致被称为“编译”</li>
</ul>
<h4 id="分词-词法分析"><a href="#分词-词法分析" class="headerlink" title="分词/词法分析"></a>分词/词法分析</h4><ul>
<li>将一连串字符打断成（对于语言来说）有意义的片段，称为 token（记号）;例如将var a = 2;打断成token：var，a，=，2，和 ;</li>
</ul>
<h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><ul>
<li>将一个 token 的流（数组）转换为一个嵌套元素的树，它综合地表示了程序的语法结构。这棵树称为“抽象语法树”（AST —— Abstract Syntax Tree）</li>
</ul>
<h4 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h4><ul>
<li>这个处理将抽象语法树转换为可执行的代码</li>
</ul>
<blockquote>
<ul>
<li>编译三个步骤我们不如笼统地说，有一种方法将我们上面描述的 var a = 2; 的抽象语法树转换为机器指令，来实际上 创建 一个称为 a 的变量（包括分配内存等等），然后在 a 中存入一个值</li>
</ul>
</blockquote>
<h3 id="理解作用域"><a href="#理解作用域" class="headerlink" title="理解作用域"></a>理解作用域</h3><ul>
<li>将采用的学习作用域的方法，是将这个处理过程想象为一场对话</li>
</ul>
<h4 id="演员"><a href="#演员" class="headerlink" title="演员"></a>演员</h4><ul>
<li>引擎：负责从始至终的编译和执行我们的 JavaScript 程序</li>
<li>编译器：引擎 的朋友之一；处理所有的解析和代码生成的重活儿</li>
<li>作用域：引擎 的另一个朋友；收集并维护一张所有被声明的标识符（变量）的列表，并对当前执行中的代码如何访问这些变量强制实施一组严格的规则</li>
</ul>
<h4 id="反复"><a href="#反复" class="headerlink" title="反复"></a>反复</h4><ul>
<li>程序 var a = 2;引擎看到两个不同的语句，一个是 编译器 将在编译期间处理的，一个是 引擎 将在执行期间处理的</li>
</ul>
<h5 id="分析-引擎-和它的朋友们将如何处理程序-var-a-2"><a href="#分析-引擎-和它的朋友们将如何处理程序-var-a-2" class="headerlink" title="分析 引擎 和它的朋友们将如何处理程序 var a = 2;"></a>分析 引擎 和它的朋友们将如何处理程序 var a = 2;</h5><ul>
<li>遇到 var a，编译器 让 作用域 去查看对于这个特定的作用域集合，变量 a 是否已经存在了。如果是，编译器 就忽略这个声明并继续前进。否则，编译器 就让 作用域 去为这个作用域集合声明一个称为 a 的新变量</li>
<li>然后 编译器 为 引擎 生成稍后要执行的代码，来处理赋值 a = 2。引擎 运行的代码首先让 作用域 去查看在当前的作用域集合中是否有一个称为 a 的变量可以访问。如果有，引擎 就使用这个变量。如果没有，引擎 就查看 其他地方;如果 引擎 最终找到一个变量，它就将值 2 赋予它。如果没有，引擎 将会举起它的手并喊出一个错误</li>
</ul>
<blockquote>
<ul>
<li>总结:对于一个变量赋值，发生了两个不同的动作：第一，编译器声明一个变量（如果先前没有在当前作用域中声明过），第二，当执行时，引擎 在 作用域 中查询这个变量并给它赋值，如果找到的话</li>
</ul>
</blockquote>
<h3 id="编译器术语"><a href="#编译器术语" class="headerlink" title="编译器术语"></a>编译器术语</h3><ul>
<li>当 引擎 执行 编译器 在第二步为它产生的代码时，它必须查询变量 a 来看它是否已经被声明过了，而且这个查询是咨询 作用域 的。但是 引擎 所实施的查询的类型会影响查询的结果;</li>
<li>在我们这个例子中，引擎 将会对变量 a 实施一个“LHS”查询。另一种类型的查询称为“RHS”,这两个术语表示“Left-hand Side（左手边）”和“Right-hand Side（右手边）”;换言之，当一个变量出现在赋值操作的左手边时，会进行 LHS 查询，当一个变量出现在赋值操作的右手边时，会进行 RHS 查询</li>
</ul>
<h4 id="RHS"><a href="#RHS" class="headerlink" title="RHS"></a>RHS</h4><ul>
<li>RHS 是难以察觉的，因为它简单地查询某个变量的值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">console.log( a );</div><div class="line"></div><div class="line">//这个指向 a 的引用是一个 RHS 引用，因为这里没有东西被赋值给 a。而是我们在查询 a 并取得它的值，这样这个值可以被传递进 console.log(..)</div></pre></td></tr></table></figure>
<h4 id="LHS"><a href="#LHS" class="headerlink" title="LHS"></a>LHS</h4><ul>
<li>LHS 查询是试着找到变量容器本身，以便它可以赋值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a = 2;</div><div class="line"></div><div class="line">//这里指向 a 的引用是一个 LHS 引用，因为我们实际上不关心当前的值是什么，我们只是想找到这个变量，将它作为 = 2 赋值操作的目标</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>LHS 和 RHS 意味着“赋值的左/右手边”未必像字面上那样意味着“ = 赋值操作符的左/右边”。赋值有几种其他的发生形式，所以最好在概念上将它考虑为：“赋值的目标（LHS）”和“赋值的源（RHS）”</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line">	console.log( a ); // 2</div><div class="line">&#125;</div><div class="line"></div><div class="line">foo( 2 );</div><div class="line"></div><div class="line">//调用 foo(..) 的最后一行作为一个函数调用要求一个指向 foo 的 RHS 引用，意味着，“去查询 foo 的值，并把它交给我”。另外，(..) 意味着 foo 的值应当被执行，所以它最好实际上是一个函数;</div><div class="line">//这个代码段隐含的 a = 2。它发生在当值 2 作为参数值传递给 foo(..) 函数时，值 2 被赋值 给了参数 a。为了（隐含地）给参数 a 赋值，进行了一个 LHS 查询</div><div class="line">//这里还有一个 a 的值的 RHS 引用，它的结果值被传入 console.log(..)。console.log(..) 需要一个引用来执行。它为 console 对象进行一个 RHS 查询，然后发生一个属性解析来看它是否拥有一个称为 log 的方法</div></pre></td></tr></table></figure>
<h4 id="引擎-作用域对话"><a href="#引擎-作用域对话" class="headerlink" title="引擎/作用域对话"></a>引擎/作用域对话</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line">	console.log( a ); // 2</div><div class="line">&#125;</div><div class="line"></div><div class="line">foo( 2 );</div></pre></td></tr></table></figure>
<ul>
<li>处理这个代码段的交互想象为一场对话。这场对话将会有点儿像这样进行</li>
</ul>
<blockquote>
<ul>
<li>引擎：嘿 作用域，我有一个 foo 的 RHS 引用。听说过它吗</li>
<li>作用域；啊，是的，听说过。编译器 刚在一秒钟之前声明了它。它是一个函数。给你</li>
<li>引擎：太棒了，谢谢！好的，我要执行 foo 了</li>
<li>引擎：嘿，作用域，我得到了一个 a 的 LHS 引用，听说过它吗</li>
<li>作用域：啊，是的，听说过。编译器 刚才将它声明为 foo 的一个正式参数了。给你。</li>
<li>引擎：一如既往的给力，作用域。再次感谢你。现在，该把 2 赋值给 a 了</li>
<li>引擎：嘿，作用域，很抱歉又一次打扰你。我需要 RHS 查询 console。听说过它吗</li>
<li>作用域：没关系，引擎，这是我一天到晚的工作。是的，我得到 console 了。它是一个内建对象。给你</li>
<li>引擎：完美。查找 log(..)。好的，很好，它是一个函数</li>
<li>引擎：嘿，作用域。你能帮我查一下 a 的 RHS 引用吗？我想我记得它，但只是想再次确认一下</li>
<li>作用域：你是对的，引擎。同一个家伙，没变。给你</li>
<li>引擎：酷。传递 a 的值，也就是 2，给 log(..)</li>
</ul>
</blockquote>
<h4 id="小测验"><a href="#小测验" class="headerlink" title="小测验"></a>小测验</h4><p>检查你到目前为止的理解。确保你扮演 引擎，并与 作用域 “对话”</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line">	var b = a;</div><div class="line">	return a + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var c = foo( 2 );</div><div class="line"></div><div class="line">//找到所有的 LHS 查询（有3处！）</div><div class="line">c = .., a = 2（隐含的参数赋值）和 b = ..</div><div class="line">//找到所有的 RHS 查询（有4处！）</div><div class="line">foo(2.., = a;, a + .. 和 .. + b</div></pre></td></tr></table></figure>
<h3 id="嵌套的作用域"><a href="#嵌套的作用域" class="headerlink" title="嵌套的作用域"></a>嵌套的作用域</h3><ul>
<li>作用域 是通过标识符名称查询变量的一组规则。但是，通常会有多于一个的 作用域 需要考虑</li>
<li>如果在直接作用域中找不到一个变量的话，引擎 就会咨询下一个外层作用域，如此继续直到找到这个变量或者到达最外层作用域（也就是全局作用域）</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line">	console.log( a + b );</div><div class="line">&#125;</div><div class="line"></div><div class="line">var b = 2;</div><div class="line"></div><div class="line">foo( 2 ); // 4</div><div class="line"></div><div class="line">b 的 RHS 引用不能在函数 foo 的内部被解析，但是可以在它的外围 作用域（这个例子中是全局作用域）中解析</div></pre></td></tr></table></figure>
<ul>
<li>重返 引擎 和 作用域 的对话</li>
</ul>
<blockquote>
<ul>
<li>引擎：“嘿，foo 的 作用域，听说过 b 吗？我得到一个它的 RHS 引用。”</li>
<li>作用域：“没有，从没听说过。问问别人吧。”</li>
<li>引擎：“嘿，foo 外面的 作用域，哦，你是全局 作用域，好吧，酷。听说过 b 吗？我得到一个它的 RHS 引用。”</li>
<li>作用域：“是的，当然有。给你。”</li>
</ul>
</blockquote>
<h4 id="建筑的隐喻"><a href="#建筑的隐喻" class="headerlink" title="建筑的隐喻"></a>建筑的隐喻</h4><ul>
<li>为了将嵌套 作用域 解析的过程可视化，我想让你考虑一下这个高层建筑</li>
<li>遍历嵌套 作用域 的简单规则：引擎 从当前执行的 作用域 开始，在那里查找变量，如果没有找到，就向上走一级继续查找，如此类推。如果到了最外层的全局作用域，那么查找就会停止，无论它是否找到了变量</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/ydkjs-1.png" alt="image"></p>
<h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><ul>
<li>在变量还没有被声明（在所有被查询的 作用域 中都没找到）的情况下，这两种类型的查询的行为不同</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line">	console.log( a + b );</div><div class="line">	b = a;</div><div class="line">&#125;</div><div class="line"></div><div class="line">foo( 2 );</div><div class="line">//当 b 的 RHS 查询第一次发生时，它是找不到的。它被说成是一个“未声明”的变量，因为它在作用域中找不到</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>RHS查询在嵌套的作用域的任何地方都找不到一个值，这会导致引擎抛出一个eferenceError。必须要注意的是这个错误的类型是 ReferenceError</li>
</ul>
</blockquote>
<h3 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h3><ul>
<li>作用域是一组规则，它决定了一个变量（标识符）在哪里和如何被查找。这种查询也许是为了向这个变量赋值，这时变量是一个 LHS（左手边）引用，或者是为取得它的值，这时变量是一个 RHS（右手边）引用</li>
<li>LHS 引用得自赋值操作。作用域 相关的赋值可以通过 = 操作符发生，也可以通过向函数参数传递（赋予）参数值发生</li>
<li>JavaScript 引擎 在执行代码之前首先会编译它，因此，它将 var a = 2; 这样的语句分割为两个分离的步骤:首先，var a 在当前 作用域 中声明。这是在最开始，代码执行之前实施的;稍后，a=2查找这个变量（LHS引用），并且如果找到就向它赋值</li>
<li>LHS 和 RHS 引用查询都从当前执行中的 作用域 开始，如果有需要（也就是，它们在这里没能找到它们要找的东西），它们会在嵌套的 作用域中一路向上，一次一个作用域（层）地查找这个标识符，直到它们到达全局作用域（顶层）并停止，既可能找到也可能没找到</li>
<li>未被满足的 RHS 引用会导致 ReferenceError被抛出。未被满足的LHS引用会导致一个自动的，隐含地创建的同名全局变量（如果不是“Strict模式”[^note-strictmode]），或者一个 ReferenceError（如果是“Strict模式”[^note-strictmode]）</li>
</ul>
<h2 id="词法作用域"><a href="#词法作用域" class="headerlink" title="词法作用域"></a>词法作用域</h2><ul>
<li>作用域的工作方式有两种占统治地位的模型。其中的第一种是最最常见，在绝大多数的编程语言中被使用的。它称为 词法作用域，我们将深入检视它。另一种仍然被一些语言（比如 Bash 脚本，Perl 中的一些模式，等等）使用的模型，称为 动态作用域</li>
<li>词法作用域是由函数被声明的位置唯一定义的，而且这个位置完全是一个编写时的决定</li>
</ul>
<h3 id="词法分析时"><a href="#词法分析时" class="headerlink" title="词法分析时"></a>词法分析时</h3><ul>
<li>词法分析处理是检查一串源代码字符，并给 token 赋予语法含义作为某种有状态解析的输出</li>
<li>词法作用域是在词法分析时被定义的作用域</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function foo(a) &#123;</div><div class="line"></div><div class="line">	var b = a * 2;</div><div class="line"></div><div class="line">	function bar(c) &#123;</div><div class="line">		console.log( a, b, c );</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	bar(b * 3);</div><div class="line">&#125;</div><div class="line"></div><div class="line">foo( 2 ); // 2 4 12</div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/ydkjs-2.png" alt="image"></p>
<blockquote>
<ul>
<li>气泡1 包围着全局作用域，它里面只有一个标识符：foo</li>
<li>气泡2 包围着作用域 foo，它含有三个标识符：a，bar 和 b</li>
<li>气泡3 包围着作用域 bar，它里面只包含一个标识符：c</li>
</ul>
</blockquote>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><ul>
<li>在上面的代码段中，引擎执行语句console.log(..并开始查找三个被引用的变量a，b和c。它首先从最内部的作用域气泡开始，也就是 bar(..)函数的作用域。在这里它找不到a，所以它向上走一层，到外面下一个最近的作用域气泡，foo(..的作用域。它在这里找到了a，于是它就使用这个 a。同样的事情也发生在 b 身上。但是对于 c，它在 bar(..) 内部就找到了</li>
<li>如果在 bar(..) 内部和 foo(..) 内部都有一个 c，那么 console.log(..) 语句将会找到并使用 bar(..)中的那一个，绝不会到达 foo(..) 中的那一个</li>
</ul>
<blockquote>
<ul>
<li>一旦找到第一个匹配，作用域查询就停止了</li>
<li>相同的标识符名称可以在嵌套作用域的多个层中被指定，这称为“遮蔽（shadowing）”（内部的标识符“遮蔽”了外部的标识符</li>
<li>全局变量也自动地是全局对象（在浏览器中是window，等等）的属性，所以不直接通过全局变量的词法名称，而通过将它作为全局对象的一个属性引用来间接地引用，如window.a,这种技术给出了访问全局变量的方法，没有它全局变量将因为被遮蔽而不可访问</li>
</ul>
</blockquote>
<h3 id="欺骗词法作用域"><a href="#欺骗词法作用域" class="headerlink" title="欺骗词法作用域"></a>欺骗词法作用域</h3><ul>
<li>JavaScript 有两种这样的机制,通过利用它来在运行时“修改”（也就是，作弊欺骗）词法作用域</li>
<li>欺骗词法作用域会导致更低下的性能</li>
</ul>
<h4 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h4><ul>
<li>JavaScript 中的 eval(..) 函数接收一个字符串作为参数值，并将这个字符串的内容看作是好像它已经被实际编写在程序的那个位置上;换句话说，你可以用编程的方式在你编写好的代码内部生成代码，而且你可以运行这个生成的代码，就好像它在编写时就已经在那里了一样</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function foo(str, a) &#123;</div><div class="line">	eval( str ); // 作弊！</div><div class="line">	console.log( a, b );</div><div class="line">&#125;</div><div class="line"></div><div class="line">var b = 2;</div><div class="line"></div><div class="line">foo( "var b = 3;", 1 ); // 1 3</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>在 eval(..) 调用的位置上，字符串”varb=3”被看作是一直就存在在那里的代码。因为这个代码恰巧声明了一个新的变量 b，它就修改了现存的 foo(..) 的词法作用域。事实上，就像上面提到的那样，这个代码实际上在 foo(..) 内部创建了变量 b，它遮蔽了声明在外部（全局）作用域中的 b</li>
</ul>
</blockquote>
<ul>
<li>当eval(..)被用于一个操作它自己的词法作用域的strict模式程序时在eval(..)内部做出的声明不会实际上修改包围它的作用域</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function foo(str) &#123;</div><div class="line">   "use strict";</div><div class="line">   eval( str );</div><div class="line">   console.log( a ); // ReferenceError: a is not defined</div><div class="line">&#125;</div><div class="line"></div><div class="line">foo( "var a = 2" );</div></pre></td></tr></table></figure>
<h4 id="with"><a href="#with" class="headerlink" title="with"></a>with</h4><ul>
<li>with 的常见方式是作为一种缩写，来引用一个对象的多个属性，而 不必 每次都重复对象引用本身</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">	a: 1,</div><div class="line">	b: 2,</div><div class="line">	c: 3</div><div class="line">&#125;;</div><div class="line"></div><div class="line">//  重复“obj”显得更“繁冗”</div><div class="line">obj.a = 2;</div><div class="line">obj.b = 3;</div><div class="line">obj.c = 4;</div><div class="line"></div><div class="line">// “更简单”的缩写</div><div class="line">with (obj) &#123;</div><div class="line">	a = 3;</div><div class="line">	b = 4;</div><div class="line">	c = 5;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>然而，这里发生的事情要比只是一个对象属性访问的便捷缩写要多得多。考虑如下代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">function foo(obj) &#123;</div><div class="line">	with (obj) &#123;</div><div class="line">		a = 2;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var o1 = &#123;</div><div class="line">	a: 3</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var o2 = &#123;</div><div class="line">	b: 3</div><div class="line">&#125;;</div><div class="line"></div><div class="line">foo( o1 );</div><div class="line">console.log( o1.a ); // 2</div><div class="line"></div><div class="line">foo( o2 );</div><div class="line">console.log( o2.a ); // undefined</div><div class="line">console.log( a ); // 2 -- 哦，全局作用域被泄漏了！</div></pre></td></tr></table></figure>
<ul>
<li>在这个代码示例中，创建了两个对象o1和o2。一个有a属性，而另一个没有。foo(..)函数接收一个对象引用obj作为参数值，并在这个引用上调用with (obj){..}。在with块儿内部，我们制造了一个变量a的看似是普通词法引用的东西，实际上是一个 LHS引用（见第一章），并将值 2 赋予它;当我们传入 o1 时，赋值 a = 2 找到属性 o1.a 并赋予它值 2，正如在后续的 console.log(o1.a)语句中反映出的那样;然而，当我们传入o2，因为它没有a属性，没有这样的属性被创建，所以o2.a还是undefined;但是之后我们注意到一个特别的副作用，赋值 a = 2 创建了一个全局变量 a</li>
</ul>
<blockquote>
<ul>
<li>如果 eval(..) 函数接收一个含有一个或多个声明的代码字符串，它就会修改现存的词法作用域，而with语句实际上是从你传递给它的对象中凭空制造了一个 全新的词法作用域</li>
<li>eval(..) 和 with 都受Strict模式的影响（制约）</li>
</ul>
</blockquote>
<h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><ul>
<li>JavaScript 引擎 在编译阶段期行许多性能优化工作。其中的一些优化原理都归结为实质上在进行词法分析时可以静态地分析代码，并提前决定所有的变量和函数声明都在什么位置，这样在执行期间就可以少花些力气来解析标识符</li>
<li>在代码的任何地方引入了一个了 eval(..) 或 with。无论引擎将在努力限制这些悲观臆测的副作用上表现得多么聪明，都没有任何办法可以绕过这个事实：没有优化，代码就运行的更慢</li>
</ul>
<h3 id="复习-1"><a href="#复习-1" class="headerlink" title="复习"></a>复习</h3><ul>
<li>词法作用域意味着作用域是由编写时函数被声明的位置的决策定义的。编译器的词法分析阶段实质上可以知道所有的标识符是在哪里和如何声明的，并如此在执行期间预测它们将如何被查询</li>
<li>在 JavaScript 中有两种机制可以“欺骗”词法作用域：eval(..) 和 with。前者可以通过对一个拥有一个或多个声明的“代码”字符串进行求值，来（在运行时）修改现存的词法作用域。后者实质上是通过将一个对象引用看作一个“作用域”，并将这个对象的属性看作作用域中的标识符，（同样，也是在运行时）创建一个全新的词法作用域</li>
<li>这些机制的缺点是，它压制了引擎在作用域查询上进行编译期优化的能力，因为引擎不得不悲观地假定这样的优化是无效的。这两种特性的结果就是代码 将 会运行的更慢。不要使用它们</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;这几天看完《你不知道的JavaScirpt》系列的书籍,里面的模拟场景和例子真的经典
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>移动响应式</title>
    <link href="http://yoursite.com/2017/06/04/phone/"/>
    <id>http://yoursite.com/2017/06/04/phone/</id>
    <published>2017-06-04T15:17:50.000Z</published>
    <updated>2018-05-30T12:37:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="媒体查询-Media-Queries"><a href="#媒体查询-Media-Queries" class="headerlink" title="媒体查询(Media Queries)"></a>媒体查询(Media Queries)</h1><ul>
<li>可以针对不同的媒体类型或不同的屏幕尺寸定义不同的样式，媒体类型，包括PC、平板、手机、打印机、电视、屏幕阅读器</li>
</ul>
<h2 id="媒体查询的引入"><a href="#媒体查询的引入" class="headerlink" title="媒体查询的引入"></a>媒体查询的引入</h2><a id="more"></a>
<h3 id="link方法引入"><a href="#link方法引入" class="headerlink" title="link方法引入"></a>link方法引入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">herf</span> = <span class="string">"responsive.css"</span>  <span class="attr">media</span>=<span class="string">"mediatype and | not | only (media feature)"</span>&gt;</span><span class="tag">&lt;/<span class="name">link</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- 举例 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 600px)"</span> <span class="attr">href</span>=<span class="string">"small.css"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="style方法引入"><a href="#style方法引入" class="headerlink" title="style方法引入"></a>style方法引入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">500px</span>)&#123;</div><div class="line">  <span class="selector-tag">body</span>&#123;</div><div class="line">    <span class="attribute">background</span>: red;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>screen：一种媒体类型</li>
<li>and：逻辑操作符，与其相似的还有not,only</li>
<li>(max-width:600px):这个就是媒体特性，说得通俗一点就是媒体条件</li>
</ul>
</blockquote>
<h2 id="媒体查询语法"><a href="#媒体查询语法" class="headerlink" title="媒体查询语法"></a>媒体查询语法</h2><ul>
<li>逻辑操作符</li>
<li>媒体类型(Media Type)</li>
<li>媒体属性(Media Query)</li>
</ul>
<h3 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h3><ul>
<li>not、and、only和逗号(,)</li>
</ul>
<h4 id="and"><a href="#and" class="headerlink" title="and"></a>and</h4><ul>
<li>and操作符用来把多个媒体属性组合起来，合并到同一条媒体查询中。只有当每个属性都为真时，这条查询的结果才为真</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 满足横屏以及最小宽度为700px的条件应用样式表 --&gt;</span></div><div class="line">@media all and (min-width: 700px) and (orientation: landscape) &#123; ... &#125;</div><div class="line"><span class="comment">&lt;!-- 由于不使用not或only操作符的情况下，媒体类型是可选的，默认为 all，所以可以简写为 --&gt;</span></div><div class="line">@media (min-width: 700px) and (orientation: landscape) &#123; ... &#125;</div></pre></td></tr></table></figure>
<h4 id="逗号"><a href="#逗号" class="headerlink" title="逗号(,)"></a>逗号(,)</h4><ul>
<li>效果等同于or逻辑操作符，这要有其中一个查询条件为真，则查询返回真</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 满足最小宽度为700像素或是横屏的手持设备应用样式表 --&gt;</span></div><div class="line">@media (min-width: 700px), handheld and (orientation: landscape) &#123; ... &#125;</div></pre></td></tr></table></figure>
<h4 id="not"><a href="#not" class="headerlink" title="not"></a>not</h4><ul>
<li>操作符应用于整个媒体查询并对结果取反</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- not关键字仅能应用于整个查询，而不能单独应用于一个独立的查询 --&gt;</span></div><div class="line">@media not all and (monochrome) &#123; ... &#125;</div><div class="line">//等价于</div><div class="line">@media not (all and (monochrome)) &#123; ... &#125;</div></pre></td></tr></table></figure>
<h4 id="only"><a href="#only" class="headerlink" title="only"></a>only</h4><ul>
<li>only操作符表示仅在媒体查询匹配成功时应用指定样式。可以通过它让选中的样式在老式浏览器中不被应用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@media only screen &#123; ... &#125;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>实际上，only、not、and和or(用逗号表示)这四种逻辑中，只有and比较常用</li>
</ul>
</blockquote>
<h3 id="媒体类型-Media-Type"><a href="#媒体类型-Media-Type" class="headerlink" title="媒体类型(Media Type)"></a>媒体类型(Media Type)</h3><ul>
<li>media属性用于为不同的媒介类型规定不同的样式</li>
<li>all：所有设备</li>
<li>screen： 计算机屏幕、平板和手机</li>
<li>print：打印设备</li>
<li>speech：屏幕阅读器</li>
</ul>
<h3 id="媒体属性-Media-Query"><a href="#媒体属性-Media-Query" class="headerlink" title="媒体属性(Media Query)"></a>媒体属性(Media Query)</h3><ul>
<li>多数媒体属性带有“min-”和“max-”前缀，用于表达“小于等于”和“大于等于”</li>
<li>设备宽高（设备屏幕区域）：device-width | device-height | max-device-width | min-device-height；</li>
<li>宽高（渲染区域）：width | height |max-width | min-height；</li>
<li>设备方向：(orientation){portrait | landscape}</li>
<li>分辨率：(resolution:300dpi){}</li>
</ul>
<hr>
<h1 id="栅格系统-CSS-grid"><a href="#栅格系统-CSS-grid" class="headerlink" title="栅格系统(CSS grid)"></a>栅格系统(CSS grid)</h1><ul>
<li>栅格是由网格演变而来的另一种说法，都是一个意思——格子,栅格有了规则，也就形成了我们所说的栅格系统</li>
</ul>
<h2 id="CSS栅格元素"><a href="#CSS栅格元素" class="headerlink" title="CSS栅格元素"></a>CSS栅格元素</h2><ul>
<li>container(容器)</li>
<li>rows(行数)</li>
<li>columns(列数)</li>
<li>gutters (列间隙)</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-1.png" alt="image"></p>
<h3 id="容器-container"><a href="#容器-container" class="headerlink" title="容器(container)"></a>容器(container)</h3><ul>
<li>容器的目的是设置栅格系统的总宽度</li>
<li>width是以100%的形式从父容器中继承而来的</li>
<li>通常设置max-width来控制最大宽度</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.grid-container &#123;</div><div class="line"> width : 100%;</div><div class="line"> max-width : 1200px; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-2.png" alt="image"></p>
<h3 id="行元素-rows"><a href="#行元素-rows" class="headerlink" title="行元素(rows)"></a>行元素(rows)</h3><ul>
<li>将Column元素放置于Row元素里面，用来避免Column元素溢出到其它行</li>
<li>为了实现这一效果,使用clearfix来清除浮动</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.row:before, </div><div class="line">.row:after &#123;</div><div class="line"> content:"";</div><div class="line"> display: table ;</div><div class="line"> clear:both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-3.png" alt="image"></p>
<h3 id="列元素-columns"><a href="#列元素-columns" class="headerlink" title="列元素(columns)"></a>列元素(columns)</h3><ul>
<li>列元素是栅格系统中最复杂的部分</li>
<li>首先，在CSS中会有很多种不同的定位方式，并且我们需要考虑不同类型列的宽度，以及设计响应式</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-4.png" alt="image"></p>
<h3 id="列的定位-Column-Positioning"><a href="#列的定位-Column-Positioning" class="headerlink" title="列的定位(Column Positioning)"></a>列的定位(Column Positioning)</h3><ul>
<li>每一列设置float定位</li>
<li>Column元素是一个空元素的话，那么它就会浮动到顶部。为了防止这种情况的发生，我们给每个Column元素设置了浮动的同时也设置了1px的最小高度</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[class*='col-'] &#123;</div><div class="line"> float: left;</div><div class="line"> min-height: 1px; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="列宽度的设置-Column-Widths"><a href="#列宽度的设置-Column-Widths" class="headerlink" title="列宽度的设置(Column Widths)"></a>列宽度的设置(Column Widths)</h4><ul>
<li>获取每一列的宽度，用容器的总宽度去除列数,容器宽度是100%，并且需要6列，所以100/6=16.66，最后算出来每一列的宽度就是16.16%</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[class*='col-'] &#123;</div><div class="line"> float: left;</div><div class="line"> min-height: 1px; </div><div class="line"> width: 16.66%; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="多列列宽的设置"><a href="#多列列宽的设置" class="headerlink" title="多列列宽的设置"></a>多列列宽的设置</h4><ul>
<li>使用的元素的列之和必须为6(即符合你设定的列之和)</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">.col-1&#123;</div><div class="line"> width: 16.66%; </div><div class="line">&#125;</div><div class="line">.col-2&#123;</div><div class="line"> width: 33.33%; </div><div class="line">&#125;</div><div class="line">.col-3&#123;</div><div class="line"> width: 50%; </div><div class="line">&#125;</div><div class="line">.col-4&#123;</div><div class="line"> width: 66.664%;</div><div class="line">&#125;</div><div class="line">.col-5&#123;</div><div class="line"> width: 83.33%;</div><div class="line">&#125;</div><div class="line">.col-6&#123;</div><div class="line"> width: 100%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="列间隙-Column-Gutters"><a href="#列间隙-Column-Gutters" class="headerlink" title="列间隙(Column Gutters)"></a>列间隙(Column Gutters)</h3><ul>
<li>通过border-box模型设置列间隙</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">.grid-container *&#123;</div><div class="line"> box-sizing: border-box; </div><div class="line">&#125;</div><div class="line">[class*='col-'] &#123;</div><div class="line"> float: left;</div><div class="line"> min-height: 1px; </div><div class="line"> width: 16.66%; </div><div class="line"> /*-- our gutter --*/</div><div class="line"> padding: 12px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-5.png" alt="image"></p>
<h2 id="基本栅格布局"><a href="#基本栅格布局" class="headerlink" title="基本栅格布局"></a>基本栅格布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="comment">/* 设置容器宽度100%,最大宽度限制1200px */</span></div><div class="line">    <span class="selector-class">.grid-container</span> &#123;</div><div class="line">     <span class="attribute">width</span>: <span class="number">100%</span>; </div><div class="line">    &#125;</div><div class="line">    <span class="comment">/* 每一行清除浮动 */</span></div><div class="line">    <span class="selector-class">.row</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">     <span class="attribute">content</span>:<span class="string">""</span>;</div><div class="line">     <span class="attribute">display</span>: table ;</div><div class="line">     <span class="attribute">clear</span>:both;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/* 每一列宽度设置为100%/列数 */</span></div><div class="line">    <span class="selector-attr">[class*='col-']</span> &#123;</div><div class="line">     <span class="attribute">float</span>: left; </div><div class="line">     <span class="attribute">min-height</span>: <span class="number">1px</span>; </div><div class="line">     <span class="attribute">width</span>: <span class="number">16.66%</span>; </div><div class="line">     <span class="comment">/*-- our gutter -- */</span></div><div class="line">     <span class="attribute">padding</span>: <span class="number">12px</span>; </div><div class="line">     <span class="attribute">background-color</span>: <span class="number">#FFDCDC</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/* 多列宽度设置 */</span></div><div class="line">    <span class="selector-class">.col-1</span>&#123; <span class="attribute">width</span>: <span class="number">16.66%</span>; &#125;</div><div class="line">    <span class="selector-class">.col-2</span>&#123; <span class="attribute">width</span>: <span class="number">33.33%</span>; &#125;</div><div class="line">    <span class="selector-class">.col-3</span>&#123; <span class="attribute">width</span>: <span class="number">50%</span>; &#125;</div><div class="line">    <span class="selector-class">.col-4</span>&#123; <span class="attribute">width</span>: <span class="number">66.66%</span>; &#125;</div><div class="line">    <span class="selector-class">.col-5</span>&#123; <span class="attribute">width</span>: <span class="number">83.33%</span>; &#125;</div><div class="line">    <span class="selector-class">.col-6</span>&#123; <span class="attribute">width</span>: <span class="number">100%</span>; &#125;</div><div class="line"></div><div class="line">    <span class="selector-class">.grid-container</span>, <span class="selector-class">.row</span>, <span class="selector-attr">[class*='col-']</span> &#123;</div><div class="line">      <span class="attribute">box-sizing</span>: border-box;</div><div class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid red;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="selector-attr">[class*='col-']</span> &gt; <span class="selector-tag">p</span> &#123;</div><div class="line">     <span class="attribute">background-color</span>: <span class="number">#FFC2C2</span>; </div><div class="line">     <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">     <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">     <span class="attribute">text-align</span>: center; </div><div class="line">     <span class="attribute">color</span>: white; </div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-container"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-1"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-6"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-6"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>col-3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-6.gif" alt="image"></p>
<h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><ul>
<li>栅格调整并用于手机布局,只是调整列的宽度</li>
<li>如果屏幕最大宽度600px(0~600),执行所设置的元素宽度</li>
<li>如果屏幕最小宽度600px(600~xx),执行所设置的元素宽度</li>
<li>如果屏幕最小宽度900px(900~xx),执行所设置的元素宽度</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">div</span> &#123;</div><div class="line">      <span class="attribute">float</span>: left;</div><div class="line">      <span class="attribute">box-sizing</span>: border-box;</div><div class="line">      <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    @<span class="keyword">media</span> screen and (max-width: <span class="number">600px</span>) &#123;</div><div class="line">      <span class="selector-class">.col-xs-1</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-2</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/6);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-3</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/4);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-4</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/3);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-5</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*5);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-6</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/2);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-7</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*7);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-8</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*8);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-9</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*9);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-10</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*10);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-11</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*11);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-xs-12</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    @<span class="keyword">media</span> screen and (min-width: <span class="number">600px</span>) &#123;</div><div class="line">      <span class="selector-class">.col-sm-1</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-2</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/6);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-3</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/4);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-4</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/3);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-5</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*5);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-6</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/2);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-7</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*7);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-8</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*8);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-9</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*9);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-10</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*10);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-11</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*11);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-sm-12</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    @<span class="keyword">media</span> screen and (min-width: <span class="number">900px</span>) &#123;</div><div class="line">      <span class="selector-class">.col-md-1</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-2</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/6);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-3</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/4);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-4</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/3);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-5</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*5);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-6</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/2);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-7</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*7);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-8</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*8);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-9</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*9);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-10</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*10);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-11</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(100%/12*11);</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.col-md-12</span> &#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-4 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-sm-6 col-xs-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-7.gif" alt="image"></p>
<hr>
<h1 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h1><ul>
<li>Flex 是 Flexible Box 的缩写，意为”弹性布局”</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// 任何一个容器都可以指定为 Flex 布局</div><div class="line">.box&#123;</div><div class="line">  display: flex;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 行内元素也可以使用 Flex 布局</div><div class="line">.box&#123;</div><div class="line">  display: inline-flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效</li>
</ul>
</blockquote>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul>
<li>设置 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”</li>
<li>所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”</li>
<li>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）</li>
<li>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end</li>
<li>交叉轴的开始位置叫做cross start，结束位置叫做cross end</li>
<li>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-8.png" alt="image"></p>
<h2 id="容器的属性"><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h2><ul>
<li>flex-direction</li>
<li>flex-wrap</li>
<li>flex-flow(不常用)</li>
<li>justify-content</li>
<li>align-items</li>
<li>align-content(不常用)</li>
</ul>
<h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><ul>
<li>flex-direction属性决定主轴的方向（即项目的排列方向）</li>
<li>.box { flex-direction: row | row-reverse | column | column-reverse; }</li>
<li>row（默认值）：主轴为水平方向，起点在左端</li>
<li>row-reverse：主轴为水平方向，起点在右端</li>
<li>column：主轴为垂直方向，起点在上沿</li>
<li>column-reverse：主轴为垂直方向，起点在下沿</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-10.png" alt="image"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#E2E2E2</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">      <span class="attribute">color</span>: <span class="number">#595B66</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">55px</span>;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">vertical-align</span>: middle;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-1</span> &#123;</div><div class="line">      <span class="attribute">flex-direction</span>: row;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-9.png" alt="image"></p>
<h3 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h3><ul>
<li>默认情况下，项目都排在一条线（又称”轴线”）上;flex-wrap属性定义，如果一条轴线排不下，如何换行</li>
<li>.box{ flex-wrap: nowrap | wrap | wrap-reverse; }</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-11.png" alt="image"></p>
<ul>
<li>nowrap（默认）：不换行<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-2</span> &#123;</div><div class="line">      <span class="attribute">flex-direction</span>: row;</div><div class="line">      <span class="attribute">flex-wrap</span>: nowrap;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-2"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-12.png" alt="image"></p>
<ul>
<li>wrap：换行，第一行在上方</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-3</span> &#123;</div><div class="line">      <span class="attribute">flex-direction</span>: row;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-3"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-13.png" alt="image"></p>
<ul>
<li>wrap-reverse：换行，第一行在下方</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-4</span> &#123;</div><div class="line">      <span class="attribute">flex-direction</span>: row;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap-reverse;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-4"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-14.png" alt="image"></p>
<h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><ul>
<li>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</li>
<li>.box { flex-flow: <flex-direction> || <flex-wrap>; }</flex-wrap></flex-direction></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-5</span> &#123;</div><div class="line">      <span class="attribute">flex-direction</span>: row;</div><div class="line">      <span class="attribute">flex-flow</span>: row nowrap;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-5"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-15.png" alt="image"></p>
<h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><ul>
<li>justify-content属性定义了项目在主轴上的对齐方式</li>
<li>.box { justify-content: flex-start | flex-end | center | space-between | space-around; }</li>
<li>flex-start（默认值）：左对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-6</span> &#123;</div><div class="line">      <span class="attribute">justify-content</span>: flex-start;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-6"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-16.png" alt="image"></p>
<ul>
<li>flex-end：右对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-7</span> &#123;</div><div class="line">      <span class="attribute">justify-content</span>: flex-end;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-7"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-17.png" alt="image"></p>
<ul>
<li>center: 居中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-8</span> &#123;</div><div class="line">      <span class="attribute">justify-content</span>: center;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-18.png" alt="image"></p>
<ul>
<li>space-between：两端对齐，项目之间的间隔都相等</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-9</span> &#123;</div><div class="line">      <span class="attribute">justify-content</span>: space-between;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-9"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-19.png" alt="image"></p>
<ul>
<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-10</span> &#123;</div><div class="line">      <span class="attribute">justify-content</span>: space-around;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-10"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-20.png" alt="image"></p>
<h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><ul>
<li>align-items属性定义项目在交叉轴上如何对齐</li>
<li>.box { align-items: flex-start | flex-end | center | baseline | stretch; }</li>
<li>flex-start：左对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-11</span> &#123;</div><div class="line">      <span class="attribute">align-items</span>: flex-start;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.item-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-11"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-21.png" alt="image"></p>
<ul>
<li>flex-end：交叉轴的终点对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-12</span> &#123;</div><div class="line">      <span class="attribute">align-items</span>: flex-end;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.item-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-12"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-22.png" alt="image"></p>
<ul>
<li>center：交叉轴的中点对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-13</span> &#123;</div><div class="line">      <span class="attribute">align-items</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.item-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-13"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-23.png" alt="image"></p>
<ul>
<li>baseline: 项目的第一行文字的基线对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-14</span> &#123;</div><div class="line">      <span class="attribute">align-items</span>: baseline;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-14</span> <span class="selector-class">.box-item</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">88px</span>;</div><div class="line">      <span class="attribute">line-height</span>: initial;</div><div class="line">      <span class="attribute">text-decoration</span>: underline;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.item-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-14</span> <span class="selector-class">.item-tall</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">122px</span>;</div><div class="line">      <span class="attribute">line-height</span>: initial;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-14"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-24.png" alt="image"></p>
<ul>
<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-15</span> &#123;</div><div class="line">      <span class="attribute">align-items</span>: stretch;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-15</span> <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">height</span>: auto;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.item-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-15"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item item-tall"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-25.png" alt="image"></p>
<h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><ul>
<li>align-content属性定义了多根轴线（多行）的对齐方式。如果项目只有一根轴线，该属性不起作用</li>
<li>.box { align-content: flex-start | flex-end | center | space-between | space-around | stretch; }</li>
<li>flex-start：交叉轴的起点对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-16</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: flex-start;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-16"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-26.png" alt="image"></p>
<ul>
<li>flex-end：与交叉轴的终点对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-17</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: flex-end;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-17"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-27.png" alt="image"></p>
<ul>
<li>center：与交叉轴的中点对齐</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-18</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-18"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-28.png" alt="image"></p>
<ul>
<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-19</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: space-between;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-19"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-29.png" alt="image"></p>
<ul>
<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-20</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: space-around;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-20"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-30.png" alt="image"></p>
<ul>
<li>stretch（默认值）：轴线占满整个交叉轴</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-21</span> &#123;</div><div class="line">      <span class="attribute">flex-wrap</span>: wrap;</div><div class="line">      <span class="attribute">align-content</span>: stretch;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-21</span> <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">height</span>: auto;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-tall</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-tall box-21"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-31.png" alt="image"></p>
<h2 id="项目的属性"><a href="#项目的属性" class="headerlink" title="项目的属性"></a>项目的属性</h2><ul>
<li>order(代替双飞翼)</li>
<li>flex-grow</li>
<li>flex-shrink(不常用)</li>
<li>flex-basis(不常用)</li>
<li>flex</li>
<li>align-self</li>
</ul>
<h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><ul>
<li>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0</li>
<li>.item { order: <integer>; }</integer></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">      <span class="attribute">position</span>: relative;</div><div class="line">      <span class="attribute">top</span>: -<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-22</span> <span class="selector-class">.order</span> &#123;</div><div class="line">      <span class="attribute">order</span>: -<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-22"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item order"</span>&gt;</span>4<span class="tag">&lt;<span class="name">div</span>&gt;</span>(order:-1)<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-32.png" alt="image"></p>
<h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><ul>
<li>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大</li>
<li>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）;如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</li>
<li>.item { flex-grow: <number>; /<em> default 0 </em>/ }</number></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">      <span class="attribute">position</span>: relative;</div><div class="line">      <span class="attribute">top</span>: -<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-23</span> <span class="selector-class">.box-item</span>&#123;</div><div class="line">      <span class="attribute">flex-grow</span>: <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-23</span> <span class="selector-class">.grow-2</span> &#123;</div><div class="line">      <span class="attribute">flex-grow</span>: <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-23"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item grow"</span>&gt;</span>1 <span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-grow: 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item grow grow-2"</span>&gt;</span>2 <span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-grow: 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item grow"</span>&gt;</span>3 <span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-grow: 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-33.png" alt="image"></p>
<h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><ul>
<li>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小</li>
<li>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小</li>
<li>负值对该属性无效</li>
<li>.item { flex-shrink: <number>; /<em> default 1 </em>/ }</number></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">      <span class="attribute">position</span>: relative;</div><div class="line">      <span class="attribute">top</span>: -<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-24</span> <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-24</span> <span class="selector-class">.shrink</span>&#123;</div><div class="line">      <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-24"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item shrink"</span>&gt;</span>1 <span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-shrink: 0<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-34.png" alt="image"></p>
<h3 id="flex-basis属性"><a href="#flex-basis属性" class="headerlink" title="flex-basis属性"></a>flex-basis属性</h3><ul>
<li>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间(main size)</li>
<li>浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小</li>
<li>.item { flex-basis: <length>; | auto; /<em> default auto </em>/ }</length></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    body &#123;</div><div class="line">      padding: 20px;</div><div class="line">      margin: 0 auto;</div><div class="line">      background-color: #ccc;</div><div class="line">      max-width: 1024px;</div><div class="line">    &#125;</div><div class="line">    .box &#123;</div><div class="line">      background-color: white;</div><div class="line">      display: flex;</div><div class="line">    &#125;</div><div class="line">    .box-item &#123;</div><div class="line">      width: 150px;</div><div class="line">      height: 150px;</div><div class="line">      line-height: 150px;</div><div class="line">      margin: 5px;</div><div class="line">      background-color: #ffd200;</div><div class="line">      font-size: 100px;</div><div class="line">      color: white;</div><div class="line">      text-align: center;</div><div class="line">    &#125;</div><div class="line">    .box-25 .box-item &#123;</div><div class="line">      flex-basis: 200px;</div><div class="line">      width: 400px; // width 将失去作用</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-25"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-35.png" alt="image"></p>
<h3 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h3><ul>
<li>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选</li>
<li>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)</li>
<li>.item { flex: none | [ &lt;’flex-grow’&gt; &lt;’flex-shrink’&gt;? || &lt;’flex-basis’&gt; ] }</li>
</ul>
<h3 id="align-self属性"><a href="#align-self属性" class="headerlink" title="align-self属性"></a>align-self属性</h3><ul>
<li>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch</li>
<li>.item { align-self: auto | flex-start | flex-end | center | baseline | stretch; }</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">      <span class="attribute">max-width</span>: <span class="number">1024px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box</span> &#123;</div><div class="line">      <span class="attribute">background-color</span>: white;</div><div class="line">      <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">5px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#ffd200</span>;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">color</span>: white;</div><div class="line">      <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-item</span> <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">      <span class="attribute">position</span>: relative;</div><div class="line">      <span class="attribute">top</span>: -<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-26</span> &#123;</div><div class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-26</span> <span class="selector-class">.box-item</span> &#123;</div><div class="line">      <span class="attribute">align-self</span>: flex-start;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.box-26</span> <span class="selector-class">.end</span> &#123;</div><div class="line">      <span class="attribute">align-self</span>: flex-end;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box-26"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item end"</span>&gt;</span>3<span class="tag">&lt;<span class="name">div</span>&gt;</span>flex-end<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/phone-36.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;媒体查询-Media-Queries&quot;&gt;&lt;a href=&quot;#媒体查询-Media-Queries&quot; class=&quot;headerlink&quot; title=&quot;媒体查询(Media Queries)&quot;&gt;&lt;/a&gt;媒体查询(Media Queries)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;可以针对不同的媒体类型或不同的屏幕尺寸定义不同的样式，媒体类型，包括PC、平板、手机、打印机、电视、屏幕阅读器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;媒体查询的引入&quot;&gt;&lt;a href=&quot;#媒体查询的引入&quot; class=&quot;headerlink&quot; title=&quot;媒体查询的引入&quot;&gt;&lt;/a&gt;媒体查询的引入&lt;/h2&gt;
    
    </summary>
    
      <category term="HTML/CSS" scheme="http://yoursite.com/categories/HTML-CSS/"/>
    
    
      <category term="响应式" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/"/>
    
      <category term="媒体查询" scheme="http://yoursite.com/tags/%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="栅格系统" scheme="http://yoursite.com/tags/%E6%A0%85%E6%A0%BC%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="flex布局" scheme="http://yoursite.com/tags/flex%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js</title>
    <link href="http://yoursite.com/2017/05/25/vue/"/>
    <id>http://yoursite.com/2017/05/25/vue/</id>
    <published>2017-05-25T15:16:41.000Z</published>
    <updated>2018-05-30T12:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h1><ul>
<li>Vue.js是一套构建用户界面的渐进式框架,遵循MVVM设计模式<a id="more"></a>
</li>
</ul>
<h1 id="Vue引入"><a href="#Vue引入" class="headerlink" title="Vue引入"></a>Vue引入</h1><ul>
<li>BootCDN（国内）: <a href="https://cdn.bootcss.com/vue/2.2.2/vue.min.js" target="_blank" rel="external">https://cdn.bootcss.com/vue/2.2.2/vue.min.js</a></li>
<li>npm install vue</li>
</ul>
<h2 id="Vue-cli"><a href="#Vue-cli" class="headerlink" title="Vue-cli"></a>Vue-cli</h2><ul>
<li>Vue.js 提供一个官方命令行工具，可用于快速搭建大型单页应用</li>
</ul>
<blockquote>
<p>全局安装 vue-cli<br>cnpm install –global vue-cli<br>创建一个基于 webpack 模板的新项目<br>vue init webpack my-project<br>这里需要进行一些配置，默认回车即可</p>
</blockquote>
<ul>
<li>运行项目</li>
</ul>
<blockquote>
<p>cd my-project<br>npm install<br>cnpm run dev</p>
</blockquote>
<h1 id="Vue目录结构"><a href="#Vue目录结构" class="headerlink" title="Vue目录结构"></a>Vue目录结构</h1><p><img src="http://www.runoob.com/wp-content/uploads/2017/01/B6E593E3-F284-4C58-A610-94C6ACDAD485.jpg" alt="image"></p>
<blockquote>
<p>build    最终发布的代码存放位置<br>config    配置目录，包括端口号等<br>node_modules    npm 加载的项目依赖模块<br>src    这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件<br>assets: 放置一些图片，如logo等<br>components: 目录里面放了一个组件文件，可以不用<br>App.vue: 项目入口文件，我们也可以直接将组件写这里，而不使用 components 目录<br>main.js: 项目的核心文件<br>static    静态资源目录，如图片、字体等<br>test    初始测试目录，可删除<br>.xxxx文件    这些是一些配置文件，包括语法配置，git配置等<br>index.html    首页入口文件，你可以添加一些 meta 信息或同统计代码啥的<br>package.json    项目配置文件<br>README.md    项目的说明文档，markdown 格式</p>
</blockquote>
<h1 id="Vue-js-模板语法"><a href="#Vue-js-模板语法" class="headerlink" title="Vue.js 模板语法"></a>Vue.js 模板语法</h1><ul>
<li>Vue.js 使用了基于 HTML 的模版语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据</li>
</ul>
<h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><pre><code>数据绑定最常见的形式就是使用 {{...}}（双大括号）的文本插值
</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue 测试实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.4.2/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#app'</span>,</div><div class="line">  data: &#123;</div><div class="line">    message: <span class="string">'Hello Vue.js!'</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用 v-html 指令用于输出 html 代码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue 测试实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.2.2/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	</div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#app'</span>,</div><div class="line">  data: &#123;</div><div class="line">    message: <span class="string">'&lt;h1&gt;测试实例&lt;/h1&gt;'</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>HTML 属性中的值应使用 v-bind 指令</li>
<li>以下实例判断 class1 的值，如果为 true 使用 class1 类的样式，否则不使用该类</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue 测试实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-class">.class1</span>&#123;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#444</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#eee</span>;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.2.2/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"r1"</span>&gt;</span>修改颜色<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"class1"</span> <span class="attr">id</span>=<span class="string">"r1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">"&#123;'class1': class1&#125;"</span>&gt;</span></div><div class="line">    directiva v-bind:class</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	</div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">	el: <span class="string">'#app'</span>,</div><div class="line">  data:&#123;</div><div class="line">  	class1: <span class="literal">false</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>Vue.js 都提供了完全的 JavaScript 表达式支持</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue 测试实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.2.2/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">	&#123;&#123;5+5&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">	&#123;&#123; ok ? 'YES' : 'NO' &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">	&#123;&#123; message.split('').reverse().join('') &#125;&#125;</div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"'list-' + id"</span>&gt;</span>测试实例<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	</div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#app'</span>,</div><div class="line">  data: &#123;</div><div class="line">	ok: <span class="literal">true</span>,</div><div class="line">    message: <span class="string">'RUNOOB'</span>,</div><div class="line">	id : <span class="number">1</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><ul>
<li>指令是带有 v- 前缀的特殊属性</li>
<li>指令用于在表达式的值改变时，将某些行为应用到 DOM 上</li>
</ul>
<p>学习中var http = require(‘http’)<br>var fs = require(‘fs’)<br>var url = require(‘url’)<br>var querystring = require(‘querystring’) //用于解析POST请求</p>
<p>//console.log(Object.keys(http))<br>var port = process.env.PORT || 8888;</p>
<p>var server = http.createServer(function(request, response){</p>
<p>  var temp = url.parse(request.url, true)<br>  var path = temp.pathname<br>  var query = temp.query<br>  var method = request.method</p>
<p>  //从这里开始看，上面不要看<br>  if (method === ‘GET’) {<br>    if(path === ‘/‘){  // 如果用户请求的是 / 路径<br>      var string = fs.readFileSync(‘./index.html’, ‘utf8’)<br>      response.setHeader(‘Content-Type’, ‘text/html;charset=utf-8’)<br>      response.end(string)<br>    }else{<br>      response.statusCode = 404<br>      response.setHeader(‘Content-Type’, ‘text/html;charset=utf-8’)<br>      response.end(‘找不到对应的路径，你需要自行修改 index.js’)<br>    }<br>  }else if (method === “POST”) {<br>    if(path === ‘/‘){  // 如果用户请求的是 / 路径<br>      var payload = “”;</p>
<pre><code>  request.addListener(&quot;data&quot;,function(chunk){
    payload += chunk;
  })

  //POST结束输出结果

  request.addListener(&quot;end&quot;,function(){
    var params = querystring.parse(payload);
    console.log(params)
    response.setHeader(&apos;Content-Type&apos;, &apos;text/html;charset=utf-8&apos;) 
    response.end(&apos;这是POST返回的页面&apos;)
  })

}else{  
  response.statusCode = 404
  response.setHeader(&apos;Content-Type&apos;, &apos;text/html;charset=utf-8&apos;) 
  response.end(&apos;找不到对应的路径，你需要自行修改 index.js&apos;)
}
</code></pre><p>  }<br>  // 代码结束，下面不要看<br>  console.log(method + ‘ ‘ + request.url)<br>})</p>
<p>server.listen(port)<br>console.log(‘监听 ‘ + port + ‘ 成功，请用打开 <a href="http://localhost" target="_blank" rel="external">http://localhost</a>:’ + port)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vue简介&quot;&gt;&lt;a href=&quot;#Vue简介&quot; class=&quot;headerlink&quot; title=&quot;Vue简介&quot;&gt;&lt;/a&gt;Vue简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Vue.js是一套构建用户界面的渐进式框架,遵循MVVM设计模式
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
</feed>
