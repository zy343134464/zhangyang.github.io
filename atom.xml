<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Learning and Doing</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-04T15:46:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动响应式</title>
    <link href="http://yoursite.com/2017/06/04/phone/"/>
    <id>http://yoursite.com/2017/06/04/phone/</id>
    <published>2017-06-04T15:17:50.000Z</published>
    <updated>2017-06-04T15:46:08.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="库" scheme="http://yoursite.com/categories/%E5%BA%93/"/>
    
    
      <category term="flex" scheme="http://yoursite.com/tags/flex/"/>
    
      <category term="响应式" scheme="http://yoursite.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>vue.js</title>
    <link href="http://yoursite.com/2017/05/25/vue/"/>
    <id>http://yoursite.com/2017/05/25/vue/</id>
    <published>2017-05-25T15:16:41.000Z</published>
    <updated>2017-06-04T15:46:04.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="框架" scheme="http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>boostrap基础</title>
    <link href="http://yoursite.com/2017/05/15/boostrap/"/>
    <id>http://yoursite.com/2017/05/15/boostrap/</id>
    <published>2017-05-15T15:16:03.000Z</published>
    <updated>2017-06-04T15:45:50.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="框架" scheme="http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="boostrap" scheme="http://yoursite.com/tags/boostrap/"/>
    
  </entry>
  
  <entry>
    <title>webpack</title>
    <link href="http://yoursite.com/2017/05/07/webpack/"/>
    <id>http://yoursite.com/2017/05/07/webpack/</id>
    <published>2017-05-07T15:14:59.000Z</published>
    <updated>2017-06-04T15:45:46.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>less</title>
    <link href="http://yoursite.com/2017/05/05/less/"/>
    <id>http://yoursite.com/2017/05/05/less/</id>
    <published>2017-05-05T15:14:51.000Z</published>
    <updated>2017-06-04T15:45:42.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="less" scheme="http://yoursite.com/tags/less/"/>
    
  </entry>
  
  <entry>
    <title>css3基础</title>
    <link href="http://yoursite.com/2017/04/30/css3/"/>
    <id>http://yoursite.com/2017/04/30/css3/</id>
    <published>2017-04-30T15:14:44.000Z</published>
    <updated>2017-06-04T15:43:28.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="css3" scheme="http://yoursite.com/categories/css3/"/>
    
    
      <category term="css3" scheme="http://yoursite.com/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>html5基础</title>
    <link href="http://yoursite.com/2017/04/27/html5/"/>
    <id>http://yoursite.com/2017/04/27/html5/</id>
    <published>2017-04-27T15:14:31.000Z</published>
    <updated>2017-06-04T15:43:20.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="html5" scheme="http://yoursite.com/categories/html5/"/>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>node.js、npm、gulp、brower-sync</title>
    <link href="http://yoursite.com/2017/04/25/gulp/"/>
    <id>http://yoursite.com/2017/04/25/gulp/</id>
    <published>2017-04-25T15:13:19.000Z</published>
    <updated>2017-06-04T15:43:10.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
      <category term="brower-sync" scheme="http://yoursite.com/tags/brower-sync/"/>
    
  </entry>
  
  <entry>
    <title>模块化基础</title>
    <link href="http://yoursite.com/2017/04/18/modular/"/>
    <id>http://yoursite.com/2017/04/18/modular/</id>
    <published>2017-04-18T15:14:17.000Z</published>
    <updated>2017-06-04T15:43:06.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="模块化" scheme="http://yoursite.com/categories/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
      <category term="CMD" scheme="http://yoursite.com/tags/CMD/"/>
    
      <category term="AMD" scheme="http://yoursite.com/tags/AMD/"/>
    
      <category term="Common.js" scheme="http://yoursite.com/tags/Common-js/"/>
    
      <category term="requer.js" scheme="http://yoursite.com/tags/requer-js/"/>
    
      <category term="r.js" scheme="http://yoursite.com/tags/r-js/"/>
    
  </entry>
  
  <entry>
    <title>HTTP基础</title>
    <link href="http://yoursite.com/2017/04/15/http/"/>
    <id>http://yoursite.com/2017/04/15/http/</id>
    <published>2017-04-15T15:13:10.000Z</published>
    <updated>2017-06-04T15:42:52.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="HTTP" scheme="http://yoursite.com/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>jQuery造轮子</title>
    <link href="http://yoursite.com/2017/04/13/jq/"/>
    <id>http://yoursite.com/2017/04/13/jq/</id>
    <published>2017-04-13T15:16:25.000Z</published>
    <updated>2017-06-04T15:44:56.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="库" scheme="http://yoursite.com/categories/%E5%BA%93/"/>
    
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>原生js造轮子</title>
    <link href="http://yoursite.com/2017/04/10/js/"/>
    <id>http://yoursite.com/2017/04/10/js/</id>
    <published>2017-04-10T15:16:10.000Z</published>
    <updated>2017-06-04T15:44:46.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="js实战" scheme="http://yoursite.com/categories/js%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>面向对象基础</title>
    <link href="http://yoursite.com/2017/04/08/object/"/>
    <id>http://yoursite.com/2017/04/08/object/</id>
    <published>2017-04-08T15:13:02.000Z</published>
    <updated>2017-06-04T15:44:40.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>后端基础</title>
    <link href="http://yoursite.com/2017/04/05/node/"/>
    <id>http://yoursite.com/2017/04/05/node/</id>
    <published>2017-04-05T15:12:44.000Z</published>
    <updated>2017-06-04T15:42:38.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="xmapp" scheme="http://yoursite.com/tags/xmapp/"/>
    
  </entry>
  
  <entry>
    <title>jQuery基础</title>
    <link href="http://yoursite.com/2017/03/30/jquery/"/>
    <id>http://yoursite.com/2017/03/30/jquery/</id>
    <published>2017-03-29T18:02:02.000Z</published>
    <updated>2017-06-04T15:41:18.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="库" scheme="http://yoursite.com/categories/%E5%BA%93/"/>
    
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础</title>
    <link href="http://yoursite.com/2017/03/25/javascript/"/>
    <id>http://yoursite.com/2017/03/25/javascript/</id>
    <published>2017-03-24T18:01:41.000Z</published>
    <updated>2017-06-07T17:14:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript基础概念"><a href="#JavaScript基础概念" class="headerlink" title="JavaScript基础概念"></a>JavaScript基础概念</h1><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul>
<li>指变量、函数、属性的名字，或者函数的参数</li>
</ul>
<h3 id="标识符的书写有几个特征"><a href="#标识符的书写有几个特征" class="headerlink" title="标识符的书写有几个特征"></a>标识符的书写有几个特征</h3><ul>
<li>区分大小写</li>
<li>第一个字符必须是字母、下划线（_）、或者是$</li>
<li>后面的可以是字母、数字、下划线、$<a id="more"></a>
</li>
</ul>
<h2 id="命名规约"><a href="#命名规约" class="headerlink" title="命名规约"></a>命名规约</h2><ul>
<li>使用是实际意义的单词</li>
<li>变量使用驼峰规则，第一个单词首字母小写，后面单词首字母大写</li>
<li>变量使用名词，方法函数使用动词开头，常量全部用大写字母，函数创建对象首字母大写</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var firstSecond;</div><div class="line">var myCar;</div><div class="line">var hasId;</div><div class="line">var PI;</div><div class="line">var MAX_COUNT;</div><div class="line">function getAge()&#123;&#125;</div><div class="line">function Person()&#123;&#125;</div></pre></td></tr></table></figure>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul>
<li>JavaScript中变量是用来保存值的占位符,定义变量的时候要使用var运算符,后面跟一个作为名称的标识符即可</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var message;</div></pre></td></tr></table></figure>
<h2 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h2><ul>
<li>在一些编译语言（C、Java、C#）等变量的类型是固定的，在声明变量的时候就要标识其类型，在程序执行前编译阶段变量的类型就确定了，而且不能改变，称之为强类型</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int a = 2;</div><div class="line">string b = "hello";</div></pre></td></tr></table></figure>
<ul>
<li>解释型语言（PHP、JavaScript）等变量的类型是松散的，一个变量可以用来保存任何类型的数据，变量的类型不是由声明时决定（声明的时候只是用了var运算符），而是在程序执行阶段由其值的类型决定，随着程序运行其值类型改变，变量类型也会发生改变</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var message = 1; //message 类型就是数字</div><div class="line">message = "hello world!"; //message 类型变为字符串</div></pre></td></tr></table></figure>
<h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><ul>
<li>语句（statement）是为了完成某种任务而进行的操作，比如下面就是一行赋值语句</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a = 1 + 2;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>这条语句先用var运算符，声明了变量a，然后将 1+2 的运算结果赋值给变量a</li>
</ul>
</blockquote>
<ul>
<li>JavaScript中语句以;结束，一行可以包含多条语句，如果省略分号不会产生语法错误，解释器会自动判断语句结束</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var sum = 1 + 2</div><div class="line">var diff = 3 - 4;</div></pre></td></tr></table></figure>
<h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><ul>
<li>一个为了得到返回值的计算式(凡是JavaScript语言中预期为值的地方，都可以使用表达式)</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1+3</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>语句和表达式的区别在于，前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值</li>
</ul>
</blockquote>
<h3 id="表达式的几种形式"><a href="#表达式的几种形式" class="headerlink" title="表达式的几种形式"></a>表达式的几种形式</h3><h4 id="原始表达式"><a href="#原始表达式" class="headerlink" title="原始表达式"></a>原始表达式</h4><ul>
<li>常量、变量、保留字</li>
</ul>
<h4 id="对象、数组初始化表达式"><a href="#对象、数组初始化表达式" class="headerlink" title="对象、数组初始化表达式"></a>对象、数组初始化表达式</h4><ul>
<li>var obj = {a:1,b:2};</li>
<li>var a =[1,2,3];</li>
</ul>
<h4 id="函数定义表达式"><a href="#函数定义表达式" class="headerlink" title="函数定义表达式"></a>函数定义表达式</h4><ul>
<li>var fn = function(){}</li>
</ul>
<h4 id="属性访问表达式"><a href="#属性访问表达式" class="headerlink" title="属性访问表达式"></a>属性访问表达式</h4><ul>
<li>Math.abs</li>
</ul>
<h4 id="调用表达式"><a href="#调用表达式" class="headerlink" title="调用表达式"></a>调用表达式</h4><ul>
<li>alert(‘hello’)</li>
</ul>
<h4 id="对象创建表达式"><a href="#对象创建表达式" class="headerlink" title="对象创建表达式"></a>对象创建表达式</h4><ul>
<li>new object()</li>
</ul>
<blockquote>
<ul>
<li>变量名也是表达式,因为计算出的结果就是赋值给变量的值</li>
</ul>
</blockquote>
<h2 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h2><ul>
<li>JavaScript引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a = 2;</div></pre></td></tr></table></figure>
<ul>
<li>实际上执行过程是解释器在未执行的时候先解析出变量声明，然后给他初始值undefined，然后才逐句执行程序</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var a;</div><div class="line">a = 2;</div></pre></td></tr></table></figure>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li>通过注释功能让js引擎忽略部分语句，用来解释我们的部分语句</li>
<li>两种注释：一种是单行注释，用//起头;另一种是多行注释，放在/<em> 和 </em>/之间</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//为变量赋值</div><div class="line">var a = 1; //赋值成功</div><div class="line"></div><div class="line">/*</div><div class="line">	下面定义个函数</div><div class="line">	至于什么是函数</div><div class="line">	且听下回分解</div><div class="line">*/</div><div class="line"></div><div class="line">function getName(id)&#123;</div><div class="line">	return 'Byron';</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="关键字和保留字"><a href="#关键字和保留字" class="headerlink" title="关键字和保留字"></a>关键字和保留字</h2><ul>
<li>关键字是JavaScript引擎会用到的一些字，我们标识符不能再使用</li>
</ul>
<blockquote>
<ul>
<li>break\case\catch\continue\default\delete\do\else\finally\for\function\if\in\instanceof\new\return\switch\this\throw\try\typeof\var\void\while\with</li>
</ul>
</blockquote>
<ul>
<li>js还规定了一些不能用作标识符的保留字，这些字符没有什么意义，但是未来会用到</li>
</ul>
<blockquote>
<ul>
<li>abstract\boolean\byte\char\class\const\debugger\double\enum\export\extends\final\float\goto\implements\import\int\interface\long\native\package\private\protected\public\short\static\super\synchronized\throws\transient\volatile</li>
</ul>
</blockquote>
<hr>
<h1 id="JavaScript语法"><a href="#JavaScript语法" class="headerlink" title="JavaScript语法"></a>JavaScript语法</h1><h2 id="CSS和JS放置顺序"><a href="#CSS和JS放置顺序" class="headerlink" title="CSS和JS放置顺序"></a>CSS和JS放置顺序</h2><ul>
<li>浏览器渲染机制一种是等全部加载后再一起渲染(IE、Chrome),另一种是边加载边渲染(Firefox)</li>
<li>常用方法:根据不同浏览器渲染机制不同一般选用折中的方法来解决即CSS一般用style标签放在<head>的末尾,而JS放置在</head><body>末尾</body></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"index.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">		body&#123;</div><div class="line">			background: red;</div><div class="line">		&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span>	</div><div class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">	    </div><div class="line">	    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">	        alert(1);</div><div class="line">	    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>CSS放置在head,浏览器会先读取CSS的样式,当读到<body>里面的内容时候,读一个添加一个样式;如果CSS放在后面,对于IE、Chorme浏览器,可能出现白屏问题;对于Firefox浏览器,可能会出现无样式内容闪烁</body></li>
<li>JS放置在后面,JS加载的过程中,其它HTML、CSS等读取会停下来,等待JS加载完后在读取后面的内容,JS阻塞了后面内容的呈现以及后面组件的加载;故采取HTML和CSS先静态页面出来,再读取JS,让页面动起来</li>
</ul>
</blockquote>
<h2 id="白屏和FOUC"><a href="#白屏和FOUC" class="headerlink" title="白屏和FOUC"></a>白屏和FOUC</h2><h3 id="白屏"><a href="#白屏" class="headerlink" title="白屏"></a>白屏</h3><ul>
<li>网页无任何内容样式呈白色背景的现象</li>
</ul>
<h4 id="出现白屏的情况"><a href="#出现白屏的情况" class="headerlink" title="出现白屏的情况"></a>出现白屏的情况</h4><ul>
<li>对于IE、Chrome,CSS样式放在底部,页面出现白屏而不是内容逐步展现</li>
<li>@import标签,即使CSS放入link,并且放在头部也会出现白屏(直接link放在顶部代替@import)</li>
<li>对于CSS加载可以并发加载,而加载JS是会禁用并发,所以JS放在顶部也会导致白屏</li>
</ul>
<h3 id="FOUC-无样式内容闪烁"><a href="#FOUC-无样式内容闪烁" class="headerlink" title="FOUC(无样式内容闪烁)"></a>FOUC(无样式内容闪烁)</h3><ul>
<li>页面只有HTML结构无样式的现象</li>
</ul>
<h4 id="出现FOUC的情况"><a href="#出现FOUC的情况" class="headerlink" title="出现FOUC的情况"></a>出现FOUC的情况</h4><ul>
<li>对于Firefox,CSS样式放在底部,浏览器逐步呈现无样式的内容,所以用户看到的页面就是无样式内容闪烁</li>
</ul>
<blockquote>
<ul>
<li>白屏和FOUC出现的原因是因为两种浏览器的渲染机制不同造成的,所以解决办法就是将CSS放在顶部,这样不管浏览器渲染机制如何,最先得到CSS样式一般就不会出现这两种情况</li>
</ul>
</blockquote>
<h2 id="async和defer的作用"><a href="#async和defer的作用" class="headerlink" title="async和defer的作用"></a>async和defer的作用</h2><ul>
<li>默认情况下,读到script标签会立即加载并执行脚本,阻塞后面的内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="async"><a href="#async" class="headerlink" title="async"></a>async</h3><ul>
<li>js加上async后,这条js不会阻塞后面的内容,两者并行执行,并且这条js加载完成后会马上执行</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h3><ul>
<li>js加上defer后,这条js不会阻塞后面的内容,两者并行执行,但这条js是被加载,执行要等到所有元素解析完成之后</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ul>
<li>async不保证js的执行顺序,谁先加载完就谁先执行</li>
<li>defer保证了js的执行顺序,加载完了都不许执行,等所有元素解析完了,js再一条一条执行</li>
</ul>
<h2 id="网页的渲染机制"><a href="#网页的渲染机制" class="headerlink" title="网页的渲染机制"></a>网页的渲染机制</h2><ul>
<li>浏览器读取HTML,构建DOM树</li>
<li>浏览器读取CSS,构建CSSOM树</li>
<li>浏览器将DOM树和CSSOM树,组合成渲染树 (render tree)</li>
<li>在渲染树的基础上进行布局，计算每个节点的几何结构</li>
<li>浏览器把每个节点绘制到屏幕上</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/js-1.png" alt="js-1.png"></p>
<h3 id="不同的浏览器，呈现机制不一样"><a href="#不同的浏览器，呈现机制不一样" class="headerlink" title="不同的浏览器，呈现机制不一样"></a>不同的浏览器，呈现机制不一样</h3><h4 id="IE和chrome"><a href="#IE和chrome" class="headerlink" title="IE和chrome"></a>IE和chrome</h4><ul>
<li>浏览器会把所有的HTML内容都添加上CSS样式后，再呈现出来，内容过多样式加载过慢会出现白屏问题</li>
</ul>
<h4 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h4><ul>
<li>浏览器会渲染一句呈现一句</li>
<li>如果CSS放在头部，就会页面一点一点呈现</li>
<li>如果CSS放在尾部，就会出现无样式内容闪烁</li>
</ul>
<h2 id="JavaScript的数据类型-5-1种"><a href="#JavaScript的数据类型-5-1种" class="headerlink" title="JavaScript的数据类型(5+1种)"></a>JavaScript的数据类型(5+1种)</h2><ul>
<li>数值（number）：整数和小数（比如1和3.14）</li>
<li>字符串（string）：字符组成的文本（比如”Hello World”）</li>
<li>布尔值（boolean）：true（真）和false（假）两个特定值</li>
<li>undefined：表示“未定义”或不存在，即此处目前没有任何值</li>
<li>null：表示空缺，即此处应该有一个值，但目前为空</li>
<li>对象（object）：各种值组成的集合</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">var num = 100;</div><div class="line">var str = 'nihao';</div><div class="line">var isOk = true ;</div><div class="line">var hello;  //undefined</div><div class="line">var empty = null; </div><div class="line">var person = &#123;</div><div class="line">  name: 'xiaoming',</div><div class="line">  age: 26</div><div class="line">&#125;</div><div class="line">var arr = [1, 2, 3];</div><div class="line">var sayName = function()&#123;</div><div class="line">  console.log('my name is xiaoming')</div><div class="line">&#125;</div><div class="line">var reg = /hello/;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>数值、字符串、布尔值称为原始类型的值,最小单元;对象称为复杂类型的值,是多个原始类型的集合</li>
<li>undefined和null是两个特殊值</li>
<li>对象分狭义的对象(object)、数组(array)、函数(function)等等</li>
</ul>
</blockquote>
<h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h3><ul>
<li>布尔值代表“真”和“假”两个状态。“真”用关键字true表示，“假”用关键字false表示。布尔值只有这两个值</li>
</ul>
<h4 id="下列运算符会返回布尔值"><a href="#下列运算符会返回布尔值" class="headerlink" title="下列运算符会返回布尔值"></a>下列运算符会返回布尔值</h4><ul>
<li>两元逻辑运算符： &amp;&amp; (And)，|| (Or)</li>
<li>前置逻辑运算符： ! (Not)</li>
<li>相等运算符：===，!==，==，!=</li>
<li>比较运算符：&gt;，&gt;=，&lt;，&lt;=</li>
</ul>
<h4 id="如果JavaScript预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为false，其他值都视为true"><a href="#如果JavaScript预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为false，其他值都视为true" class="headerlink" title="如果JavaScript预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为false，其他值都视为true"></a>如果JavaScript预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为false，其他值都视为true</h4><ul>
<li>undefined</li>
<li>null</li>
<li>false</li>
<li>0</li>
<li>NaN</li>
<li>“”（空字符串）</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if ('') &#123;</div><div class="line">  console.log(true);</div><div class="line">&#125;</div><div class="line">// 由于空字符串是false,所以没有任何输出</div></pre></td></tr></table></figure>
<h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><ul>
<li>JavaScript的数字类型和其它语言有所不同，没有整型和浮点数的区别，统一都是Number类型，可以表示十进制、八进制、十六进制</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = 10; //十进制</div><div class="line">var b = 073; //八进制</div><div class="line">vat c = 0xf3; //十六进制</div></pre></td></tr></table></figure>
<h4 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h4><ul>
<li>浮点数是指数字包含小数点，小数点后至少有一位数字(没有或者是0会转为整数)，前面可以没有</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var a = 0.27;</div><div class="line">var b = .45;</div></pre></td></tr></table></figure>
<ul>
<li>对于极大或极小的数字可以使用科学计数法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a = 3.1e5; //310000</div></pre></td></tr></table></figure>
<ul>
<li>浮点数最高精度是17位，但是在计算的时候精度不如整数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1 - 0.9; // 0.09999999999999998</div><div class="line">0.1 + 0.2; //0.30000000000000004</div></pre></td></tr></table></figure>
<ul>
<li>Infinity:表示无穷大</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1/0  //Infinity</div></pre></td></tr></table></figure>
<h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><ul>
<li>String是Unicode字符组成的序列，俗称字符串，可以用双引号或者单引号表示，没有区别，匹配即可</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var str = 'hello';</div><div class="line">var str2 = "baidu";</div><div class="line">var str3 = 'hello "xiaoming" ';</div></pre></td></tr></table></figure>
<h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><ul>
<li>对象，就是一种无序的数据集合，由若干个“键值对”（key-value）构成。key我们称为对象的属性，value可以是任何JavaScript类型，甚至可以是对象</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">  name: 'xiaoming',</div><div class="line">  age: 2</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="对象属性的读取方式"><a href="#对象属性的读取方式" class="headerlink" title="对象属性的读取方式"></a>对象属性的读取方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">- obj.name;</div><div class="line">- obj['name'];</div></pre></td></tr></table></figure>
<ul>
<li>对象的属性key不确定而是一个变量的时候必须使用[]</li>
<li>[]里可以是任何字符串,而.不能</li>
<li>使用.属性可以不加引号,使用[]属性当是常量的时候必须加引号</li>
</ul>
<h2 id="NaN、undefined、null"><a href="#NaN、undefined、null" class="headerlink" title="NaN、undefined、null"></a>NaN、undefined、null</h2><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><ul>
<li>NaN,即非数值(Not a Number)是一个特殊的数值,这个数值用于表示一个本来要返回数值的操作数未返回数值的情况(这样就不会报错了),即出现在将字符串解析成数字出错的场合</li>
<li>NaN和任何值不相等,包括本身</li>
<li>任何涉及NaN的操作都会返回NaN</li>
<li>NaN的数据类型是Number类型</li>
<li>isNaN()函数,确定是否为NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">5-'x'; //NaN</div><div class="line">alert(NaN == NaN); //false</div><div class="line">NaN/10; //NaN</div><div class="line">alert(isNaN(10)); //false(10是一个数值)</div><div class="line">alert(isNaN("10")); //false("10"可以转换为数值10)</div><div class="line">alert(isNaN("blue")); //true(不能被转换为数值)</div></pre></td></tr></table></figure>
<h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><ul>
<li>表示不存在值，就是此处目前不存在任何值,典型用法如下</li>
<li>变量被声明了，但没有赋值时，就等于undefined。</li>
<li>调用函数时，应该提供的参数没有提供，该参数等于undefined。</li>
<li>对象没有赋值的属性，该属性的值为undefined。</li>
<li>函数没有返回值时，默认返回undefined</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var i;</div><div class="line">i // undefined</div><div class="line"></div><div class="line">function f(x)&#123;console.log(x)&#125;</div><div class="line">f() // undefined</div><div class="line"></div><div class="line">var  o = new Object();</div><div class="line">o.p // undefined</div><div class="line"></div><div class="line">var x = f();</div><div class="line">x // undefined</div></pre></td></tr></table></figure>
<h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><ul>
<li>表示空指针，即该处的值现在为空对象,典型用法如下</li>
<li>作为函数的参数，表示该函数的参数是一个没有任何内容的对象</li>
<li>作为对象原型链的终点</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a = null;//表示接收一个空对象</div></pre></td></tr></table></figure>
<h2 id="typeof和instanceof"><a href="#typeof和instanceof" class="headerlink" title="typeof和instanceof"></a>typeof和instanceof</h2><ul>
<li>JavaScript有三种方法，可以确定一个值到底是什么类型,如下</li>
<li>typeof运算符</li>
<li>instanceof运算符</li>
<li>Object.prototype.toString方法</li>
</ul>
<h3 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h3><ul>
<li>typeof运算符可以返回一个值的数据类型</li>
</ul>
<h4 id="原始类型"><a href="#原始类型" class="headerlink" title="原始类型"></a>原始类型</h4><ul>
<li>数值、字符串、布尔值分别返回number、string、boolean</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">typeof 123;// "number"</div><div class="line">typeof '123';// "string"</div><div class="line">typeof false;// "boolean"</div></pre></td></tr></table></figure>
<h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul>
<li>函数返回function</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">function f() &#123;&#125;;</div><div class="line">typeof f;// "function"</div></pre></td></tr></table></figure>
<h4 id="undefined-1"><a href="#undefined-1" class="headerlink" title="undefined"></a>undefined</h4><ul>
<li>undefined返回undefined</li>
<li>typeof可以用来检查一个没有声明的变量，而不报错</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">typeof undefined;// "undefined"</div><div class="line"></div><div class="line">v  // ReferenceError: v is not defined</div><div class="line">typeof v // "undefined"</div><div class="line"></div><div class="line">// 错误的写法</div><div class="line">if (v) &#123; &#125;  // ReferenceError: v is not defined</div><div class="line">// 正确的写法</div><div class="line">if (typeof v === "undefined") &#123; &#125;</div></pre></td></tr></table></figure>
<h4 id="object"><a href="#object" class="headerlink" title="object"></a>object</h4><ul>
<li>除此以外，其他情况都返回object</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">typeof window; // "object"</div><div class="line">typeof &#123;&#125;; // "object"</div><div class="line">typeof [];// "object"</div><div class="line">typeof null; // "object"</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>空数值[]返回值也是object,说明数组本质上也是一种特殊的对象</li>
<li>历史原因造成null返回object,null本质上是一种类似undefined的特殊值</li>
</ul>
</blockquote>
<h3 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h3><ul>
<li>instanceof 是判断变量是否为某个对象的实例，返回值为true或false</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var o = &#123;&#125;;</div><div class="line">var a = [];</div><div class="line">o instanceof Array; // false</div><div class="line">a instanceof Array; // true</div><div class="line">a instanceof Object; // true</div></pre></td></tr></table></figure>
<h2 id="code-如何判断一个变量是否是数字、字符串、布尔、函数"><a href="#code-如何判断一个变量是否是数字、字符串、布尔、函数" class="headerlink" title="code:如何判断一个变量是否是数字、字符串、布尔、函数"></a>code:如何判断一个变量是否是数字、字符串、布尔、函数</h2><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><ul>
<li>typeof 运算符可以判断一个变量是否是数字、字符串、布尔、函数</li>
</ul>
<h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var a=1;</div><div class="line">typeof a;  //"number"</div></pre></td></tr></table></figure>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var b='abc';</div><div class="line">typeof b;  //"string"</div></pre></td></tr></table></figure>
<h4 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var c=false;</div><div class="line">typeof c;  //"boolean"</div></pre></td></tr></table></figure>
<h4 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var d=function()&#123;&#125;;</div><div class="line">typeof d;  //"function"</div></pre></td></tr></table></figure>
<h2 id="code-NaN是什么-有什么特别之处"><a href="#code-NaN是什么-有什么特别之处" class="headerlink" title="code:NaN是什么?有什么特别之处?"></a>code:NaN是什么?有什么特别之处?</h2><h3 id="explain-1"><a href="#explain-1" class="headerlink" title="explain"></a>explain</h3><ul>
<li>NaN是JavaScript的特殊值，表示“非数字”（Not a Number），主要出现在将字符串解析成数字出错的场合</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">5 - 'x';// NaN</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>上面代码运行时，会自动将字符串x转为数值，但是由于x不是数值，所以最后得到结果为·NaN·，表示它是“非数字”（NaN）</li>
</ul>
</blockquote>
<ul>
<li>一些数学函数的运算结果会出现NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Math.acos(2) // NaN</div><div class="line">Math.log(-1) // NaN</div><div class="line">Math.sqrt(-1) // NaN</div><div class="line">0/0           //NaN</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>这些计算在数学上本来就是错误的，所以计算结果返回NaN</li>
</ul>
</blockquote>
<h4 id="判断NaN-的方法"><a href="#判断NaN-的方法" class="headerlink" title="判断NaN 的方法"></a>判断NaN 的方法</h4><ul>
<li>isNaN() ，判断一个数是否为NaN，返回 true 或false，但是只对数值有效，不是数值的参数会先转化成数值，当转化不了的时候就转成了NaN，所有这个方法判断不一定准确</li>
<li>判断NaN更可靠的方法是，利用NaN是JavaScript之中唯一不等于自身的值这个特点，进行判断</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function myIsNaN(value) &#123;</div><div class="line">return value !== value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="code-如何把非数值转化为数值"><a href="#code-如何把非数值转化为数值" class="headerlink" title="code:如何把非数值转化为数值"></a>code:如何把非数值转化为数值</h2><h3 id="explain-2"><a href="#explain-2" class="headerlink" title="explain"></a>explain</h3><ul>
<li>有三个函数可以把非数值转化为数值</li>
<li>Number () 把给定的值转换成数字</li>
<li>parseInt () 把值转换成整数</li>
<li>parseFloat () 把值转换成浮点数</li>
</ul>
<h4 id="Number-1"><a href="#Number-1" class="headerlink" title="Number ()"></a>Number ()</h4><ul>
<li>如果是Boolean值，true 返回 1，false 返回 0</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Number(true)  ;//1</div><div class="line">Number(false) ;//0</div></pre></td></tr></table></figure>
<ul>
<li>如果是数字，就是原样</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Number(3.1415) ;//3.1415</div></pre></td></tr></table></figure>
<ul>
<li>如果是null，返回 0</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Number(null)  //0</div></pre></td></tr></table></figure>
<ul>
<li>如果是undefined，返回NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Number(undefined)   //NaN</div></pre></td></tr></table></figure>
<ul>
<li>如果是字符串，有以下规则</li>
<li><ul>
<li>如果是字符串中只包含数字（包括前面带正号或负号的情况），则将其转化成十进制数值</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Number ('123')    //123</div><div class="line">Number ('+123')   //123 </div><div class="line">Number ('-123')   //-123</div><div class="line">Number ('0110')   //110  前面的0会忽略</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>如果字符串中包含的有效的浮点数，就会转化成对应的浮点数，前面的0会忽略</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Number ('3.1415')    //3.1415</div><div class="line">Number ('03.1415')   //3.1415</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>如果字符串中包含有效的十六进制格式，前面为0x的格式，会自动转化成相同大小的十进制数</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Number ('0x11')      //17</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>如果字符串是空字符串，则返回 0</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Number ('')          //0</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>如果字符串中包含上述格式外的其他字符，则转化成NaN</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x</div><div class="line">Number (x)        //NaN</div><div class="line">// 如果 x 没有用 var 声明过，就会报错。</div></pre></td></tr></table></figure>
<h4 id="parseInt"><a href="#parseInt" class="headerlink" title="parseInt ()"></a>parseInt ()</h4><ul>
<li>parseInt方法用于将 字符串 转为整数。返回值只有两种可能，不是一个十进制整数，就是NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">parseInt ('520')       //520   整数转化成整数</div><div class="line">parseInt ('3.1415')    //3     浮点数转化前面的整数部分</div><div class="line">parseInt ('    11')    //11    前面的空格会忽略</div><div class="line">parseInt ('000011')    //11    前面的0会忽略</div></pre></td></tr></table></figure>
<ul>
<li>如果parseInt的参数不是字符串，则会先转为字符串再转换</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">parseInt(1.23) // 1</div><div class="line">// 等同于</div><div class="line">parseInt('1.23') // 1</div></pre></td></tr></table></figure>
<ul>
<li>字符串转为整数的时候，是一个个字符依次转换，如果遇到不能转为数字的字符，就不再进行下去，返回已经转好的部分</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">parseInt('8a') // 8</div><div class="line">parseInt('12**') // 12</div><div class="line">parseInt('12.34') // 12</div><div class="line">parseInt('15e2') // 15</div><div class="line">parseInt('15px') // 15</div><div class="line">//parseInt的参数都是字符串，结果只返回字符串头部可以转为数字的部分。</div></pre></td></tr></table></figure>
<ul>
<li>如果字符串的第一个字符不能转化为数字（后面跟着数字的正负号除外），返回NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">parseInt('abc')   // NaN</div><div class="line">parseInt('.3')    // NaN</div><div class="line">parseInt('')      // NaN</div><div class="line">parseInt('+')     // NaN</div><div class="line">parseInt('+1')    // 1</div></pre></td></tr></table></figure>
<ul>
<li>parseInt方法还可以接受第二个参数（2到36之间），表示被解析的值的进制，返回该值对应的十进制数。默认情况下，parseInt的第二个参数为10，即默认是十进制转十进制</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">parseInt('1000', 10)    // 1000  以十进制解读（默认）</div><div class="line">parseInt('1000', 2)     // 8    以二进制解读</div><div class="line">parseInt('1000', 6)     // 216   以六进制解读</div><div class="line">parseInt('1000', 8)     // 512   以八进制解读</div><div class="line">parseInt('10', 37) // NaN   进制超出范围，就返回 NaN</div><div class="line">parseInt('10', 1) // NaN  进制超出范围，就返回 NaN</div><div class="line">parseInt('10', 0) // 10</div><div class="line">parseInt('10', null) // 10</div><div class="line">parseInt('10', undefined) // 10  第二个参数是0、null、undefined 则直接忽略</div></pre></td></tr></table></figure>
<h4 id="parseFloat"><a href="#parseFloat" class="headerlink" title="parseFloat ()"></a>parseFloat ()</h4><ul>
<li>parseFloat用于将一个字符串转为浮点数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">parseFloat('3.14')         // 3.14  浮点数转浮点数</div><div class="line">parseFloat('314e-2')       // 3.14  </div><div class="line">parseFloat('0.0314E+2')    // 3.14  科学计数法转换</div><div class="line">parseFloat ('3.14abc')     // 3.14  转换前面的数值部分</div><div class="line">parseFloat ('    3.14')    // 3.14</div><div class="line">parseFloat ('00003.14')    // 3.14  前面的 0 和空格忽略</div></pre></td></tr></table></figure>
<ul>
<li>如果第一个字符不能转化成浮点数，就返回NaN</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">parseFloat([])     // NaN  空数组返回 NaN</div><div class="line">parseFloat('FF2')  // NaN  第一个字符不能转化浮点数</div><div class="line">parseFloat('')     // NaN  空字符串转化为 NaN</div></pre></td></tr></table></figure>
<h4 id="parseFloat-和-Number-的区别"><a href="#parseFloat-和-Number-的区别" class="headerlink" title="parseFloat () 和 Number () 的区别"></a>parseFloat () 和 Number () 的区别</h4><ul>
<li>一般Number()比较复杂,所以建议使用parseFloat ()</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">parseFloat(true)       // NaN</div><div class="line">Number(true)           // 1</div><div class="line"></div><div class="line">parseFloat(null)       // NaN</div><div class="line">Number(null)           // 0</div><div class="line"></div><div class="line">parseFloat('')         // NaN</div><div class="line">Number('')             // 0</div><div class="line"></div><div class="line">parseFloat('123.45#')  // 123.45</div><div class="line">Number('123.45#')      // NaN</div></pre></td></tr></table></figure>
<h2 id="code-JS中-、-、-的区别"><a href="#code-JS中-、-、-的区别" class="headerlink" title="code:JS中=、==、===的区别"></a>code:JS中=、==、===的区别</h2><h3 id="explain-3"><a href="#explain-3" class="headerlink" title="explain"></a>explain</h3><ul>
<li>JS中的=、==、===是不同的</li>
</ul>
<h4 id="“-”表示赋值"><a href="#“-”表示赋值" class="headerlink" title="“=”表示赋值"></a>“=”表示赋值</h4><ul>
<li>把后面的值赋给前面</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var a=1  // 赋值</div></pre></td></tr></table></figure>
<h4 id="“-”相等运算符"><a href="#“-”相等运算符" class="headerlink" title="“==”相等运算符"></a>“==”相等运算符</h4><ul>
<li><p>宽松的比较两个数据，如果两个数据类型相同，就直接比较，如果两个数据类型不同，则会先转化数据类型相同，再比较</p>
</li>
<li><ul>
<li>原始类型间的比较</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">// 原始类型的数据会转换成数值类型再比较</div><div class="line"></div><div class="line">1 == true // true</div><div class="line">// 等同于 1 === 1</div><div class="line"></div><div class="line">0 == false // true</div><div class="line">// 等同于 0 === 0</div><div class="line"></div><div class="line">2 == true // false</div><div class="line">// 等同于 2 === 1</div><div class="line"></div><div class="line">2 == false // false</div><div class="line">// 等同于 2 === 0</div><div class="line"></div><div class="line">'true' == true // false</div><div class="line">// 等同于 Number('true') === Number(true)</div><div class="line">// 等同于 NaN === 1</div><div class="line"></div><div class="line">'' == 0 // true</div><div class="line">// 等同于 Number('') === 0</div><div class="line">// 等同于 0 === 0</div><div class="line"></div><div class="line">'' == false  // true</div><div class="line">// 等同于 Number('') === Number(false)</div><div class="line">// 等同于 0 === 0</div><div class="line"></div><div class="line">'1' == true  // true</div><div class="line">// 等同于 Number('1') === Number(true)</div><div class="line">// 等同于 1 === 1</div><div class="line"></div><div class="line">'\n  123  \t' == 123 // true</div><div class="line">// 因为字符串转为数字时，省略前置和后置的空格</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>对象与原始类型比较</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// 对象与原始类型的值比较时，对象转化成原始类型的值，再进行比较。</div><div class="line"></div><div class="line">[1] == 1 // true</div><div class="line">// 等同于 Number([1]) == 1</div><div class="line"></div><div class="line">[1] == '1' // true</div><div class="line">// 等同于 String([1]) == Number('1')</div><div class="line"></div><div class="line">[1] == true // true</div><div class="line">// 等同于 Number([1]) == Number(true)</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>undefined 和 null</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">false == null // false</div><div class="line">false == undefined // false</div><div class="line"></div><div class="line">0 == null // false</div><div class="line">0 == undefined // false</div><div class="line">// undefined 和 null与其他类型的值比较时，结果都为false</div><div class="line"></div><div class="line">undefined == null // true</div><div class="line">undefined 和 null 比较时，结果为 true</div></pre></td></tr></table></figure>
<h4 id="“-”-严格相等运算符"><a href="#“-”-严格相等运算符" class="headerlink" title="“===” 严格相等运算符"></a>“===” 严格相等运算符</h4><ul>
<li><p>严格相等运算符（===）比较它们是否为“同一个值”。如果两个值不是同一类型，严格相等运算符（===）直接返回false</p>
</li>
<li><ul>
<li>不同类型的值</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1 === "1" // false</div><div class="line">true === "true" // false</div><div class="line">// 不同类型的值直接返回 false</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>同一类的原始类型值</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1 === 0x1 // true</div><div class="line">// 十进制和十六进制的 1 ，是相同的值，同一类型</div></pre></td></tr></table></figure>
<ul>
<li><ul>
<li>同一类的复合类型值</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">两个复合类型（对象、数组、函数）的数据比较时，不是比较它们的值是否相等，而是比较它们是否指向同一个对象。</div><div class="line">&#123;&#125; === &#123;&#125; // false</div><div class="line">[] === [] // false</div><div class="line">(function ()&#123;&#125; === function ()&#123;&#125;) // false</div><div class="line">// 严格相等运算比较的是，它们是否引用同一个内存地址</div></pre></td></tr></table></figure>
<h2 id="code-break与continue有什么区别"><a href="#code-break与continue有什么区别" class="headerlink" title="code:break与continue有什么区别"></a>code:break与continue有什么区别</h2><h3 id="explain-4"><a href="#explain-4" class="headerlink" title="explain"></a>explain</h3><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><ul>
<li>break用于强制退出本次循环</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var num = 0;</div><div class="line"></div><div class="line">for(var i = 1;i <span class="tag">&lt; <span class="attr">10</span>;<span class="attr">i</span>++)&#123;</span></div><div class="line">	<span class="attr">if</span>(<span class="attr">i</span> % <span class="attr">5</span> == <span class="string">0)&#123;</span></div><div class="line">		<span class="attr">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="attr">num</span>++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="attr">alert</span>(<span class="attr">num</span>); //<span class="attr">4</span></div></pre></td></tr></table></figure>
<h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><ul>
<li>continue用于退出本次循环,执行下次循环</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var num = 0;</div><div class="line"></div><div class="line">for(var i = 1;i <span class="tag">&lt; <span class="attr">10</span>;<span class="attr">i</span>++)&#123;</span></div><div class="line">	<span class="attr">if</span>(<span class="attr">i</span> % <span class="attr">5</span> == <span class="string">0)&#123;</span></div><div class="line">		<span class="attr">continue</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="attr">num</span>++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="attr">alert</span>(<span class="attr">num</span>); //<span class="attr">8</span></div></pre></td></tr></table></figure>
<h2 id="code-void-0-和-undefined在使用场景上有什么区别"><a href="#code-void-0-和-undefined在使用场景上有什么区别" class="headerlink" title="code:void 0 和 undefined在使用场景上有什么区别"></a>code:void 0 和 undefined在使用场景上有什么区别</h2><h3 id="explain-5"><a href="#explain-5" class="headerlink" title="explain"></a>explain</h3><ul>
<li>void 0 运算后返回值是 undefined，不可被重写</li>
<li>undefined 在局部作用域中，是可以被重写的，如果要判断一个变量是否和 undefined 相等，可以使用 void 0 来进行比较</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">function f()&#123;</div><div class="line">  var undefined = 100;</div><div class="line">  var str;</div><div class="line">  if(str == undefined)&#123;</div><div class="line">      console.log('相等');</div><div class="line">  &#125;else&#123;</div><div class="line">      console.log('不相等');</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">f(); // 返回不相等，因为undefined 被赋值 100</div><div class="line">function f()&#123;</div><div class="line">  var undefined = 100;</div><div class="line">  var str;</div><div class="line">  if(str == void 0)&#123;</div><div class="line">      console.log('相等');</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">f(); // 返回相等</div></pre></td></tr></table></figure>
<h2 id="code-完成如下代码判断一个变量是否是数字、字符串、布尔、函数"><a href="#code-完成如下代码判断一个变量是否是数字、字符串、布尔、函数" class="headerlink" title="code:完成如下代码判断一个变量是否是数字、字符串、布尔、函数"></a>code:完成如下代码判断一个变量是否是数字、字符串、布尔、函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">function isNumber(el)&#123;</div><div class="line">  // todo...</div><div class="line">&#125;</div><div class="line">function isString(el)&#123;</div><div class="line">  // todo...</div><div class="line">&#125;</div><div class="line">function isBoolean(el)&#123;</div><div class="line">  // todo...</div><div class="line">&#125;</div><div class="line">function isFunction(el)&#123;</div><div class="line">  // todo...</div><div class="line">&#125;</div><div class="line"></div><div class="line">var a = 2,</div><div class="line">    b = "hello world",</div><div class="line">    c = "false";</div><div class="line"></div><div class="line">alert(isNumber(a)); //true</div><div class="line">alert(isString(a)); //false</div><div class="line">alert(isString(b)); //true</div><div class="line">alert(isBoolean(c)); //true</div><div class="line">alert(isFunction(a)); //false</div><div class="line">alert(isFunction(isNumber)); //true</div></pre></td></tr></table></figure>
<h3 id="explain-6"><a href="#explain-6" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line">// 方法一 </div><div class="line">function isNumber(el)&#123;</div><div class="line">  if(typeof el === "number")&#123;</div><div class="line">    return true</div><div class="line">  &#125;else&#123;</div><div class="line">    return false</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">function isString(el)&#123;</div><div class="line">  if(typeof el === "string")&#123;</div><div class="line">    return true</div><div class="line">  &#125;else&#123;</div><div class="line">    return false</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">function isBoolean(el)&#123;</div><div class="line">  if(typeof el === "boolean")&#123;</div><div class="line">    return true</div><div class="line">  &#125;else&#123;</div><div class="line">    return false</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">function isFunction(el)&#123;</div><div class="line">  if(typeof el === "function")&#123;</div><div class="line">    return true</div><div class="line">  &#125;else&#123;</div><div class="line">    return false</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 方法二</div><div class="line"></div><div class="line">function isNumber(el)&#123;</div><div class="line">	return typeof el ==="number";</div><div class="line">&#125;</div><div class="line">function isString(el)&#123;</div><div class="line">  return typeof el ==="string";</div><div class="line">&#125;</div><div class="line">function isBoolean(el)&#123;</div><div class="line">  return typeof el ==="boolean";</div><div class="line">&#125;</div><div class="line">function isFunction(el)&#123;</div><div class="line">  return typeof el ==="function";</div><div class="line">&#125;</div><div class="line"></div><div class="line">var a = 2,</div><div class="line">    b = "hello world",</div><div class="line">    c = false;</div><div class="line"></div><div class="line">alert(isNumber(a)); //true</div><div class="line">alert(isString(a)); //false</div><div class="line">alert(isString(b)); //true</div><div class="line">alert(isBoolean(c)); //true</div><div class="line">alert(isFunction(a)); //false</div><div class="line">alert(isFunction(isNumber)); //true</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="code-以下代码的输出结果是？"><a href="#code-以下代码的输出结果是？" class="headerlink" title="code:以下代码的输出结果是？"></a>code:以下代码的输出结果是？</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">console.log(1+1);</div><div class="line">console.log("2"+"4");</div><div class="line">console.log(2+"4");</div><div class="line">console.log(+new Date());</div><div class="line">console.log(+"4");</div></pre></td></tr></table></figure>
<h3 id="explain-7"><a href="#explain-7" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">console.log(1+1); //2 加法运算</div><div class="line">console.log("2"+"4"); //24 字符串的拼接</div><div class="line">console.log(2+"4");	//24 先转换数字为字符串,在拼接</div><div class="line">console.log(+new Date()); //1496808358426 获得从1970.1.1开始到当前日期的毫秒数</div><div class="line">console.log(+"4"); //4 有运算符,会将字符串转换为数字</div></pre></td></tr></table></figure>
<ul>
<li>运算符通常会对操作数进行类型的转换,称隐式类型转换</li>
</ul>
<h2 id="code-以下代码的输出结果是"><a href="#code-以下代码的输出结果是" class="headerlink" title="code: 以下代码的输出结果是?"></a>code: 以下代码的输出结果是?</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">a+++a;</div><div class="line">typeof a+2;</div></pre></td></tr></table></figure>
<h3 id="explain-8"><a href="#explain-8" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">a+++a; //3 等同于(a++)+a,前面(a++)为1,后面a为2,++优先级高于+</div><div class="line">typeof a+2; //"number2" 等同于(typeof a)+2,前面为"number",后面为2,typeof优先级高于+</div></pre></td></tr></table></figure>
<h2 id="code-以下代码的输出结果是-1"><a href="#code-以下代码的输出结果是-1" class="headerlink" title="code: 以下代码的输出结果是?"></a>code: 以下代码的输出结果是?</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">var b = 3;</div><div class="line">console.log(a+++b);</div></pre></td></tr></table></figure>
<h3 id="explain-9"><a href="#explain-9" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">var b = 3;</div><div class="line">console.log(a+++b); //4 括号内等同于(a++)+b,前面的（a++）为1,a++是先用a的值,用完后再给a加1</div></pre></td></tr></table></figure>
<h2 id="code-遍历数组-把数组里的打印数组每一项的平方"><a href="#code-遍历数组-把数组里的打印数组每一项的平方" class="headerlink" title="code:遍历数组,把数组里的打印数组每一项的平方"></a>code:遍历数组,把数组里的打印数组每一项的平方</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [3,4,5];</div><div class="line">// todo...</div><div class="line">// 输出9,16,25</div></pre></td></tr></table></figure>
<h3 id="explain-10"><a href="#explain-10" class="headerlink" title="explain"></a>explain</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">// 方法一</div><div class="line">var arr = [3,4,5];</div><div class="line">for(var i=0;i&lt;arr.length;i++)&#123;</div><div class="line">  array=Math.pow(arr[i],2);</div><div class="line">  console.log(array);</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 方法二</div><div class="line">var i =0;</div><div class="line">while(i&lt;arr.length)&#123;</div><div class="line">	array=Math.pow(arr[i],2);</div><div class="line">  	console.log(array);</div><div class="line">  	i++;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//方法三</div><div class="line">do&#123;</div><div class="line">	array=Math.pow(arr[i],2);</div><div class="line">  	console.log(array);</div><div class="line">  	i++;</div><div class="line">&#125;while(i&lt;arr.length)</div></pre></td></tr></table></figure>
<h2 id="code-遍历JSON-打印里面的值"><a href="#code-遍历JSON-打印里面的值" class="headerlink" title="code:遍历JSON,打印里面的值"></a>code:遍历JSON,打印里面的值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">	name: "xiaoming",</div><div class="line">	sex: "male",</div><div class="line">	age: 28</div><div class="line">&#125;</div><div class="line">//todo...</div><div class="line">//输出name:xiaoming,sex:male,age:28</div></pre></td></tr></table></figure>
<h3 id="explain-11"><a href="#explain-11" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">	name: "xiaoming",</div><div class="line">	sex: "male",</div><div class="line">	age: 28</div><div class="line">&#125;</div><div class="line"></div><div class="line">for(var key in obj)&#123;</div><div class="line">	console.log(key+':'+obj[key]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="code-下面代码的输出是什么"><a href="#code-下面代码的输出是什么" class="headerlink" title="code:下面代码的输出是什么?"></a>code:下面代码的输出是什么?</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">console.log(a);</div><div class="line">var a =1;</div><div class="line">console.log(a);</div><div class="line">console.log(b);</div></pre></td></tr></table></figure>
<h3 id="explain-12"><a href="#explain-12" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">console.log(a);</div><div class="line">var a =1;</div><div class="line">console.log(a);</div><div class="line">console.log(b);</div><div class="line"></div><div class="line">//相当于</div><div class="line">var a;</div><div class="line">console.log(a); //undefined</div><div class="line">a=1;</div><div class="line">console.log(a); //1</div><div class="line">console.log(b); //报错</div></pre></td></tr></table></figure>
<ul>
<li>js存在变量提升机制,使得a声明提升至最前面,此时a没有赋值所以是undefined;到a=1时,给a赋值1，输出1；最后b未声明所以控制台报错</li>
</ul>
<h2 id="code-如下代码输出什么"><a href="#code-如下代码输出什么" class="headerlink" title="code:如下代码输出什么"></a>code:如下代码输出什么</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var a = 1, b = 2, c = 3;</div><div class="line">var val = typeof a + b ||  c &gt;0 ;   </div><div class="line">console.log(val);</div><div class="line"></div><div class="line">var d = 5;</div><div class="line">var data = d ==5 &amp;&amp; console.log('bb') ; </div><div class="line">console.log(data);</div><div class="line"></div><div class="line">var data2 = d = 0 || console.log('haha');</div><div class="line">console.log(data2);</div><div class="line"></div><div class="line">var x = !!"Hello" + (!"world", !!"from here!!");  </div><div class="line">console.log(x) ;</div></pre></td></tr></table></figure>
<h3 id="explain-13"><a href="#explain-13" class="headerlink" title="explain"></a>explain</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">var a = 1, b = 2, c = 3;</div><div class="line">var val = typeof a + b ||  c &gt;0    //  优先级顺序typeof   +  &gt;   ||</div><div class="line">console.log(val)    //  'number2' || true</div><div class="line">    // 输出‘number2’</div><div class="line"></div><div class="line">var d = 5;</div><div class="line">var data = d ==5 &amp;&amp; console.log('bb')  </div><div class="line">    // console.log('bb') 输出了字符串bb，但它的返回值是undefined</div><div class="line">console.log(data)  // data = true &amp;&amp; undefined</div><div class="line">    //输出 undefined</div><div class="line"></div><div class="line">var data2 = d = 0 || console.log('haha')  </div><div class="line">    // console.log('haha') 输出了字符串haha，但它的返回值是undefined</div><div class="line">console.log(data2)  // data2 = d = 0 || undefined</div><div class="line">    //输出 undefined</div><div class="line"></div><div class="line">var x = !!"Hello" + (!"world", !!"from here!!");  </div><div class="line">    // true+(false, true)</div><div class="line">console.log(x)  //  console.log (true+true)</div><div class="line">    // 输出 2</div></pre></td></tr></table></figure>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul>
<li>运算符是处理数据的基本方法，用来从现有数据得到新的数据</li>
</ul>
<h3 id="加法运算符"><a href="#加法运算符" class="headerlink" title="加法运算符"></a>加法运算符</h3><ul>
<li>加法运算符（+）是最常见的运算符之一，但是使用规则却相对复杂。因为在JavaScript语言里面，这个运算符可以完成两种运算，既可以处理算术的加法，也可以用作字符串连接，它们都写成+</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 加法</div><div class="line">1 + 1 // 2</div><div class="line">true + true // 2</div><div class="line">1 + true // 2</div><div class="line"></div><div class="line">// 字符串连接</div><div class="line">'1' + '1' // "11"</div><div class="line">'1.1' + '1.1' // "1.11.1"</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>在两个操作数都是数字的时候，会做加法运算</li>
<li>两个参数都是字符串或在有一个参数是字符串的情况下会把另外一个参数转换为字符串做字符串拼接</li>
<li>在参数有对象的情况下会调用其valueOf或toString</li>
<li>在只有一个字符串参数的时候会尝试将其转换为数字</li>
<li>在只有一个数字参数的时候返回其正数值</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">'1' + &#123;foo: 'bar'&#125; // "1[object Object]"</div><div class="line">'1' + 1 // "11"</div><div class="line">'1' + true // "1true"</div><div class="line">'1' + [1] // "11"</div></pre></td></tr></table></figure>
<h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><ul>
<li>加法运算符（Addition）：x + y</li>
<li>减法运算符（Subtraction）： x - y</li>
<li>乘法运算符（Multiplication）： x * y</li>
<li>除法运算符（Division）：x / y</li>
<li>余数运算符（Remainder）：x % y</li>
<li>自增运算符（Increment）：++x 或者 x++</li>
<li>自减运算符（Decrement）：–x 或者 x–</li>
<li>数值运算符（Convert to number）： +x</li>
<li>负数值运算符（Negate）：-x</li>
</ul>
<h4 id="余数运算符"><a href="#余数运算符" class="headerlink" title="余数运算符"></a>余数运算符</h4><ul>
<li>余数运算符（%）返回前一个运算子被后一个运算子除，所得的余数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">12 % 5 // 2</div></pre></td></tr></table></figure>
<h4 id="自增和自减运算符"><a href="#自增和自减运算符" class="headerlink" title="自增和自减运算符"></a>自增和自减运算符</h4><ul>
<li>自增和自减运算符，是一元运算符，只需要一个运算子。它们的作用是将运算子首先转为数值，然后加上1或者减去1。它们会修改原始变量</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var x = 1;</div><div class="line">++x // 2</div><div class="line">x // 2</div><div class="line"></div><div class="line">--x // 1</div><div class="line">x // 1</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>自增和自减运算符有一个需要注意的地方，就是放在变量之后，会先返回变量操作前的值，再进行自增/自减操作；放在变量之前，会先进行自增/自减操作，再返回变量操作后的值</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var x = 1;</div><div class="line">var y = 1;</div><div class="line"></div><div class="line">x++ // 1</div><div class="line">++y // 2</div><div class="line">上面代码中，x是先返回当前值，然后自增，所以得到1；y是先自增，然后返回新的值，所以得到2</div></pre></td></tr></table></figure>
<h4 id="数值运算符"><a href="#数值运算符" class="headerlink" title="数值运算符"></a>数值运算符</h4><ul>
<li>数值运算符（+）同样使用加号，但是加法运算符是二元运算符（需要两个操作数），它是一元运算符（只需要一个操作数）</li>
<li>数值运算符的作用在于可以将任何值转为数值（与Number函数的作用相同）</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">+true // 1</div><div class="line">+[] // 0</div><div class="line">+&#123;&#125; // NaN</div><div class="line">//上面代码表示，非数值类型的值经过数值运算符以后，都变成了数值（最后一行NaN也是数值）</div></pre></td></tr></table></figure>
<h4 id="负数值运算符"><a href="#负数值运算符" class="headerlink" title="负数值运算符"></a>负数值运算符</h4><ul>
<li>负数值运算符（-），也同样具有将一个值转为数值的功能，只不过得到的值正负相反。连用两个负数值运算符，等同于数值运算符</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = 1;</div><div class="line">-x // -1</div><div class="line">-(-x) // 1</div></pre></td></tr></table></figure>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><ul>
<li>赋值运算符（Assignment Operators）用于给变量赋值。最常见的赋值运算符，当然就是等号（=），表达式x = y表示将y的值赋给x。除此之外，JavaScript还提供其他11个复合的赋值运算符</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">x += y // 等同于 x = x + y</div><div class="line">x -= y // 等同于 x = x - y</div><div class="line">x *= y // 等同于 x = x * y</div><div class="line">x /= y // 等同于 x = x / y</div><div class="line">x %= y // 等同于 x = x % y</div><div class="line">x &gt;&gt;= y // 等同于 x = x &gt;&gt; y</div><div class="line">x &lt;&lt;= y // 等同于 x = x &lt;&lt; y</div><div class="line">x &gt;&gt;&gt;= y // 等同于 x = x &gt;&gt;&gt; y</div><div class="line">x &amp;= y // 等同于 x = x &amp; y</div><div class="line">x |= y // 等同于 x = x | y</div><div class="line">x ^= y // 等同于 x = x ^ y</div><div class="line">这些复合的赋值运算符，都是先进行指定运算，然后将得到值返回给左边的变量</div></pre></td></tr></table></figure>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><ul>
<li>== 相等</li>
<li>=== 严格相等</li>
<li>!= 不相等</li>
<li>!== 严格不相等</li>
<li>&lt; 小于</li>
<li>&lt;= 小于或等于</li>
<li><blockquote>
<p>大于</p>
</blockquote>
</li>
<li><blockquote>
<p>= 大于或等于</p>
</blockquote>
</li>
</ul>
<blockquote>
<ul>
<li>比较运算符用于比较两个值，然后返回一个布尔值，表示是否满足比较条件，JavaScript一共提供了8个比较运算符</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2 &gt; 1 // true</div></pre></td></tr></table></figure>
<h3 id="布尔运算符"><a href="#布尔运算符" class="headerlink" title="布尔运算符"></a>布尔运算符</h3><ul>
<li>取反运算符：!</li>
<li>且运算符：&amp;&amp;</li>
<li>或运算符：||</li>
<li>三元运算符：?:</li>
</ul>
<h4 id="取反运算符（-）"><a href="#取反运算符（-）" class="headerlink" title="取反运算符（!）"></a>取反运算符（!）</h4><ul>
<li>取反运算符形式上是一个感叹号，用于将布尔值变为相反值，即true变成false，false变成true</li>
<li>不管什么类型的值，经过取反运算后，都变成了布尔值</li>
<li>对一个值连续做两次取反运算，等于将其转为对应的布尔值，与Boolean函数的作用相同。这是一种常用的类型转换的写法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">!true // false</div><div class="line">!false // true</div><div class="line"></div><div class="line">!undefined // true</div><div class="line">!null // true</div><div class="line">!0 // true</div><div class="line">!NaN // true</div><div class="line">!"" // true</div><div class="line"></div><div class="line">!54 // false</div><div class="line">!'hello' // false</div><div class="line">![] // false</div><div class="line">!&#123;&#125; // false</div><div class="line"></div><div class="line">!!x</div><div class="line">// 等同于</div><div class="line">Boolean(x)</div></pre></td></tr></table></figure>
<h4 id="且运算符（-amp-amp-）"><a href="#且运算符（-amp-amp-）" class="headerlink" title="且运算符（&amp;&amp;）"></a>且运算符（&amp;&amp;）</h4><ul>
<li>第一个操作数为true并且第二个操作数为true,返回true</li>
<li>且运算符的运算规则是：如果第一个运算子的布尔值为true，则返回第二个运算子的值（注意是值，不是布尔值）；如果第一个运算子的布尔值为false，则直接返回第一个运算子的值，且不再对第二个运算子求值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">'t' &amp;&amp; '' // ""</div><div class="line">'t' &amp;&amp; 'f' // "f"</div><div class="line">'t' &amp;&amp; (1 + 2) // 3</div><div class="line">'' &amp;&amp; 'f' // ""</div><div class="line">'' &amp;&amp; '' // ""</div><div class="line"></div><div class="line">var x = 1;</div><div class="line">(1 - 1) &amp;&amp; ( x += 1) // 0</div><div class="line">x // 1</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>这种跳过第二个运算子的机制，被称为“短路”。有些程序员喜欢用它取代if结构，比如下面是一段if结构的代码，就可以用且运算符改写</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (i) &#123;</div><div class="line">  doSomething();</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 等价于</div><div class="line"></div><div class="line">i &amp;&amp; doSomething();</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>且运算符可以多个连用，这时返回第一个布尔值为false的表达式的值</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">true &amp;&amp; 'foo' &amp;&amp; '' &amp;&amp; 4 &amp;&amp; 'foo' &amp;&amp; true</div><div class="line">// ''</div></pre></td></tr></table></figure>
<h4 id="或运算符（-）"><a href="#或运算符（-）" class="headerlink" title="或运算符（||）"></a>或运算符（||）</h4><ul>
<li>只要一个操作数是true,则返回是true</li>
<li>或运算符（||）的运算规则是：如果第一个运算子的布尔值为true，则返回第一个运算子的值，且不再对第二个运算子求值；如果第一个运算子的布尔值为false，则返回第二个运算子的值。短路规则对这个运算符也适用</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">'t' || '' // "t"</div><div class="line">'t' || 'f' // "t"</div><div class="line">'' || 'f' // "f"</div><div class="line">'' || '' // ""</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>或运算符可以多个连用，这时返回第一个布尔值为true的表达式的值</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">false || 0 || '' || 4 || 'foo' || true</div><div class="line">// 4</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>或运算符常用于为一个变量设置默认值</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function saveText(text) &#123;</div><div class="line">  text = text || '';</div><div class="line">  // ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 或者写成</div><div class="line"></div><div class="line">saveText(this.text || '')</div><div class="line">上面代码表示，如果函数调用时，没有提供参数，则该参数默认设置为空字符串</div></pre></td></tr></table></figure>
<h4 id="三元条件运算符（-）"><a href="#三元条件运算符（-）" class="headerlink" title="三元条件运算符（?:）"></a>三元条件运算符（?:）</h4><ul>
<li>三元条件运算符用问号（?）和冒号（:），分隔三个表达式。如果第一个表达式的布尔值为true，则返回第二个表达式的值，否则返回第三个表达式的值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">'t' ? 'hello' : 'world' // "hello"</div><div class="line">0 ? 'hello' : 'world' // "world"</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>通常来说，三元条件表达式与if…else语句具有同样表达效果，前者可以表达的，后者也能表达。但是两者具有一个重大差别，if…else是语句，没有返回值；三元条件表达式是表达式，具有返回值。所以，在需要返回值的场合，只能使用三元条件表达式，而不能使用if..else</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">console.log(true ? 'T' : 'F');</div><div class="line">上面代码中，console.log方法的参数必须是一个表达式，这时就只能使用三元条件表达式。如果要用if...else语句，就必须改变整个代码写法了</div></pre></td></tr></table></figure>
<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><ul>
<li>或运算（or）：符号为|，表示若两个二进制位都为0，则结果为0，否则为1。</li>
<li>与运算（and）：符号为&amp;，表示若两个二进制位都为1，则结果为1，否则为0。</li>
<li>否运算（not）：符号为~，表示对一个二进制位取反。</li>
<li>异或运算（xor）：符号为^，表示若两个二进制位不相同，则结果为1，否则为0。</li>
<li>左移运算（left shift）：符号为&lt;&lt;</li>
<li>右移运算（right shift）：符号为&gt;&gt;</li>
<li>带符号位的右移运算（zero filled right shift）：符号为&gt;&gt;&gt;</li>
</ul>
<blockquote>
<ul>
<li>这些位运算符直接处理每一个比特位（bit），所以是非常底层的运算，好处是速度极快，缺点是很不直观，许多场合不能使用它们，否则会使代码难以理解和查错</li>
<li>有一点需要特别注意，位运算符只对整数起作用，如果一个运算子不是整数，会自动转为整数后再执行。另外，虽然在JavaScript内部，数值都是以64位浮点数的形式储存，但是做位运算的时候，是以32位带符号的整数进行运算的，并且返回值也是一个32位带符号的整数</li>
</ul>
</blockquote>
<h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><h4 id="void运算符"><a href="#void运算符" class="headerlink" title="void运算符"></a>void运算符</h4><ul>
<li>void运算符的作用是执行一个表达式，然后不返回任何值，或者说返回undefined</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = 3;</div><div class="line">void (x = 5) //undefined</div><div class="line">x // 5</div></pre></td></tr></table></figure>
<h4 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h4><ul>
<li>逗号运算符用于对两个表达式求值，并返回后一个表达式的值</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">'a', 'b' // "b"</div><div class="line"></div><div class="line">var x = 0;</div><div class="line">var y = (x++, 10);</div><div class="line">x // 1</div><div class="line">y // 10</div></pre></td></tr></table></figure>
<h3 id="运算顺序"><a href="#运算顺序" class="headerlink" title="运算顺序"></a>运算顺序</h3><h4 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h4><ul>
<li>JavaScript各种运算符的优先级别（Operator Precedence）是不一样的。优先级高的运算符先执行，优先级低的运算符后执行</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">4 + 5 * 6 // 34</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>上面的代码中，乘法运算符（*）的优先性高于加法运算符（+），所以先执行乘法，再执行加法，相当于下面这样</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 1;</div><div class="line">var arr = [];</div><div class="line"></div><div class="line">var y = arr.length <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span> || <span class="attr">arr</span>[<span class="attr">0</span>] === <span class="string">undefined</span> ? <span class="attr">x</span> <span class="attr">:</span> <span class="attr">arr</span>[<span class="attr">0</span>];</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>上面代码中，变量y的值就很难看出来，因为这个表达式涉及5个运算符，到底谁的优先级最高，实在不容易记住。</li>
<li>根据语言规格，这五个运算符的优先级从高到低依次为：小于等于（&lt;=)、严格相等（===）、或（||）、三元（?:）、等号（=）。因此上面的表达式，实际的运算顺序如下</li>
</ul>
</blockquote>
<h5 id="有几个我们需要注意的地方"><a href="#有几个我们需要注意的地方" class="headerlink" title="有几个我们需要注意的地方"></a>有几个我们需要注意的地方</h5><ul>
<li>typeof的优先级相当的高，比加减乘除神马的都高，所以虽然是操作符，在复杂表达式的时候我们还是习惯加括号</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">typeof 2*3;//NaN</div><div class="line">typeof (2*3);//"number"</div><div class="line">typeof 2+3;// "number3"</div></pre></td></tr></table></figure>
<ul>
<li>++、–是右结合的操作符（优先级最高的几个都是右结合），而且比加减乘除优先级高。同时自增、自减运算符的运算数得是左值（可以放在赋值符号左边的值），而不能是常数</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">4++; //ReferenceError: Invalid left-hand side expression in postfix operation</div><div class="line">var a=0,b=0;</div><div class="line">a+++b;//0</div><div class="line">a;//1，++优先级比+高，所以相当于(a++)+b</div><div class="line">b;//0</div></pre></td></tr></table></figure>
<ul>
<li>赋值运算符的优先级相当的低</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a = b == c; //等同于a = (b==c)</div></pre></td></tr></table></figure>
<ul>
<li>逻辑非!也在优先级队列的前端，比加减乘除高，但逻辑与、逻辑或优先级很低，不如加减乘除</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!2*0; //0, 等价于(!2)*0</div></pre></td></tr></table></figure>
<h2 id="js流程控制语句"><a href="#js流程控制语句" class="headerlink" title="js流程控制语句"></a>js流程控制语句</h2><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript基础概念&quot;&gt;&lt;a href=&quot;#JavaScript基础概念&quot; class=&quot;headerlink&quot; title=&quot;JavaScript基础概念&quot;&gt;&lt;/a&gt;JavaScript基础概念&lt;/h1&gt;&lt;h2 id=&quot;标识符&quot;&gt;&lt;a href=&quot;#标识符&quot; class=&quot;headerlink&quot; title=&quot;标识符&quot;&gt;&lt;/a&gt;标识符&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;指变量、函数、属性的名字，或者函数的参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;标识符的书写有几个特征&quot;&gt;&lt;a href=&quot;#标识符的书写有几个特征&quot; class=&quot;headerlink&quot; title=&quot;标识符的书写有几个特征&quot;&gt;&lt;/a&gt;标识符的书写有几个特征&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;区分大小写&lt;/li&gt;
&lt;li&gt;第一个字符必须是字母、下划线（_）、或者是$&lt;/li&gt;
&lt;li&gt;后面的可以是字母、数字、下划线、$
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ajax" scheme="http://yoursite.com/tags/ajax/"/>
    
      <category term="json" scheme="http://yoursite.com/tags/json/"/>
    
      <category term="jsonp" scheme="http://yoursite.com/tags/jsonp/"/>
    
  </entry>
  
  <entry>
    <title>CSS基础</title>
    <link href="http://yoursite.com/2017/02/25/css/"/>
    <id>http://yoursite.com/2017/02/25/css/</id>
    <published>2017-02-24T17:48:30.000Z</published>
    <updated>2017-06-06T14:24:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h1><ul>
<li>CSS全称是Cascading Style Sheets,层叠样式表</li>
</ul>
<h2 id="引用CSS"><a href="#引用CSS" class="headerlink" title="引用CSS"></a>引用CSS</h2><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"font-size:16px;color:blue"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">  h1&#123;</div><div class="line">    font-size:16px;</div><div class="line">    color:blue;</div><div class="line">  &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="外部样式"><a href="#外部样式" class="headerlink" title="外部样式"></a>外部样式</h3><h4 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"index.css"</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">	@import url("index.css");</div><div class="line">	@import "index.css";</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="浏览器F12"><a href="#浏览器F12" class="headerlink" title="浏览器F12"></a>浏览器F12</h2><ul>
<li>查看浏览器默认样式</li>
<li>查看设置样式</li>
<li>查看html结构<br><img src="http://oqev4hx8u.bkt.clouddn.com/css-2.png" alt="css-2.png"></li>
</ul>
<h2 id="CSS书写规范"><a href="#CSS书写规范" class="headerlink" title="CSS书写规范"></a>CSS书写规范</h2><h3 id="gt-gt-CSS书写规范"><a href="#gt-gt-CSS书写规范" class="headerlink" title="&gt;&gt;CSS书写规范"></a>&gt;&gt;<a href="https://github.com/fex-team/styleguide/blob/master/css.md" target="_blank" rel="external">CSS书写规范</a></h3><hr>
<h1 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h1><h2 id="CSS常见选择器"><a href="#CSS常见选择器" class="headerlink" title="CSS常见选择器"></a>CSS常见选择器</h2><ul>
<li>基础选择器</li>
<li>组合选择器</li>
<li>属性选择器</li>
<li>伪类选择器</li>
<li>伪元素选择器</li>
</ul>
<h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><table>
<thead>
<tr>
<th>选择器</th>
<th>名称/含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>通用选择器,匹配页面任何元素</td>
</tr>
<tr>
<td>#id</td>
<td>id选择器,匹配特定id的元素</td>
</tr>
<tr>
<td>.class</td>
<td>类选择器,匹配class特定类的元素</td>
</tr>
<tr>
<td>element</td>
<td>标签选择器</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">    *&#123;</div><div class="line">      margin:0;</div><div class="line">      padding:0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span#identified &#123;</div><div class="line">      background-color: DodgerBlue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span.classy &#123;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span&#123;</div><div class="line">      background-color: red;</div><div class="line">      color: #fff;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"identified"</span>&gt;</span>Here's a span with some text.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>Here's another.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"classy"</span>&gt;</span>Here's a span with some text.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>Here's another.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>这里是由 span 包裹的一些文字.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这里是由p包裹的一些文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-3.png" alt="css-3.png"></p>
<h3 id="组合选择器"><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h3><table>
<thead>
<tr>
<th>选择器</th>
<th>名称/含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>E,F</td>
<td>多元素选择器,用,分隔,同时匹配元素E或元素F</td>
</tr>
<tr>
<td>E F</td>
<td>后代选择器,用空格分隔,匹配E元素所有的后代元素F(不只是子元素、子元素向下递归)</td>
</tr>
<tr>
<td>E&gt;F</td>
<td>子元素选择器,用&gt;分隔,匹配E元素所有直接子元素</td>
</tr>
<tr>
<td>E+F</td>
<td>直接相邻选择器,匹配E元素之后的相邻的同级元素F</td>
</tr>
<tr>
<td>E~F</td>
<td>普通相邻选择器,匹配E元素之后的同级元素F(无论直接相邻与否)</td>
</tr>
<tr>
<td>.class1.class2</td>
<td>id和class选择器和选择器连写的时候中间没有分隔符,.和#本身充当分隔符的元素</td>
</tr>
<tr>
<td>.element#id</td>
<td>id和class选择器和选择器连写的时候中间没有分隔符,.和#本身充当分隔符的元素</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    h1,h4&#123;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    div p&#123;</div><div class="line">      background-color: green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h2&gt;p&#123;</div><div class="line">      background-color: blue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h5+p&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h6~ul&#123;</div><div class="line">      background-color: orange;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的主页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>我最好的朋友是蜡笔小新<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是唐老鸭<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我住在日本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是米老鼠<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>我住在日本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">h5</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是皮卡丘<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我住在广东<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我住在东京<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">h6</span>&gt;</span>第一段<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h6</span>&gt;</span>另一段<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-4.png" alt="css-4.png"></p>
<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><table>
<thead>
<tr>
<th>选择器</th>
<th>名称/含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>E[attr]</td>
<td>匹配所有具有属性attr的元素，div[id]就能取到所有有id属性的div</td>
</tr>
<tr>
<td>E[attr = value]</td>
<td>匹配属性attr值为value的元素，div[id=test],匹配id=test的div</td>
</tr>
<tr>
<td>E[attr ~= value]</td>
<td>匹配所有属性attr具有多个空格分隔、其中一个值等于value的元素</td>
</tr>
<tr>
<td>E[attr \= value]</td>
<td>匹配所有属性attr为value或是以value-为前缀开头的元素</td>
</tr>
<tr>
<td>E[attr ^= value]</td>
<td>匹配属性attr的值以value开头的元素</td>
</tr>
<tr>
<td>E[attr $= value]</td>
<td>匹配属性attr的值以value结尾的元素</td>
</tr>
<tr>
<td>E[attr *= value]</td>
<td>匹配属性attr的值包含value的元素</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">    </span></div><div class="line">    span[lang]&#123;</div><div class="line">      font-weight:bold;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span[lang="pt"]&#123;</div><div class="line">      color:green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span[lang~="en-us"]&#123;</div><div class="line">      color:blue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    span[lang|="zh"]&#123;</div><div class="line">      color:red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a[href^="#"]&#123;</div><div class="line">      background-color: gold;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a[href$=".cn"]&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a[href*="cnn"]&#123;</div><div class="line">      background-color: #ccc;</div><div class="line">    &#125; </div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello-example"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com"</span>&gt;</span>English:<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">lang</span>=<span class="string">"en-us en-gb en-au en-nz"</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello-example"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#portuguese"</span>&gt;</span>Pottuguese:<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">lang</span>=<span class="string">"pt"</span>&gt;</span>Ola Mundo!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello-example"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.cn"</span>&gt;</span>Chinese (Simplified):<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span>世界您好!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello-example"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.cnn"</span>&gt;</span>Chinese(Traditional):<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">lang</span>=<span class="string">"zh-TW"</span>&gt;</span>世界您好!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-5.png" alt="css-5.png"></p>
<h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><ul>
<li>状态是动态变化,当一个元素达到一个特定状态的时候,它得到一个伪类的样式,它是基于文档之外的抽象,不会改变DOM的内容,只是插入一些修饰类的元素,对用户可见,对DOM不可见</li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>名称/含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>E:first-child</td>
<td>匹配元素E的第一个子元素</td>
</tr>
<tr>
<td>E:link</td>
<td>匹配所有未被点击的链接</td>
</tr>
<tr>
<td>E:visited</td>
<td>匹配所有已被点击的链接</td>
</tr>
<tr>
<td>E:active</td>
<td>匹配鼠标已经其上按下、还没有释放的E元素</td>
</tr>
<tr>
<td>E:hover</td>
<td>匹配鼠标悬停其上的E元素</td>
</tr>
<tr>
<td>E:focus</td>
<td>匹配获得当前焦点的E元素</td>
</tr>
<tr>
<td>E:lang(c)</td>
<td>匹配lang属性等于c的E元素</td>
</tr>
<tr>
<td>E:enabled</td>
<td>匹配表单中可用的元素</td>
</tr>
<tr>
<td>E:disabled</td>
<td>匹配表单中禁用的元素</td>
</tr>
<tr>
<td>E:checked</td>
<td>匹配表单中被选中的radio或checkbox元素</td>
</tr>
<tr>
<td>E::selection</td>
<td>匹配用户当前选中的元素</td>
</tr>
<tr>
<td>E:root</td>
<td>匹配文档的根元素，对于HTML文档，就是HTML元素</td>
</tr>
<tr>
<td>E:nth-child(n)</td>
<td>匹配其父元素的第n个子元素，第一个编号为1</td>
</tr>
<tr>
<td>E:nth-last-child(n)</td>
<td>匹配其父元素的倒数第n个子元素，第一个编号为1</td>
</tr>
<tr>
<td>E:nth-of-type(n)</td>
<td>与:nth-child()作用类似，但是仅匹配使用同种标签的元素</td>
</tr>
<tr>
<td>E:nth-last-of-type(n)</td>
<td>与:nth-last-child() 作用类似，但是仅匹配使用同种标签的元素</td>
</tr>
<tr>
<td>E:last-child</td>
<td>匹配父元素的最后一个子元素，等同于:nth-last-child(1)</td>
</tr>
<tr>
<td>E:first-of-type</td>
<td>匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1)</td>
</tr>
<tr>
<td>E:last-of-type</td>
<td>匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)</td>
</tr>
<tr>
<td>E:only-child</td>
<td>匹配父元素下仅有的一个子元素，等同于:first-child:last-child或 :nth-child(1):nth-last-child(1)</td>
</tr>
<tr>
<td>E:only-of-type</td>
<td>匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或 :nth-of-type(1):nth-last-of-type(1)</td>
</tr>
<tr>
<td>E:empty</td>
<td>匹配一个不包含任何子元素的元素，文本节点也被看作子元素</td>
</tr>
<tr>
<td>E:not(selector)</td>
<td>匹配不符合当前选择器的任何元素</td>
</tr>
</tbody>
</table>
<ul>
<li>n的取值</li>
<li>1，2，3，4，5</li>
<li>2n+1, 2n, 4n-1</li>
<li>odd, even</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    span:first-child&#123;</div><div class="line">      background-color: lime;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a:link&#123;</div><div class="line">      color: lightblue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a:visited&#123;</div><div class="line">      color: green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a:active&#123;</div><div class="line">      color:red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    a:hover&#123;</div><div class="line">      color:blue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    .first-name:focus&#123;</div><div class="line">      color:red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    div:lang(fr)&#123;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    input:enabled&#123;</div><div class="line">      color:blue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    input:disabled&#123;</div><div class="line">      color:red;</div><div class="line">    &#125;</div><div class="line">    //只有opera支持checked</div><div class="line">    input[type="radio"]:checked&#123;</div><div class="line">      color:green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ::selection&#123;</div><div class="line">      color:red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    :root&#123;</div><div class="line">      background-color: #ccc;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>This span is limed!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>This span is not.:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"first-name"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"I'll be red when focused"</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">lang</span>=<span class="string">"fr"</span>&gt;</span>我是fr<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"FirstField"</span>&gt;</span>First field(enabled):<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"FirstField"</span> <span class="attr">value</span>=<span class="string">"Lorem"</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"SecondField"</span>&gt;</span>Second field(disabled):<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"SecondField"</span> <span class="attr">value</span>=<span class="string">"Ipasum"</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">name</span>=<span class="string">"gender"</span> /&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">name</span>=<span class="string">"gender"</span> /&gt;</span> Female<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> <span class="attr">value</span>=<span class="string">"Bike"</span> /&gt;</span> I have a bike<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"Car"</span> /&gt;</span> I have a car </div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">h5</span>&gt;</span>请试着选取页面上的文本<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-6.png" alt="css-6.png"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    *&#123;</div><div class="line">      margin:0;</div><div class="line">      padding:0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:nth-child(2)&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:nth-last-child(2)&#123;</div><div class="line">      background-color: green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第三个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第四个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-7.png" alt="css-7.png"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    *&#123;</div><div class="line">      margin:0;</div><div class="line">      padding:0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:nth-of-type(2)&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:last-child&#123;</div><div class="line">      background-color: green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:first-of-type&#123;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第三个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第四个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-8.png" alt="css-8.png"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    *&#123;</div><div class="line">      margin:0;</div><div class="line">      padding:0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p:last-of-type&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h4:only-child&#123;</div><div class="line">      background-color: blue;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h3:only-of-type&#123;</div><div class="line">      background-color: green;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h2:empty&#123;</div><div class="line">      height: 30px;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h6:not(.classy)&#123;</div><div class="line">      background-color: gray;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第三个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>第四个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是结尾<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是一个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是一个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">h6</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">"classx"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">"classy"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-9.png" alt="css-9.png"></p>
<h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><ul>
<li>伪元素用于向某些选择器设置特殊效果,如果需要加新元素加以标识就选择伪元素</li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>E::first-line</td>
<td>匹配E元素内容的第一行</td>
</tr>
<tr>
<td>E::first-letter</td>
<td>匹配E元素内容的第一个字母</td>
</tr>
<tr>
<td>E::before</td>
<td>在E元素之前插入生成的内容</td>
</tr>
<tr>
<td>E::after</td>
<td>在E元素之后插入生成的内容</td>
</tr>
</tbody>
</table>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    h4::first-line&#123;</div><div class="line">      background-color: yellow;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    h4::first-letter&#123;</div><div class="line">      background-color: red;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p::before&#123;</div><div class="line">      content:"台词:"</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    p::after&#123;</div><div class="line">      content:"-结尾"</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span>曾经在奥巴马身边做过保镖的特工约翰·威尔斯最近就在网上分享了一些奥巴马生活的点滴。在2007年3月至2008年11月期间，威尔斯曾经在奥巴马身边工作。当时，美国特勤局为每位总统候选人都指派了特工负责安保，在大选季期间跟着候选人到处出行，在人群扎堆的地方保护他们的安全。奥巴马当时还是参议员，威尔斯透露，特勤局为他增加了保护人手，因为他是黑人，受到的安全威胁更多。<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是唐老鸭<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我住在日本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-10.png" alt="css-10.png"></p>
<h2 id="选择器的优先级"><a href="#选择器的优先级" class="headerlink" title="选择器的优先级"></a>选择器的优先级</h2><h3 id="优先级从高到低依次为"><a href="#优先级从高到低依次为" class="headerlink" title="优先级从高到低依次为"></a>优先级从高到低依次为</h3><ul>
<li>在属性后面使用!important,会覆盖页面内任何位置定义的元素样式</li>
<li>作为style属性写在元素标签上的内联样式</li>
<li>id选择器</li>
<li>类选择器</li>
<li>伪类选择器</li>
<li>属性选择器</li>
<li>标签选择器</li>
<li>通配符选择器</li>
<li>浏览器自定义</li>
</ul>
<blockquote>
<ul>
<li>定位的越精准,优先级就越高,优先级高的样式会覆盖优先级低的</li>
</ul>
</blockquote>
<h2 id="class和id选择器的使用场景"><a href="#class和id选择器的使用场景" class="headerlink" title="class和id选择器的使用场景"></a>class和id选择器的使用场景</h2><ul>
<li>class名称可以重复,一般用于给多个元素赋予同样的样式;增加一个同名的class类就可以添加同样的样式,简化代码</li>
<li>id名称是唯一的,一般用于划分大的区块</li>
</ul>
<h2 id="CSS选择器的命名空间"><a href="#CSS选择器的命名空间" class="headerlink" title="CSS选择器的命名空间"></a>CSS选择器的命名空间</h2><ul>
<li>使用语义化的命名可以使代码容易读懂</li>
<li>便于维护和多人协作</li>
<li>浏览器可能会因为不规范的命名产生不同的样式</li>
</ul>
<h2 id="列出你知道的伪类选择器"><a href="#列出你知道的伪类选择器" class="headerlink" title="列出你知道的伪类选择器"></a>列出你知道的伪类选择器</h2><ul>
<li>E:first-child | E:link | E:visited |E:active |E:hover |E:focus |E:lang(c) |E:enabled |E:disabled |E:checked |E::selection |E:root |E:nth-child(n) |E:nth-last-child(n) |E:nth-of-type(n) |E:nth-last-of-type(n) |E:last-child |E:first-of-type |E:last-of-type |E:only-child |E:only-of-type |E:empty |E:not(selector) |</li>
</ul>
<h2 id="first-child和-first-of-type的作用和区别"><a href="#first-child和-first-of-type的作用和区别" class="headerlink" title=":first-child和:first-of-type的作用和区别"></a>:first-child和:first-of-type的作用和区别</h2><ul>
<li>E:first-child首选是E的父元素中的第一个子元素，在这些子元素中选中E标签；E:first-of-type首选是E的父元素的第一个同类型的（E）标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">    div:first-of-type&#123;</div><div class="line">     color: red;</div><div class="line">    &#125;</div><div class="line">    div:first-child&#123;</div><div class="line">     color: green;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是标题1<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是第一个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是第二个<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-11.png" alt="css-11.png"></p>
<h2 id="以下选择器分别是什么意思"><a href="#以下选择器分别是什么意思" class="headerlink" title="以下选择器分别是什么意思?"></a>以下选择器分别是什么意思?</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#header&#123;</div><div class="line">&#125;    /* id选择器，选择id名称为header的元素 */</div><div class="line">.header&#123;</div><div class="line">&#125;   /* class选择器，选择class名称为header的元素 */</div><div class="line">.header .logo&#123;</div><div class="line">&#125;   /* 后代选择器，选择class名称为header元素的后代元素中class名称为logo的所有元素 */</div><div class="line">.header.mobile&#123;</div><div class="line">&#125;   /* 类选择器，选择class类同时具有header和mobile的元素 */</div><div class="line">.header p, .header h3&#123;</div><div class="line">&#125;   /* 多元素选择器，选择header中的p和h3元素 */</div><div class="line">#header .nav&gt;li&#123;</div><div class="line">&#125;   /* 后代选择器，选择id为header的后代元素中class为nav的直接子元素（也就是nav的最外层子元素，即第一代子元素）li */</div><div class="line">#header a:hover&#123;</div><div class="line">&#125;   /* 后代元素选择器，选择id为header的所有后代元素a的鼠标悬停的效果 */</div></pre></td></tr></table></figure>
<h2 id="运行如下代码，解析下输出样式的原因"><a href="#运行如下代码，解析下输出样式的原因" class="headerlink" title="运行如下代码，解析下输出样式的原因"></a>运行如下代码，解析下输出样式的原因</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">  .item1:first-child&#123;</div><div class="line">    color: red;</div><div class="line">  &#125;</div><div class="line">  .item1:first-of-type&#123;</div><div class="line">    background: blue;</div><div class="line">  &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ct"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-12.png" alt="css-12.png"></p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><ul>
<li>蓝色背景：样式里面设置了first-of-type，也就是第一个类型的元素将应用为蓝色背景，而第一个类型就是p和h3，h3有2个，取第一个</li>
<li>红色字：first-child是指后代中第一个子元素，第一个子元素是p，所以只是p应用了红色字</li>
</ul>
<h2 id="text-align-center的作用"><a href="#text-align-center的作用" class="headerlink" title="text-align:center的作用"></a>text-align:center的作用</h2><ul>
<li>使块级元素内部的文本或者img标签等内联元素居中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    div&#123;</div><div class="line">      text-align: center;</div><div class="line">    &#125;   </div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://oqev4hx8u.bkt.clouddn.com/css-13.png"</span> <span class="attr">alt</span>=<span class="string">"图片"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/css-14.png" alt="css-14.png"></p>
<h2 id="查询属性兼容性"><a href="#查询属性兼容性" class="headerlink" title="查询属性兼容性"></a>查询属性兼容性</h2><ul>
<li>输入属性后点show all</li>
</ul>
<h3 id="gt-gt-caniuse-com"><a href="#gt-gt-caniuse-com" class="headerlink" title="&gt;&gt;caniuse.com"></a>&gt;&gt;<a href="http://caniuse.com/#search=display%3Ainline" target="_blank" rel="external">caniuse.com</a></h3><hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS基础&quot;&gt;&lt;a href=&quot;#CSS基础&quot; class=&quot;headerlink&quot; title=&quot;CSS基础&quot;&gt;&lt;/a&gt;CSS基础&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CSS全称是Cascading Style Sheets,层叠样式表&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;引用CSS&quot;&gt;&lt;a href=&quot;#引用CSS&quot; class=&quot;headerlink&quot; title=&quot;引用CSS&quot;&gt;&lt;/a&gt;引用CSS&lt;/h2&gt;&lt;h3 id=&quot;内联样式&quot;&gt;&lt;a href=&quot;#内联样式&quot; class=&quot;headerlink&quot; title=&quot;内联样式&quot;&gt;&lt;/a&gt;内联样式&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size:16px;color:blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础</title>
    <link href="http://yoursite.com/2017/02/23/html/"/>
    <id>http://yoursite.com/2017/02/23/html/</id>
    <published>2017-02-22T17:42:52.000Z</published>
    <updated>2017-06-06T14:25:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从URL到页面展现的过程"><a href="#从URL到页面展现的过程" class="headerlink" title="从URL到页面展现的过程"></a>从URL到页面展现的过程</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>地址栏输入URL</li>
<li>域名解析<a id="more"></a> </li>
<li>服务器处理请求</li>
<li>网站处理</li>
<li>浏览器处理响应</li>
<li>浏览器绘制网页 </li>
</ul>
<h2 id="输入URL"><a href="#输入URL" class="headerlink" title="输入URL"></a>输入URL</h2><ul>
<li>URL(Uniform Resoure Locator)统一资源定位符,分为协议、网络地址、资源路径,用于定位互联网上的资源,即网址  </li>
</ul>
<h3 id="协议-浏览器和万维网之间的约定"><a href="#协议-浏览器和万维网之间的约定" class="headerlink" title="协议:浏览器和万维网之间的约定"></a>协议:浏览器和万维网之间的约定</h3><ul>
<li>http:找到网络上资源的协议</li>
<li>https:对http进行加密的协议</li>
<li>file:定位本地电脑文件的协议</li>
<li>ftp:文件的传输协议  </li>
</ul>
<h3 id="网络地址-指示连接哪台计算机-可以是域名或者IP地址-可以包括端口号"><a href="#网络地址-指示连接哪台计算机-可以是域名或者IP地址-可以包括端口号" class="headerlink" title="网络地址:指示连接哪台计算机,可以是域名或者IP地址,可以包括端口号"></a>网络地址:指示连接哪台计算机,可以是域名或者IP地址,可以包括端口号</h3><h3 id="资源路径-指示从服务器上获取哪一项资源"><a href="#资源路径-指示从服务器上获取哪一项资源" class="headerlink" title="资源路径:指示从服务器上获取哪一项资源"></a>资源路径:指示从服务器上获取哪一项资源</h3><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><pre><code>http://www.baidu.com/question/12345/
协议:http
网络地址:www.baidu.com
资源路径:/question/12345/
</code></pre><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><ul>
<li>我们是通过域名访问,浏览器对域名解析成对应IP地址,找到计算机  </li>
</ul>
<h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><ul>
<li>IP地址为互联网上每一个网络和每一台主机分配的一个逻辑地址,如220.181.112.244  </li>
</ul>
<h3 id="域名DN-domain-name"><a href="#域名DN-domain-name" class="headerlink" title="域名DN(domain name)"></a>域名DN(domain name)</h3><ul>
<li>域名是为了识别主机名称和组织机构名称的一种具有分层的名称,如www.baidu.com  </li>
</ul>
<h3 id="计算机域名系统DNS-Domain-Name-System-or-Domain-Name-Service"><a href="#计算机域名系统DNS-Domain-Name-System-or-Domain-Name-Service" class="headerlink" title="计算机域名系统DNS(Domain Name System or Domain Name Service)"></a>计算机域名系统DNS(Domain Name System or Domain Name Service)</h3><ul>
<li>主要是用于保存网络中所有主机的域名和对应IP地址,并具有将域名转换为IP地址功能的服务器,它是由域名解析器和域名服务器组成  </li>
</ul>
<h3 id="域名解析的流程-如下"><a href="#域名解析的流程-如下" class="headerlink" title="域名解析的流程,如下"></a>域名解析的流程,如下</h3><ul>
<li>浏览器缓存——浏览器会缓存DNS记录一段时间</li>
<li>系统缓存——从Hosts文件查找是否有该域名和对应IP</li>
<li>路由器缓存——一般路由器也会缓存域名信息</li>
<li>ISP DNS 缓存——比如到电信的DNS上查找缓存(DNS劫持)</li>
<li>如果都没有找到,则向根域名服务器查找域名对应IP，根域名服务器把请求转发到下一级，直到找到IP  </li>
</ul>
<blockquote>
<ul>
<li>域名与 URL 是两个概念:域名是一台或一组服务器的名称,用来确定服务器在 Internet 上的位置；URL 是统一资源定位符,用来确定某一个文件的具体位置,例如，zhihu.com 是 知乎 的域名，根据这个域名可以找到知乎的服务器， zhihu.com/people/Compile 是 URL ,可以根据这个 URL 定位我的知乎主页</li>
<li>IP 地址与域名不是一一对应的关系:可以把多个提供相同服务的服务器 IP 设置为同一个域名,但在同一时刻一个域名只能解析出一个 IP地址；同时,一个 IP 地址可以绑定多个域名,数量不限</li>
</ul>
</blockquote>
<h2 id="服务器处理请求"><a href="#服务器处理请求" class="headerlink" title="服务器处理请求"></a>服务器处理请求</h2><ul>
<li>服务器上会有安装用于接收处理请求的应用——web server（常见的webserver产品有apache、nginx等）,并且决定采用哪种方法来处理这个请求</li>
<li>网页请求是一个单向请求的过程，即是一个主机向服务器请求数据，服务器返回相应的数据的过程。</li>
<li>web server 担任管控的角色，对于不同用户发送的请求，会结合配置文件，把不同请求委托给服务器上处理对应请求的程序进行处理（例如JSP脚本，服务器端JavaScript等一些服务器端技术），然后返回后台程序处理产生的结果作为响应</li>
<li>浏览器根据 URL 内容生成 HTTP 请求，请求中包含请求文件的位置、请求文件的方式等</li>
<li>服务器响应请求，将数据（可能是根据HTML协议组织的网页，包含页面的布局、文字等）返回给浏览器</li>
<li>如果返回的是一个页面，根据页面里一些外链的URL，例如图片的地址，它会按照之前的步骤以及第二步中忽略的请求部分再次获取</li>
</ul>
<h2 id="网站处理响应"><a href="#网站处理响应" class="headerlink" title="网站处理响应"></a>网站处理响应</h2><ul>
<li>网站处理，就是实际后台处理的工作</li>
</ul>
<h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><ul>
<li>MVC是一种设计模式,模型（model）–视图（view）–控制器（controller）,它们各自处理自己的任务，实现输入、处理和输出的分离</li>
<li>最上面的一层-视图（view）:视图是直接面向用户的一层，是前端工作的主力部分</li>
<li>最底下的一层-模型（model）:模型是将实际开发中的业务规则和所涉及的数据格式模型化，应用于模型的代码只需写一次就可以被多个视图重用。在MVC的三个部件中，模型拥有最多的处理任务。一个模型能为多个视图提供数据</li>
<li>中间的一层-控制器（controller）:它负责根据用户从”视图层”输入的指令，选取”数据层”中的数据，然后对其进行相应的操作，产生最终结果<br><img src="http://oqev4hx8u.bkt.clouddn.com/html-1.png" alt="html-1.png"></li>
</ul>
<blockquote>
<ul>
<li><p>首先，控制器（controller）接收用户请求，并决定调用哪种模型来进行处理</p>
</li>
<li><p>然后，模型（model）用业务逻辑来处理用户的请求并返回数据</p>
</li>
<li><p>最后，控制器（controller）用相应的视图格式化模型返回html字符串给浏览器，浏览器呈现网页给用户。这部分完成后，就要开始接下来的浏览器处理部分</p>
</li>
</ul>
</blockquote>
<h2 id="浏览器处理"><a href="#浏览器处理" class="headerlink" title="浏览器处理"></a>浏览器处理</h2><ul>
<li>现代浏览器渲染页面的过程是这样的：解析HTML以构建DOM树 –&gt; 构建渲染树 –&gt; 布局渲染树 –&gt; 绘制渲染树</li>
</ul>
<h3 id="浏览器渲染步骤"><a href="#浏览器渲染步骤" class="headerlink" title="浏览器渲染步骤"></a>浏览器渲染步骤</h3><h4 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h4><ul>
<li>浏览器对一个html页面的加载顺序是从上而下的，并在加载过程并行进行解析渲染处理。在这个过程中遇到link标签、image标签、script标签时，浏览器会再次向服务器发送请求获取CSS文件、图片资源、JS文件，并执行JS代码，同步进行加载解析</li>
</ul>
<h4 id="解析、渲染"><a href="#解析、渲染" class="headerlink" title="解析、渲染"></a>解析、渲染</h4><ul>
<li>解析的过程，其实就是生成解析树，即DOM树。DOM树是由DOM元素及属性节点组成，加上CSS解析的样式对象和js解析后的动作实现。而渲染，就是将DOM树进行可视化表示</li>
</ul>
<h2 id="网页展示"><a href="#网页展示" class="headerlink" title="网页展示"></a>网页展示</h2><ul>
<li>浏览器通过上面步骤计算得到渲染树，是DOM树的可视化表示，构建渲染树使页面以正确的顺序绘制出来</li>
<li>浏览器下载的顺序是从上到下，渲染的顺序也是从上到下，下载和渲染同时进行</li>
</ul>
<h3 id="网页展示步骤"><a href="#网页展示步骤" class="headerlink" title="网页展示步骤"></a>网页展示步骤</h3><ul>
<li>解析html成DOM树</li>
<li>解析html中的css，构建渲染树。完成后浏览器开始布局渲染树并绘制到屏幕</li>
<li>解析JavaScript，解析到的时候执行（JS的解析由浏览器中的JS解析引擎完成）</li>
</ul>
<h3 id="gt-gt-从URL到页面展现的过程"><a href="#gt-gt-从URL到页面展现的过程" class="headerlink" title="&gt;&gt;从URL到页面展现的过程"></a>&gt;&gt;<a href="http://www.cnblogs.com/xianyulaodi/p/6547807.html" target="_blank" rel="external">从URL到页面展现的过程</a></h3><hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;从URL到页面展现的过程&quot;&gt;&lt;a href=&quot;#从URL到页面展现的过程&quot; class=&quot;headerlink&quot; title=&quot;从URL到页面展现的过程&quot;&gt;&lt;/a&gt;从URL到页面展现的过程&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;地址栏输入URL&lt;/li&gt;
&lt;li&gt;域名解析
    
    </summary>
    
      <category term="HTML" scheme="http://yoursite.com/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>vim、linus、git命令行</title>
    <link href="http://yoursite.com/2017/02/21/gitlinuxvim/"/>
    <id>http://yoursite.com/2017/02/21/gitlinuxvim/</id>
    <published>2017-02-20T17:58:48.000Z</published>
    <updated>2017-06-04T15:39:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><ul>
<li>vim是一个操作文本的编辑器,对文本进行添加、删除、复制、粘贴.</li>
</ul>
<h2 id="常用命令入门"><a href="#常用命令入门" class="headerlink" title="常用命令入门"></a>常用命令入门</h2><ul>
<li>查看文件：<strong>cat test.html</strong>  <a id="more"></a></li>
<li>查看并编辑：<strong>vim test.html</strong> ,按下 <strong>i</strong> 会发现左下角出现 –INSERT– 表示可以输入内容</li>
<li>保存文件：按 <strong>esc</strong> , <strong>shift +</strong> : ,左下角出现 : ,输入 <strong>w</strong> 表示保存 ,输入 <strong>q</strong> 表示退出 ,输入 <strong>wq</strong> 表示保存退出</li>
<li>光标操作：按 <strong>esc</strong> ,使用 <strong>k</strong> 上一行, <strong>j</strong> 下一行 , <strong>h</strong> 向前, <strong>l</strong> 向后,也可以使用键盘箭头键来实现</li>
<li>删除内容：按 <strong>esc</strong> ,使用光标移动到想要删除的位置 <strong>dd</strong> 删除当前行, <strong>x</strong> 删除当前一个, <strong>5x</strong>删除后面5个, <strong>5X</strong> 删除前面5个, <strong>u</strong> 恢复前一次操作  </li>
<li>快速翻页：按 <strong>ctrl + d</strong> 向下滚动半屏, <strong>ctrl + u</strong> 向上滚动半屏, <strong>ctrl + f</strong> 向下滚动一屏, <strong>ctrl + d</strong> 向上滚动半屏</li>
<li>给文本添加行号: 按 <strong>esc</strong> ,输入 <strong>:set nu</strong> , <strong>ctrl + g</strong> 显示此时光标所在位置的行号和总列数,输入 <strong>:set nonu</strong>取消行号,快速切换行号按 <strong>esc</strong> ,输入 <strong>: 0</strong> 切换到头部,例如输入<strong>:20</strong>光标切换到20行号位置.</li>
<li>跳转段落结尾: 按 <strong>esc</strong> , <strong>shift + (</strong> 跳转到上一段落, <strong>shift +)</strong> 跳转到后一段落 </li>
<li>实现复制和粘贴: 按 <strong>esc</strong> ,在光标所在位置按下 <strong>yy</strong> 表示复制当前行 , <strong>p</strong> 表示粘贴    </li>
<li>查找某个字符串: 按<strong>esc</strong> , 输入<strong>:/foo</strong> 表示搜索字符串foo</li>
</ul>
<h2 id="常用命令基础"><a href="#常用命令基础" class="headerlink" title="常用命令基础"></a>常用命令基础</h2><h3 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>h,j,k,l</td>
<td>分别表示左,下,右,上</td>
</tr>
<tr>
<td>ctrl + f</td>
<td>上一页</td>
</tr>
<tr>
<td>ctrl + b</td>
<td>下一页</td>
</tr>
<tr>
<td>o</td>
<td>开启新的一行</td>
</tr>
<tr>
<td>^</td>
<td>一行的开始</td>
</tr>
<tr>
<td>$</td>
<td>一行的结尾</td>
</tr>
<tr>
<td>gg</td>
<td>文档的第一行</td>
</tr>
<tr>
<td>[N]G</td>
<td>文档的第N行或者最后一行</td>
</tr>
</tbody>
</table>
<h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>分别表示左,下,右,上</td>
</tr>
<tr>
<td>J</td>
<td>合并下一行到上一行</td>
</tr>
<tr>
<td>s</td>
<td>删除光标所在的一个字符,光标还在当行</td>
</tr>
<tr>
<td>S</td>
<td>删除光标所在的一行,光标还在当行,不同于dd</td>
</tr>
<tr>
<td>u</td>
<td>撤销上一步操作</td>
</tr>
<tr>
<td>ctrl + r</td>
<td>恢复上一步操作</td>
</tr>
<tr>
<td>.</td>
<td>重复最后一个命令 </td>
</tr>
<tr>
<td>~</td>
<td>变换为大写</td>
</tr>
</tbody>
</table>
<h3 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>插入到光标前面</td>
</tr>
<tr>
<td>I</td>
<td>插入到行的开始位置</td>
</tr>
<tr>
<td>a</td>
<td>插入到光标的后面</td>
</tr>
<tr>
<td>A</td>
<td>插入到行的最后位置</td>
</tr>
<tr>
<td>o,O</td>
<td>新开一行</td>
</tr>
<tr>
<td>Esc</td>
<td>关闭插入模式</td>
</tr>
</tbody>
</table>
<h3 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>:w</td>
<td>保存</td>
</tr>
<tr>
<td>:wq</td>
<td>保存并关闭</td>
</tr>
<tr>
<td>:q</td>
<td>关闭(已保存)</td>
</tr>
<tr>
<td>:q!</td>
<td>强制关闭</td>
</tr>
</tbody>
</table>
<h3 id="剪切-赋值"><a href="#剪切-赋值" class="headerlink" title="剪切/赋值"></a>剪切/赋值</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>v</td>
<td>选中一个或多个字符</td>
</tr>
<tr>
<td>V</td>
<td>选中一行</td>
</tr>
<tr>
<td>dd</td>
<td>删除一行</td>
</tr>
<tr>
<td>dw</td>
<td>删除一个单词</td>
</tr>
<tr>
<td>x</td>
<td>删除后一个字符</td>
</tr>
<tr>
<td>X</td>
<td>删除前一个字符</td>
</tr>
<tr>
<td>D</td>
<td>删除一行最后一个字符</td>
</tr>
<tr>
<td>[N]yy</td>
<td>复制一行或者N行</td>
</tr>
<tr>
<td>yw</td>
<td>复制一个单词</td>
</tr>
<tr>
<td>p</td>
<td>粘贴</td>
</tr>
</tbody>
</table>
<h3 id="gt-gt-简明vim命令行"><a href="#gt-gt-简明vim命令行" class="headerlink" title="&gt;&gt;简明vim命令行"></a>&gt;&gt;<a href="http://www.cnblogs.com/xianyulaodi/p/6547807.html" target="_blank" rel="external">简明vim命令行</a></h3><hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;vim是一个操作文本的编辑器,对文本进行添加、删除、复制、粘贴.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;常用命令入门&quot;&gt;&lt;a href=&quot;#常用命令入门&quot; class=&quot;headerlink&quot; title=&quot;常用命令入门&quot;&gt;&lt;/a&gt;常用命令入门&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;查看文件：&lt;strong&gt;cat test.html&lt;/strong&gt;
    
    </summary>
    
      <category term="命令行" scheme="http://yoursite.com/categories/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>自学准备工作</title>
    <link href="http://yoursite.com/2017/02/20/web/"/>
    <id>http://yoursite.com/2017/02/20/web/</id>
    <published>2017-02-19T17:39:17.000Z</published>
    <updated>2017-06-07T13:50:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web前端开发职能"><a href="#web前端开发职能" class="headerlink" title="web前端开发职能"></a>web前端开发职能</h1><h2 id="职能"><a href="#职能" class="headerlink" title="职能"></a>职能</h2><ul>
<li>web前端工程师主要是 利用HTML CSS 及JS等WBE技术及与后端配合，实现网页页面的呈现、具备交互的功能以满足用户的需求.<a id="more"></a>  
</li>
</ul>
<h2 id="常见简称"><a href="#常见简称" class="headerlink" title="常见简称"></a>常见简称</h2><ul>
<li>PM：项目经理  </li>
<li>PD：产品经理</li>
<li>UE：交互设计师、视觉设计师  </li>
<li>RD：后端工程师、前端工程师、无线工程师  </li>
<li>QA：测试工程师  </li>
<li>OP：运维工程师</li>
</ul>
<h2 id="互联网公司产品流程"><a href="#互联网公司产品流程" class="headerlink" title="互联网公司产品流程"></a>互联网公司产品流程</h2><ul>
<li>项目经理提出需求,开会审核</li>
<li>设计定稿</li>
<li>前端工程师和后端工程师进行开发</li>
<li>进行自测、联调、测试（满足冒烟测试、回归测试）</li>
<li>上线</li>
<li>上线观察—项目总结</li>
</ul>
<hr>
<h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><ul>
<li>sublime编辑器</li>
</ul>
<h2 id="gt-gt-sublime使用"><a href="#gt-gt-sublime使用" class="headerlink" title="&gt;&gt;sublime使用"></a>&gt;&gt;<a href="http://www.jb51.net/softjc/87907.html" target="_blank" rel="external">sublime使用</a></h2><hr>
<h1 id="markdowm常用语法"><a href="#markdowm常用语法" class="headerlink" title="markdowm常用语法"></a>markdowm常用语法</h1><ul>
<li>Markdown是一种轻量级的「标记语言」而且轻松的导出 HTML、PDF 和本身的 .md 文件，用起来非常方便。  </li>
<li>常用语法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"># 一级标题 h1</div><div class="line">## 二级标题 h2</div><div class="line">### 三级标题 h3</div><div class="line">#### 四级标题 h4</div><div class="line">##### 五级标题 h5</div><div class="line"></div><div class="line">这是段落 p</div><div class="line"></div><div class="line">- 无序列表</div><div class="line">- 无序列表</div><div class="line">- 无序列表</div><div class="line"></div><div class="line">1. 有序列表</div><div class="line">2. 有序列表</div><div class="line">3. 有序列表</div><div class="line"></div><div class="line">`var a = 1`</div><div class="line"></div><div class="line">[链接文字](http://www.baidu.com)</div><div class="line"></div><div class="line">![](http://www.baidu.com/imgs/a.png)</div><div class="line"></div><div class="line">&gt; 引用</div><div class="line"></div><div class="line">| 表头 | 表头 | 表头 |</div><div class="line">| --- | --- | ---  |</div><div class="line">| 内容 | 内容 | 内容 |</div><div class="line">| 内容 | 内容 | 内容 |</div></pre></td></tr></table></figure>
<h3 id="gt-gt-markdowm官网"><a href="#gt-gt-markdowm官网" class="headerlink" title="&gt;&gt;markdowm官网"></a>&gt;&gt;<a href="http://wowubuntu.com/markdown/#p" target="_blank" rel="external">markdowm官网</a></h3><hr>
<h1 id="GitHub-hexo-博客"><a href="#GitHub-hexo-博客" class="headerlink" title="GitHub+hexo(博客)"></a>GitHub+hexo(博客)</h1><ul>
<li>本博客</li>
</ul>
<h3 id="gt-gt-手把手教你用Hexo-Github-搭建属于自己的博客"><a href="#gt-gt-手把手教你用Hexo-Github-搭建属于自己的博客" class="headerlink" title="&gt;&gt;手把手教你用Hexo+Github 搭建属于自己的博客"></a>&gt;&gt;<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a></h3><hr>
<h1 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h1><ul>
<li>Green </li>
</ul>
<h3 id="gt-gt-Green官网"><a href="#gt-gt-Green官网" class="headerlink" title="&gt;&gt;Green官网"></a>&gt;&gt;<a href="https://www.greenjsq.me" target="_blank" rel="external">Green官网</a></h3><hr>
<h1 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h1><h2 id="二进制的单位"><a href="#二进制的单位" class="headerlink" title="二进制的单位"></a>二进制的单位</h2><ul>
<li>1位(bit):0或1</li>
<li>1字节(byte):00000000-11111111(例如十进制0-9转化字节就是00000000-99999999)</li>
<li>1KB(kilobyte):1024byte</li>
<li>1MB(Megabyte):1024byte x 1024byte</li>
</ul>
<h2 id="计算机存数据"><a href="#计算机存数据" class="headerlink" title="计算机存数据"></a>计算机存数据</h2><ul>
<li>123(原文)</li>
<li>495051(编码)</li>
<li>001100010011001000110011(二进制)</li>
<li>313233(十六进制)</li>
</ul>
<h2 id="键盘上的字符"><a href="#键盘上的字符" class="headerlink" title="键盘上的字符"></a>键盘上的字符</h2><p><img src="http://oqev4hx8u.bkt.clouddn.com/web-1.png" alt="web-1.png"></p>
<h2 id="字符集-简单的ASCII"><a href="#字符集-简单的ASCII" class="headerlink" title="字符集-简单的ASCII"></a>字符集-简单的ASCII</h2><p><img src="http://oqev4hx8u.bkt.clouddn.com/web-2.png" alt="web-2.png"></p>
<h2 id="字符集-容纳全球语言的字符集Unicode"><a href="#字符集-容纳全球语言的字符集Unicode" class="headerlink" title="字符集-容纳全球语言的字符集Unicode"></a>字符集-容纳全球语言的字符集Unicode</h2><p><img src="http://oqev4hx8u.bkt.clouddn.com/web-3.png" alt="web-3.png"></p>
<h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><ul>
<li><p>如何才能区别Unicode和ASCII？<br>计算机怎么知道三个字节表示一个符号，而不是分别表示三个符号呢</p>
</li>
<li><p>资源浪费<br>英文字母只用一个字节表示就够了，如果Unicode统一规定，每个符号用四个字节表示，那么每个英文字母前都必然有3个字节是0，这对于存储来说是极大的浪费，文本文件的大小会因此大出二三倍</p>
</li>
</ul>
<h3 id="解决办法-字符编码"><a href="#解决办法-字符编码" class="headerlink" title="解决办法-字符编码"></a>解决办法-字符编码</h3><ul>
<li>字符集只规定了字符对应的数字，却没有规定如何存储</li>
<li>字符编码是字符集的存储方式</li>
</ul>
<p><img src="http://oqev4hx8u.bkt.clouddn.com/web-4.png" alt="web-4.png"></p>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><blockquote>
<ul>
<li>已知”严”的unicode是4E25（100111000100101）</li>
<li>根据上表，格式是”1110xxxx 10xxxxxx 10xxxxxx”</li>
<li>从后向前填入格式中的x，多出的位补0</li>
<li>得到了”严”的UTF-8编码是”11100100 10111000 10100101”，转换成十六进制就是E4B8A5 </li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;web前端开发职能&quot;&gt;&lt;a href=&quot;#web前端开发职能&quot; class=&quot;headerlink&quot; title=&quot;web前端开发职能&quot;&gt;&lt;/a&gt;web前端开发职能&lt;/h1&gt;&lt;h2 id=&quot;职能&quot;&gt;&lt;a href=&quot;#职能&quot; class=&quot;headerlink&quot; title=&quot;职能&quot;&gt;&lt;/a&gt;职能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;web前端工程师主要是 利用HTML CSS 及JS等WBE技术及与后端配合，实现网页页面的呈现、具备交互的功能以满足用户的需求.
    
    </summary>
    
      <category term="自学准备" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AD%A6%E5%87%86%E5%A4%87/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
